ARM GAS  /tmp/cc1b8X6P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"system_stm32l1xx.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.3 20131129 (release) [ARM/embedded-4_8-
  15              	@	compiled by GNU C version 4.3.6, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc
  18              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Device/ST/STM32L1xx/Include
  19              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Include
  20              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/STM32L1xx_StdPeriph_Driver/inc
  21              	@ -I ./inc -imultilib armv7-m
  22              	@ -iprefix /home/zbanks/gcc-arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.8.3/
  23              	@ -isysroot /home/zbanks/gcc-arm-none-eabi/bin/../arm-none-eabi
  24              	@ -MD src/system_stm32l1xx.d -MF .dep/system_stm32l1xx.o.d -MP
  25              	@ -MQ src/system_stm32l1xx.o -D__USES_INITFINI__ -D STM32L1XX_MD
  26              	@ -D USE_STDPERIPH_DRIVER -D malloc_getpagesize=256 -D RUN_FROM_FLASH=1
  27              	@ src/system_stm32l1xx.c -mcpu=cortex-m3 -mthumb
  28              	@ -auxbase-strip src/system_stm32l1xx.o -g -gdwarf-2 -O0 -Wall
  29              	@ -Wstrict-prototypes -std=c99 -fomit-frame-pointer -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  31              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  32              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse -fgcse-lm
  33              	@ -fgnu-runtime -fident -finline-atomics -fira-hoist-pressure
  34              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  35              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  36              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  37              	@ -fpeephole -fprefetch-loop-arrays -freg-struct-return
  38              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  39              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  40              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  41              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  42              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  43              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  44              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  45              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  46              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  47              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  48              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian
  49              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  50              	@ -mvectorize-with-neon-quad
  51              	
  52              		.text
  53              	.Ltext0:
  54              		.cfi_sections	.debug_frame
  55              		.global	SystemCoreClock
  56              		.data
  57              		.align	2
ARM GAS  /tmp/cc1b8X6P.s 			page 2


  58              		.type	SystemCoreClock, %object
  59              		.size	SystemCoreClock, 4
  60              	SystemCoreClock:
  61 0000 0048E801 		.word	32000000
  62              		.global	PLLMulTable
  63              		.align	2
  64              		.type	PLLMulTable, %object
  65              		.size	PLLMulTable, 9
  66              	PLLMulTable:
  67 0004 03       		.byte	3
  68 0005 04       		.byte	4
  69 0006 06       		.byte	6
  70 0007 08       		.byte	8
  71 0008 0C       		.byte	12
  72 0009 10       		.byte	16
  73 000a 18       		.byte	24
  74 000b 20       		.byte	32
  75 000c 30       		.byte	48
  76              		.global	AHBPrescTable
  77 000d 000000   		.align	2
  78              		.type	AHBPrescTable, %object
  79              		.size	AHBPrescTable, 16
  80              	AHBPrescTable:
  81 0010 00       		.byte	0
  82 0011 00       		.byte	0
  83 0012 00       		.byte	0
  84 0013 00       		.byte	0
  85 0014 00       		.byte	0
  86 0015 00       		.byte	0
  87 0016 00       		.byte	0
  88 0017 00       		.byte	0
  89 0018 01       		.byte	1
  90 0019 02       		.byte	2
  91 001a 03       		.byte	3
  92 001b 04       		.byte	4
  93 001c 06       		.byte	6
  94 001d 07       		.byte	7
  95 001e 08       		.byte	8
  96 001f 09       		.byte	9
  97              		.text
  98              		.align	2
  99              		.global	SystemInit
 100              		.thumb
 101              		.thumb_func
 102              		.type	SystemInit, %function
 103              	SystemInit:
 104              	.LFB56:
 105              		.file 1 "src/system_stm32l1xx.c"
   1:src/system_stm32l1xx.c **** /**
   2:src/system_stm32l1xx.c ****   ******************************************************************************
   3:src/system_stm32l1xx.c ****   * @file    system_stm32l1xx.c
   4:src/system_stm32l1xx.c ****   * @author  MCD Application Team
   5:src/system_stm32l1xx.c ****   * @version V1.0.0
   6:src/system_stm32l1xx.c ****   * @date    29-July-2013
   7:src/system_stm32l1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:src/system_stm32l1xx.c ****   *          This file contains the system clock configuration for STM32L1xx Ultra
   9:src/system_stm32l1xx.c ****   *          Low power devices, and is generated by the clock configuration 
ARM GAS  /tmp/cc1b8X6P.s 			page 3


  10:src/system_stm32l1xx.c ****   *          tool STM32L1xx_Clock_Configuration_V1.1.0.xls
  11:src/system_stm32l1xx.c ****   *             
  12:src/system_stm32l1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:src/system_stm32l1xx.c ****   *     user application:
  14:src/system_stm32l1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:src/system_stm32l1xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:src/system_stm32l1xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:src/system_stm32l1xx.c ****   *                      This function is called at startup just after reset and 
  18:src/system_stm32l1xx.c ****   *                      before branch to main program. This call is made inside
  19:src/system_stm32l1xx.c ****   *                      the "startup_stm32l1xx_xx.s" file.
  20:src/system_stm32l1xx.c ****   *                        
  21:src/system_stm32l1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:src/system_stm32l1xx.c ****   *                                  by the user application to setup the SysTick 
  23:src/system_stm32l1xx.c ****   *                                  timer or configure other parameters.
  24:src/system_stm32l1xx.c ****   *                                     
  25:src/system_stm32l1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:src/system_stm32l1xx.c ****   *                                 be called whenever the core clock is changed
  27:src/system_stm32l1xx.c ****   *                                 during program execution.   
  28:src/system_stm32l1xx.c ****   *      
  29:src/system_stm32l1xx.c ****   * 2. After each device reset the MSI (2.1 MHz Range) is used as system clock source.
  30:src/system_stm32l1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32l1xx_xx.s" file, to
  31:src/system_stm32l1xx.c ****   *    configure the system clock before to branch to main program.    
  32:src/system_stm32l1xx.c ****   *    
  33:src/system_stm32l1xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:src/system_stm32l1xx.c ****   *    function will do nothing and MSI still used as system clock source. User can 
  35:src/system_stm32l1xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.       
  36:src/system_stm32l1xx.c ****   * 
  37:src/system_stm32l1xx.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:src/system_stm32l1xx.c ****   *    in "stm32l1xx.h" file. When HSE is used as system clock source, directly or
  39:src/system_stm32l1xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:src/system_stm32l1xx.c ****   *    value to your own configuration.
  41:src/system_stm32l1xx.c ****   * 
  42:src/system_stm32l1xx.c ****   * 5. This file configures the system clock as follows:  
  43:src/system_stm32l1xx.c ****   *=============================================================================
  44:src/system_stm32l1xx.c ****   *                         System Clock Configuration
  45:src/system_stm32l1xx.c ****   *=============================================================================
  46:src/system_stm32l1xx.c ****   *        System Clock source          | PLL(HSI)
  47:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  48:src/system_stm32l1xx.c ****   *        SYSCLK                       | 32000000 Hz
  49:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  50:src/system_stm32l1xx.c ****   *        HCLK                         | 32000000 Hz
  51:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  52:src/system_stm32l1xx.c ****   *        AHB Prescaler                | 1
  53:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  54:src/system_stm32l1xx.c ****   *        APB1 Prescaler               | 1
  55:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  56:src/system_stm32l1xx.c ****   *        APB2 Prescaler               | 1
  57:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  58:src/system_stm32l1xx.c ****   *        HSE Frequency                | 8000000 Hz
  59:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  60:src/system_stm32l1xx.c ****   *        PLL DIV                      | 2
  61:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  62:src/system_stm32l1xx.c ****   *        PLL MUL                      | 4
  63:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  64:src/system_stm32l1xx.c ****   *        VDD                          | 3.3 V
  65:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  66:src/system_stm32l1xx.c ****   *        Vcore                        | 1.8 V (Range 1)
ARM GAS  /tmp/cc1b8X6P.s 			page 4


  67:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  68:src/system_stm32l1xx.c ****   *        Flash Latency                | 1 WS
  69:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  70:src/system_stm32l1xx.c ****   *        Require 48MHz for USB clock  | Disabled
  71:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  72:src/system_stm32l1xx.c ****   *=============================================================================
  73:src/system_stm32l1xx.c ****   ******************************************************************************
  74:src/system_stm32l1xx.c ****   * @attention
  75:src/system_stm32l1xx.c ****   *
  76:src/system_stm32l1xx.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  77:src/system_stm32l1xx.c ****   *
  78:src/system_stm32l1xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  79:src/system_stm32l1xx.c ****   * You may not use this file except in compliance with the License.
  80:src/system_stm32l1xx.c ****   * You may obtain a copy of the License at:
  81:src/system_stm32l1xx.c ****   *
  82:src/system_stm32l1xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  83:src/system_stm32l1xx.c ****   *
  84:src/system_stm32l1xx.c ****   * Unless required by applicable law or agreed to in writing, software 
  85:src/system_stm32l1xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  86:src/system_stm32l1xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  87:src/system_stm32l1xx.c ****   * See the License for the specific language governing permissions and
  88:src/system_stm32l1xx.c ****   * limitations under the License.
  89:src/system_stm32l1xx.c ****   *
  90:src/system_stm32l1xx.c ****   ******************************************************************************
  91:src/system_stm32l1xx.c ****   */ 
  92:src/system_stm32l1xx.c **** 
  93:src/system_stm32l1xx.c **** /** @addtogroup CMSIS
  94:src/system_stm32l1xx.c ****   * @{
  95:src/system_stm32l1xx.c ****   */
  96:src/system_stm32l1xx.c **** 
  97:src/system_stm32l1xx.c **** /** @addtogroup stm32l1xx_system
  98:src/system_stm32l1xx.c ****   * @{
  99:src/system_stm32l1xx.c ****   */  
 100:src/system_stm32l1xx.c ****   
 101:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Includes
 102:src/system_stm32l1xx.c ****   * @{
 103:src/system_stm32l1xx.c ****   */
 104:src/system_stm32l1xx.c **** 
 105:src/system_stm32l1xx.c **** #include "stm32l1xx.h"
 106:src/system_stm32l1xx.c **** 
 107:src/system_stm32l1xx.c **** /**
 108:src/system_stm32l1xx.c ****   * @}
 109:src/system_stm32l1xx.c ****   */
 110:src/system_stm32l1xx.c **** 
 111:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_TypesDefinitions
 112:src/system_stm32l1xx.c ****   * @{
 113:src/system_stm32l1xx.c ****   */
 114:src/system_stm32l1xx.c **** 
 115:src/system_stm32l1xx.c **** /**
 116:src/system_stm32l1xx.c ****   * @}
 117:src/system_stm32l1xx.c ****   */
 118:src/system_stm32l1xx.c **** 
 119:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Defines
 120:src/system_stm32l1xx.c ****   * @{
 121:src/system_stm32l1xx.c ****   */
 122:src/system_stm32l1xx.c **** 
 123:src/system_stm32l1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
ARM GAS  /tmp/cc1b8X6P.s 			page 5


 124:src/system_stm32l1xx.c ****      Internal SRAM. */ 
 125:src/system_stm32l1xx.c **** /* #define VECT_TAB_SRAM */
 126:src/system_stm32l1xx.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 127:src/system_stm32l1xx.c ****                                   This value must be a multiple of 0x200. */
 128:src/system_stm32l1xx.c **** /**
 129:src/system_stm32l1xx.c ****   * @}
 130:src/system_stm32l1xx.c ****   */
 131:src/system_stm32l1xx.c **** 
 132:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Macros
 133:src/system_stm32l1xx.c ****   * @{
 134:src/system_stm32l1xx.c ****   */
 135:src/system_stm32l1xx.c **** 
 136:src/system_stm32l1xx.c **** /**
 137:src/system_stm32l1xx.c ****   * @}
 138:src/system_stm32l1xx.c ****   */
 139:src/system_stm32l1xx.c **** 
 140:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Variables
 141:src/system_stm32l1xx.c ****   * @{
 142:src/system_stm32l1xx.c ****   */
 143:src/system_stm32l1xx.c **** uint32_t SystemCoreClock    = 32000000;
 144:src/system_stm32l1xx.c **** __I uint8_t PLLMulTable[9] = {3, 4, 6, 8, 12, 16, 24, 32, 48};
 145:src/system_stm32l1xx.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 146:src/system_stm32l1xx.c **** 
 147:src/system_stm32l1xx.c **** /**
 148:src/system_stm32l1xx.c ****   * @}
 149:src/system_stm32l1xx.c ****   */
 150:src/system_stm32l1xx.c **** 
 151:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_FunctionPrototypes
 152:src/system_stm32l1xx.c ****   * @{
 153:src/system_stm32l1xx.c ****   */
 154:src/system_stm32l1xx.c **** 
 155:src/system_stm32l1xx.c **** static void SetSysClock(void);
 156:src/system_stm32l1xx.c **** 
 157:src/system_stm32l1xx.c **** /**
 158:src/system_stm32l1xx.c ****   * @}
 159:src/system_stm32l1xx.c ****   */
 160:src/system_stm32l1xx.c **** 
 161:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Functions
 162:src/system_stm32l1xx.c ****   * @{
 163:src/system_stm32l1xx.c ****   */
 164:src/system_stm32l1xx.c **** 
 165:src/system_stm32l1xx.c **** /**
 166:src/system_stm32l1xx.c ****   * @brief  Setup the microcontroller system.
 167:src/system_stm32l1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 168:src/system_stm32l1xx.c ****   *         SystemCoreClock variable.
 169:src/system_stm32l1xx.c ****   * @param  None
 170:src/system_stm32l1xx.c ****   * @retval None
 171:src/system_stm32l1xx.c ****   */
 172:src/system_stm32l1xx.c **** void SystemInit (void)
 173:src/system_stm32l1xx.c **** {
 106              		.loc 1 173 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 08B5     		push	{r3, lr}	@
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc1b8X6P.s 			page 6


 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
 174:src/system_stm32l1xx.c ****   /*!< Set MSION bit */
 175:src/system_stm32l1xx.c ****   RCC->CR |= (uint32_t)0x00000100;
 115              		.loc 1 175 0
 116 0002 154B     		ldr	r3, .L2	@ D.5934,
 117 0004 144A     		ldr	r2, .L2	@ D.5934,
 118 0006 1268     		ldr	r2, [r2]	@ D.5935, _2->CR
 119 0008 42F48072 		orr	r2, r2, #256	@ D.5935, D.5935,
 120 000c 1A60     		str	r2, [r3]	@ D.5935, _1->CR
 176:src/system_stm32l1xx.c **** 
 177:src/system_stm32l1xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 178:src/system_stm32l1xx.c ****   //RCC->CFGR &= (uint32_t)0x88FFC00C;
 179:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0x88FFC00C;
 121              		.loc 1 179 0
 122 000e 124A     		ldr	r2, .L2	@ D.5934,
 123 0010 114B     		ldr	r3, .L2	@ D.5934,
 124 0012 9968     		ldr	r1, [r3, #8]	@ D.5935, _6->CFGR
 125 0014 114B     		ldr	r3, .L2+4	@ D.5935,
 126 0016 0B40     		ands	r3, r3, r1	@, D.5935, D.5935, D.5935
 127 0018 9360     		str	r3, [r2, #8]	@ D.5935, _5->CFGR
 180:src/system_stm32l1xx.c ****   
 181:src/system_stm32l1xx.c ****   /*!< Reset HSION, HSEON, CSSON and PLLON bits */
 182:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xEEFEFFFE;
 128              		.loc 1 182 0
 129 001a 0F4A     		ldr	r2, .L2	@ D.5934,
 130 001c 0E4B     		ldr	r3, .L2	@ D.5934,
 131 001e 1B68     		ldr	r3, [r3]	@ D.5935, _10->CR
 132 0020 23F08853 		bic	r3, r3, #285212672	@ D.5935, D.5935,
 133 0024 23F00113 		bic	r3, r3, #65537	@ D.5935, D.5935,
 134 0028 1360     		str	r3, [r2]	@ D.5935, _9->CR
 183:src/system_stm32l1xx.c **** 
 184:src/system_stm32l1xx.c ****   /*!< Reset HSEBYP bit */
 185:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 135              		.loc 1 185 0
 136 002a 0B4B     		ldr	r3, .L2	@ D.5934,
 137 002c 0A4A     		ldr	r2, .L2	@ D.5934,
 138 002e 1268     		ldr	r2, [r2]	@ D.5935, _14->CR
 139 0030 22F48022 		bic	r2, r2, #262144	@ D.5935, D.5935,
 140 0034 1A60     		str	r2, [r3]	@ D.5935, _13->CR
 186:src/system_stm32l1xx.c **** 
 187:src/system_stm32l1xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 188:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFF;
 141              		.loc 1 188 0
 142 0036 084B     		ldr	r3, .L2	@ D.5934,
 143 0038 074A     		ldr	r2, .L2	@ D.5934,
 144 003a 9268     		ldr	r2, [r2, #8]	@ D.5935, _18->CFGR
 145 003c 22F47D02 		bic	r2, r2, #16580608	@ D.5935, D.5935,
 146 0040 9A60     		str	r2, [r3, #8]	@ D.5935, _17->CFGR
 189:src/system_stm32l1xx.c **** 
 190:src/system_stm32l1xx.c ****   /*!< Disable all interrupts */
 191:src/system_stm32l1xx.c ****   RCC->CIR = 0x00000000;
 147              		.loc 1 191 0
 148 0042 054B     		ldr	r3, .L2	@ D.5934,
 149 0044 0022     		movs	r2, #0	@ tmp132,
 150 0046 DA60     		str	r2, [r3, #12]	@ tmp132, _21->CIR
 192:src/system_stm32l1xx.c **** 
ARM GAS  /tmp/cc1b8X6P.s 			page 7


 193:src/system_stm32l1xx.c ****   /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
 194:src/system_stm32l1xx.c ****   SetSysClock();
 151              		.loc 1 194 0
 152 0048 00F0B2F8 		bl	SetSysClock	@
 195:src/system_stm32l1xx.c **** 
 196:src/system_stm32l1xx.c **** #ifdef VECT_TAB_SRAM
 197:src/system_stm32l1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 198:src/system_stm32l1xx.c **** #else
 199:src/system_stm32l1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 153              		.loc 1 199 0
 154 004c 044B     		ldr	r3, .L2+8	@ D.5936,
 155 004e 4FF00062 		mov	r2, #134217728	@ tmp133,
 156 0052 9A60     		str	r2, [r3, #8]	@ tmp133, _22->VTOR
 200:src/system_stm32l1xx.c **** #endif
 201:src/system_stm32l1xx.c **** }
 157              		.loc 1 201 0
 158 0054 08BD     		pop	{r3, pc}	@
 159              	.L3:
 160 0056 00BF     		.align	2
 161              	.L2:
 162 0058 00380240 		.word	1073887232
 163 005c 0CC0FF88 		.word	-1996505076
 164 0060 00ED00E0 		.word	-536810240
 165              		.cfi_endproc
 166              	.LFE56:
 167              		.size	SystemInit, .-SystemInit
 168              		.align	2
 169              		.global	SystemCoreClockUpdate
 170              		.thumb
 171              		.thumb_func
 172              		.type	SystemCoreClockUpdate, %function
 173              	SystemCoreClockUpdate:
 174              	.LFB57:
 202:src/system_stm32l1xx.c **** 
 203:src/system_stm32l1xx.c **** /**
 204:src/system_stm32l1xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 205:src/system_stm32l1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 206:src/system_stm32l1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 207:src/system_stm32l1xx.c ****   *         other parameters.
 208:src/system_stm32l1xx.c ****   *           
 209:src/system_stm32l1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 210:src/system_stm32l1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 211:src/system_stm32l1xx.c ****   *         based on this variable will be incorrect.         
 212:src/system_stm32l1xx.c ****   *     
 213:src/system_stm32l1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 214:src/system_stm32l1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 215:src/system_stm32l1xx.c ****   *           constant and the selected clock source:
 216:src/system_stm32l1xx.c ****   *             
 217:src/system_stm32l1xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI 
 218:src/system_stm32l1xx.c ****   *             value as defined by the MSI range.
 219:src/system_stm32l1xx.c ****   *                                   
 220:src/system_stm32l1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 221:src/system_stm32l1xx.c ****   *                                              
 222:src/system_stm32l1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 223:src/system_stm32l1xx.c ****   *                          
 224:src/system_stm32l1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 225:src/system_stm32l1xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
ARM GAS  /tmp/cc1b8X6P.s 			page 8


 226:src/system_stm32l1xx.c ****   *         
 227:src/system_stm32l1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l1xx.h file (default value
 228:src/system_stm32l1xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 229:src/system_stm32l1xx.c ****   *             in voltage and temperature.   
 230:src/system_stm32l1xx.c ****   *    
 231:src/system_stm32l1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l1xx.h file (default value
 232:src/system_stm32l1xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 233:src/system_stm32l1xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 234:src/system_stm32l1xx.c ****   *              have wrong result.
 235:src/system_stm32l1xx.c ****   *                
 236:src/system_stm32l1xx.c ****   *         - The result of this function could be not correct when using fractional
 237:src/system_stm32l1xx.c ****   *           value for HSE crystal.  
 238:src/system_stm32l1xx.c ****   * @param  None
 239:src/system_stm32l1xx.c ****   * @retval None
 240:src/system_stm32l1xx.c ****   */
 241:src/system_stm32l1xx.c **** void SystemCoreClockUpdate (void)
 242:src/system_stm32l1xx.c **** {
 175              		.loc 1 242 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 24
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0064 86B0     		sub	sp, sp, #24	@,,
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 24
 243:src/system_stm32l1xx.c ****   uint32_t tmp = 0, pllmul = 0, plldiv = 0, pllsource = 0, msirange = 0;
 183              		.loc 1 243 0
 184 0066 0023     		movs	r3, #0	@ tmp147,
 185 0068 0593     		str	r3, [sp, #20]	@ tmp147, tmp
 186 006a 0023     		movs	r3, #0	@ tmp148,
 187 006c 0493     		str	r3, [sp, #16]	@ tmp148, pllmul
 188 006e 0023     		movs	r3, #0	@ tmp149,
 189 0070 0393     		str	r3, [sp, #12]	@ tmp149, plldiv
 190 0072 0023     		movs	r3, #0	@ tmp150,
 191 0074 0293     		str	r3, [sp, #8]	@ tmp150, pllsource
 192 0076 0023     		movs	r3, #0	@ tmp151,
 193 0078 0193     		str	r3, [sp, #4]	@ tmp151, msirange
 244:src/system_stm32l1xx.c **** 
 245:src/system_stm32l1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:src/system_stm32l1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 194              		.loc 1 246 0
 195 007a 474B     		ldr	r3, .L14	@ D.5937,
 196 007c 9B68     		ldr	r3, [r3, #8]	@ D.5938, _6->CFGR
 197 007e 03F00C03 		and	r3, r3, #12	@ tmp152, D.5938,
 198 0082 0593     		str	r3, [sp, #20]	@ tmp152, tmp
 247:src/system_stm32l1xx.c ****   
 248:src/system_stm32l1xx.c ****   switch (tmp)
 199              		.loc 1 248 0
 200 0084 059B     		ldr	r3, [sp, #20]	@ tmp153, tmp
 201 0086 0C2B     		cmp	r3, #12	@ tmp153,
 202 0088 64D8     		bhi	.L5	@
 203 008a 01A2     		adr	r2, .L7	@,
 204 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@, tmp153
 205              		.p2align 2
 206              	.L7:
 207 0090 C5000000 		.word	.L6+1
 208 0094 55010000 		.word	.L5+1
ARM GAS  /tmp/cc1b8X6P.s 			page 9


 209 0098 55010000 		.word	.L5+1
 210 009c 55010000 		.word	.L5+1
 211 00a0 E5000000 		.word	.L8+1
 212 00a4 55010000 		.word	.L5+1
 213 00a8 55010000 		.word	.L5+1
 214 00ac 55010000 		.word	.L5+1
 215 00b0 ED000000 		.word	.L9+1
 216 00b4 55010000 		.word	.L5+1
 217 00b8 55010000 		.word	.L5+1
 218 00bc 55010000 		.word	.L5+1
 219 00c0 F5000000 		.word	.L10+1
 220              	.L6:
 249:src/system_stm32l1xx.c ****   {
 250:src/system_stm32l1xx.c ****     case 0x00:  /* MSI used as system clock */
 251:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 221              		.loc 1 251 0
 222 00c4 344B     		ldr	r3, .L14	@ D.5937,
 223 00c6 5B68     		ldr	r3, [r3, #4]	@ D.5938, _9->ICSCR
 224 00c8 03F46043 		and	r3, r3, #57344	@ D.5938, D.5938,
 225 00cc 5B0B     		lsrs	r3, r3, #13	@ tmp154, D.5938,
 226 00ce 0193     		str	r3, [sp, #4]	@ tmp154, msirange
 252:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 227              		.loc 1 252 0
 228 00d0 019B     		ldr	r3, [sp, #4]	@ tmp155, msirange
 229 00d2 0133     		adds	r3, r3, #1	@ D.5938, tmp155,
 230 00d4 4FF40042 		mov	r2, #32768	@ tmp156,
 231 00d8 02FA03F3 		lsl	r3, r2, r3	@ D.5939, tmp156, D.5939
 232 00dc 1A46     		mov	r2, r3	@ SystemCoreClock.0, D.5939
 233 00de 2F4B     		ldr	r3, .L14+4	@ tmp157,
 234 00e0 1A60     		str	r2, [r3]	@ SystemCoreClock.0, SystemCoreClock
 253:src/system_stm32l1xx.c ****       break;
 235              		.loc 1 253 0
 236 00e2 47E0     		b	.L11	@
 237              	.L8:
 254:src/system_stm32l1xx.c ****     case 0x04:  /* HSI used as system clock */
 255:src/system_stm32l1xx.c ****       SystemCoreClock = HSI_VALUE;
 238              		.loc 1 255 0
 239 00e4 2D4B     		ldr	r3, .L14+4	@ tmp158,
 240 00e6 2E4A     		ldr	r2, .L14+8	@ tmp159,
 241 00e8 1A60     		str	r2, [r3]	@ tmp159, SystemCoreClock
 256:src/system_stm32l1xx.c ****       break;
 242              		.loc 1 256 0
 243 00ea 43E0     		b	.L11	@
 244              	.L9:
 257:src/system_stm32l1xx.c ****     case 0x08:  /* HSE used as system clock */
 258:src/system_stm32l1xx.c ****       SystemCoreClock = HSE_VALUE;
 245              		.loc 1 258 0
 246 00ec 2B4B     		ldr	r3, .L14+4	@ tmp160,
 247 00ee 2D4A     		ldr	r2, .L14+12	@ tmp161,
 248 00f0 1A60     		str	r2, [r3]	@ tmp161, SystemCoreClock
 259:src/system_stm32l1xx.c ****       break;
 249              		.loc 1 259 0
 250 00f2 3FE0     		b	.L11	@
 251              	.L10:
 260:src/system_stm32l1xx.c ****     case 0x0C:  /* PLL used as system clock */
 261:src/system_stm32l1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 262:src/system_stm32l1xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
ARM GAS  /tmp/cc1b8X6P.s 			page 10


 252              		.loc 1 262 0
 253 00f4 284B     		ldr	r3, .L14	@ D.5937,
 254 00f6 9B68     		ldr	r3, [r3, #8]	@ D.5938, _17->CFGR
 255 00f8 03F47013 		and	r3, r3, #3932160	@ tmp162, D.5938,
 256 00fc 0493     		str	r3, [sp, #16]	@ tmp162, pllmul
 263:src/system_stm32l1xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 257              		.loc 1 263 0
 258 00fe 264B     		ldr	r3, .L14	@ D.5937,
 259 0100 9B68     		ldr	r3, [r3, #8]	@ D.5938, _20->CFGR
 260 0102 03F44003 		and	r3, r3, #12582912	@ tmp163, D.5938,
 261 0106 0393     		str	r3, [sp, #12]	@ tmp163, plldiv
 264:src/system_stm32l1xx.c ****       pllmul = PLLMulTable[(pllmul >> 18)];
 262              		.loc 1 264 0
 263 0108 049B     		ldr	r3, [sp, #16]	@ tmp164, pllmul
 264 010a 9B0C     		lsrs	r3, r3, #18	@ D.5938, tmp164,
 265 010c 264A     		ldr	r2, .L14+16	@ tmp165,
 266 010e D35C     		ldrb	r3, [r2, r3]	@ tmp167, PLLMulTable
 267 0110 DBB2     		uxtb	r3, r3	@ D.5940, tmp167
 268 0112 0493     		str	r3, [sp, #16]	@ D.5940, pllmul
 265:src/system_stm32l1xx.c ****       plldiv = (plldiv >> 22) + 1;
 269              		.loc 1 265 0
 270 0114 039B     		ldr	r3, [sp, #12]	@ tmp168, plldiv
 271 0116 9B0D     		lsrs	r3, r3, #22	@ D.5938, tmp168,
 272 0118 0133     		adds	r3, r3, #1	@ tmp169, D.5938,
 273 011a 0393     		str	r3, [sp, #12]	@ tmp169, plldiv
 266:src/system_stm32l1xx.c ****       
 267:src/system_stm32l1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 274              		.loc 1 267 0
 275 011c 1E4B     		ldr	r3, .L14	@ D.5937,
 276 011e 9B68     		ldr	r3, [r3, #8]	@ D.5938, _28->CFGR
 277 0120 03F48033 		and	r3, r3, #65536	@ tmp170, D.5938,
 278 0124 0293     		str	r3, [sp, #8]	@ tmp170, pllsource
 268:src/system_stm32l1xx.c **** 
 269:src/system_stm32l1xx.c ****       if (pllsource == 0x00)
 279              		.loc 1 269 0
 280 0126 029B     		ldr	r3, [sp, #8]	@ tmp171, pllsource
 281 0128 002B     		cmp	r3, #0	@ tmp171,
 282 012a 09D1     		bne	.L12	@,
 270:src/system_stm32l1xx.c ****       {
 271:src/system_stm32l1xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 272:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 283              		.loc 1 272 0
 284 012c 049B     		ldr	r3, [sp, #16]	@ tmp172, pllmul
 285 012e 1C4A     		ldr	r2, .L14+8	@ tmp173,
 286 0130 02FB03F2 		mul	r2, r2, r3	@ D.5938, tmp173, tmp172
 287 0134 039B     		ldr	r3, [sp, #12]	@ tmp174, plldiv
 288 0136 B2FBF3F2 		udiv	r2, r2, r3	@ SystemCoreClock.1, D.5938, tmp174
 289 013a 184B     		ldr	r3, .L14+4	@ tmp175,
 290 013c 1A60     		str	r2, [r3]	@ SystemCoreClock.1, SystemCoreClock
 273:src/system_stm32l1xx.c ****       }
 274:src/system_stm32l1xx.c ****       else
 275:src/system_stm32l1xx.c ****       {
 276:src/system_stm32l1xx.c ****         /* HSE selected as PLL clock entry */
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 278:src/system_stm32l1xx.c ****       }
 279:src/system_stm32l1xx.c ****       break;
 291              		.loc 1 279 0
ARM GAS  /tmp/cc1b8X6P.s 			page 11


 292 013e 19E0     		b	.L11	@
 293              	.L12:
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 294              		.loc 1 277 0
 295 0140 049B     		ldr	r3, [sp, #16]	@ tmp176, pllmul
 296 0142 184A     		ldr	r2, .L14+12	@ tmp177,
 297 0144 02FB03F2 		mul	r2, r2, r3	@ D.5938, tmp177, tmp176
 298 0148 039B     		ldr	r3, [sp, #12]	@ tmp178, plldiv
 299 014a B2FBF3F2 		udiv	r2, r2, r3	@ SystemCoreClock.2, D.5938, tmp178
 300 014e 134B     		ldr	r3, .L14+4	@ tmp179,
 301 0150 1A60     		str	r2, [r3]	@ SystemCoreClock.2, SystemCoreClock
 302              		.loc 1 279 0
 303 0152 0FE0     		b	.L11	@
 304              	.L5:
 280:src/system_stm32l1xx.c ****     default: /* MSI used as system clock */
 281:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 305              		.loc 1 281 0
 306 0154 104B     		ldr	r3, .L14	@ D.5937,
 307 0156 5B68     		ldr	r3, [r3, #4]	@ D.5938, _35->ICSCR
 308 0158 03F46043 		and	r3, r3, #57344	@ D.5938, D.5938,
 309 015c 5B0B     		lsrs	r3, r3, #13	@ tmp180, D.5938,
 310 015e 0193     		str	r3, [sp, #4]	@ tmp180, msirange
 282:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 311              		.loc 1 282 0
 312 0160 019B     		ldr	r3, [sp, #4]	@ tmp181, msirange
 313 0162 0133     		adds	r3, r3, #1	@ D.5938, tmp181,
 314 0164 4FF40042 		mov	r2, #32768	@ tmp182,
 315 0168 02FA03F3 		lsl	r3, r2, r3	@ D.5939, tmp182, D.5939
 316 016c 1A46     		mov	r2, r3	@ SystemCoreClock.3, D.5939
 317 016e 0B4B     		ldr	r3, .L14+4	@ tmp183,
 318 0170 1A60     		str	r2, [r3]	@ SystemCoreClock.3, SystemCoreClock
 283:src/system_stm32l1xx.c ****       break;
 319              		.loc 1 283 0
 320 0172 00BF     		nop
 321              	.L11:
 284:src/system_stm32l1xx.c ****   }
 285:src/system_stm32l1xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 286:src/system_stm32l1xx.c ****   /* Get HCLK prescaler */
 287:src/system_stm32l1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 322              		.loc 1 287 0
 323 0174 084B     		ldr	r3, .L14	@ D.5937,
 324 0176 9B68     		ldr	r3, [r3, #8]	@ D.5938, _43->CFGR
 325 0178 03F0F003 		and	r3, r3, #240	@ D.5938, D.5938,
 326 017c 1B09     		lsrs	r3, r3, #4	@ D.5938, D.5938,
 327 017e 0B4A     		ldr	r2, .L14+20	@ tmp184,
 328 0180 D35C     		ldrb	r3, [r2, r3]	@ tmp186, AHBPrescTable
 329 0182 DBB2     		uxtb	r3, r3	@ D.5940, tmp186
 330 0184 0593     		str	r3, [sp, #20]	@ D.5940, tmp
 288:src/system_stm32l1xx.c ****   /* HCLK clock frequency */
 289:src/system_stm32l1xx.c ****   SystemCoreClock >>= tmp;
 331              		.loc 1 289 0
 332 0186 054B     		ldr	r3, .L14+4	@ tmp187,
 333 0188 1A68     		ldr	r2, [r3]	@ SystemCoreClock.4, SystemCoreClock
 334 018a 059B     		ldr	r3, [sp, #20]	@ tmp.5, tmp
 335 018c DA40     		lsrs	r2, r2, r3	@ SystemCoreClock.6, SystemCoreClock.4, tmp.5
 336 018e 034B     		ldr	r3, .L14+4	@ tmp188,
 337 0190 1A60     		str	r2, [r3]	@ SystemCoreClock.6, SystemCoreClock
ARM GAS  /tmp/cc1b8X6P.s 			page 12


 290:src/system_stm32l1xx.c **** }
 338              		.loc 1 290 0
 339 0192 06B0     		add	sp, sp, #24	@,,
 340              		@ sp needed	@
 341 0194 7047     		bx	lr	@
 342              	.L15:
 343 0196 00BF     		.align	2
 344              	.L14:
 345 0198 00380240 		.word	1073887232
 346 019c 00000000 		.word	SystemCoreClock
 347 01a0 0024F400 		.word	16000000
 348 01a4 00127A00 		.word	8000000
 349 01a8 00000000 		.word	PLLMulTable
 350 01ac 00000000 		.word	AHBPrescTable
 351              		.cfi_endproc
 352              	.LFE57:
 353              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 354              		.align	2
 355              		.thumb
 356              		.thumb_func
 357              		.type	SetSysClock, %function
 358              	SetSysClock:
 359              	.LFB58:
 291:src/system_stm32l1xx.c **** 
 292:src/system_stm32l1xx.c **** /**
 293:src/system_stm32l1xx.c ****   * @brief  Configures the System clock frequency, AHB/APBx prescalers and Flash 
 294:src/system_stm32l1xx.c ****   *         settings.
 295:src/system_stm32l1xx.c ****   * @note   This function should be called only once the RCC clock configuration  
 296:src/system_stm32l1xx.c ****   *         is reset to the default reset state (done in SystemInit() function).             
 297:src/system_stm32l1xx.c ****   * @param  None
 298:src/system_stm32l1xx.c ****   * @retval None
 299:src/system_stm32l1xx.c ****   */
 300:src/system_stm32l1xx.c **** static void SetSysClock(void)
 301:src/system_stm32l1xx.c **** {
 360              		.loc 1 301 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 01b0 82B0     		sub	sp, sp, #8	@,,
 366              	.LCFI2:
 367              		.cfi_def_cfa_offset 8
 302:src/system_stm32l1xx.c ****   __IO uint32_t StartUpCounter = 0, HSIStatus = 0;
 368              		.loc 1 302 0
 369 01b2 0023     		movs	r3, #0	@ tmp178,
 370 01b4 0193     		str	r3, [sp, #4]	@ tmp178, StartUpCounter
 371 01b6 0023     		movs	r3, #0	@ tmp179,
 372 01b8 0093     		str	r3, [sp]	@ tmp179, HSIStatus
 303:src/system_stm32l1xx.c ****   
 304:src/system_stm32l1xx.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
 305:src/system_stm32l1xx.c ****   /* Enable HSI */
 306:src/system_stm32l1xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSION);
 373              		.loc 1 306 0
 374 01ba 3E4B     		ldr	r3, .L25	@ D.5941,
 375 01bc 3D4A     		ldr	r2, .L25	@ D.5941,
 376 01be 1268     		ldr	r2, [r2]	@ D.5942, _2->CR
 377 01c0 42F00102 		orr	r2, r2, #1	@ D.5942, D.5942,
ARM GAS  /tmp/cc1b8X6P.s 			page 13


 378 01c4 1A60     		str	r2, [r3]	@ D.5942, _1->CR
 379              	.L18:
 307:src/system_stm32l1xx.c ****  
 308:src/system_stm32l1xx.c ****   /* Wait till HSI is ready and if Time out is reached exit */
 309:src/system_stm32l1xx.c ****   do
 310:src/system_stm32l1xx.c ****   {
 311:src/system_stm32l1xx.c ****     HSIStatus = RCC->CR & RCC_CR_HSIRDY;
 380              		.loc 1 311 0 discriminator 1
 381 01c6 3B4B     		ldr	r3, .L25	@ D.5941,
 382 01c8 1B68     		ldr	r3, [r3]	@ D.5942, _5->CR
 383 01ca 03F00203 		and	r3, r3, #2	@ HSIStatus.7, D.5942,
 384 01ce 0093     		str	r3, [sp]	@ HSIStatus.7, HSIStatus
 312:src/system_stm32l1xx.c ****   } while((HSIStatus == 0) && (StartUpCounter != HSI_STARTUP_TIMEOUT));
 385              		.loc 1 312 0 discriminator 1
 386 01d0 009B     		ldr	r3, [sp]	@ HSIStatus.8, HSIStatus
 387 01d2 002B     		cmp	r3, #0	@ HSIStatus.8,
 388 01d4 03D1     		bne	.L17	@,
 389 01d6 019B     		ldr	r3, [sp, #4]	@ StartUpCounter.9, StartUpCounter
 390 01d8 B3F5A06F 		cmp	r3, #1280	@ StartUpCounter.9,
 391 01dc F3D1     		bne	.L18	@,
 392              	.L17:
 313:src/system_stm32l1xx.c **** 
 314:src/system_stm32l1xx.c ****   if ((RCC->CR & RCC_CR_HSIRDY) != RESET)
 393              		.loc 1 314 0
 394 01de 354B     		ldr	r3, .L25	@ D.5941,
 395 01e0 1B68     		ldr	r3, [r3]	@ D.5942, _10->CR
 396 01e2 03F00203 		and	r3, r3, #2	@ D.5942, D.5942,
 397 01e6 002B     		cmp	r3, #0	@ D.5942,
 398 01e8 02D0     		beq	.L19	@,
 315:src/system_stm32l1xx.c ****   {
 316:src/system_stm32l1xx.c ****     HSIStatus = (uint32_t)0x01;
 399              		.loc 1 316 0
 400 01ea 0123     		movs	r3, #1	@ tmp180,
 401 01ec 0093     		str	r3, [sp]	@ tmp180, HSIStatus
 402 01ee 01E0     		b	.L20	@
 403              	.L19:
 317:src/system_stm32l1xx.c ****   }
 318:src/system_stm32l1xx.c ****   else
 319:src/system_stm32l1xx.c ****   {
 320:src/system_stm32l1xx.c ****     HSIStatus = (uint32_t)0x00;
 404              		.loc 1 320 0
 405 01f0 0023     		movs	r3, #0	@ tmp181,
 406 01f2 0093     		str	r3, [sp]	@ tmp181, HSIStatus
 407              	.L20:
 321:src/system_stm32l1xx.c ****   }
 322:src/system_stm32l1xx.c ****     
 323:src/system_stm32l1xx.c ****   if (HSIStatus == (uint32_t)0x01)
 408              		.loc 1 323 0
 409 01f4 009B     		ldr	r3, [sp]	@ HSIStatus.10, HSIStatus
 410 01f6 012B     		cmp	r3, #1	@ HSIStatus.10,
 411 01f8 5AD1     		bne	.L16	@,
 324:src/system_stm32l1xx.c ****   {
 325:src/system_stm32l1xx.c ****     /* Enable 64-bit access */
 326:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_ACC64;
 412              		.loc 1 326 0
 413 01fa 2F4B     		ldr	r3, .L25+4	@ D.5943,
 414 01fc 2E4A     		ldr	r2, .L25+4	@ D.5943,
ARM GAS  /tmp/cc1b8X6P.s 			page 14


 415 01fe 1268     		ldr	r2, [r2]	@ D.5942, _15->ACR
 416 0200 42F00402 		orr	r2, r2, #4	@ D.5942, D.5942,
 417 0204 1A60     		str	r2, [r3]	@ D.5942, _14->ACR
 327:src/system_stm32l1xx.c ****     
 328:src/system_stm32l1xx.c ****     /* Enable Prefetch Buffer */
 329:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
 418              		.loc 1 329 0
 419 0206 2C4B     		ldr	r3, .L25+4	@ D.5943,
 420 0208 2B4A     		ldr	r2, .L25+4	@ D.5943,
 421 020a 1268     		ldr	r2, [r2]	@ D.5942, _19->ACR
 422 020c 42F00202 		orr	r2, r2, #2	@ D.5942, D.5942,
 423 0210 1A60     		str	r2, [r3]	@ D.5942, _18->ACR
 330:src/system_stm32l1xx.c **** 
 331:src/system_stm32l1xx.c ****     /* Flash 1 wait state */
 332:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_LATENCY;
 424              		.loc 1 332 0
 425 0212 294B     		ldr	r3, .L25+4	@ D.5943,
 426 0214 284A     		ldr	r2, .L25+4	@ D.5943,
 427 0216 1268     		ldr	r2, [r2]	@ D.5942, _23->ACR
 428 0218 42F00102 		orr	r2, r2, #1	@ D.5942, D.5942,
 429 021c 1A60     		str	r2, [r3]	@ D.5942, _22->ACR
 333:src/system_stm32l1xx.c ****     
 334:src/system_stm32l1xx.c **** 
 335:src/system_stm32l1xx.c ****     /* Power enable */
 336:src/system_stm32l1xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 430              		.loc 1 336 0
 431 021e 254B     		ldr	r3, .L25	@ D.5941,
 432 0220 244A     		ldr	r2, .L25	@ D.5941,
 433 0222 526A     		ldr	r2, [r2, #36]	@ D.5942, _27->APB1ENR
 434 0224 42F08052 		orr	r2, r2, #268435456	@ D.5942, D.5942,
 435 0228 5A62     		str	r2, [r3, #36]	@ D.5942, _26->APB1ENR
 337:src/system_stm32l1xx.c ****   
 338:src/system_stm32l1xx.c ****     /* Select the Voltage Range 1 (1.8 V) */
 339:src/system_stm32l1xx.c ****     PWR->CR = PWR_CR_VOS_0;
 436              		.loc 1 339 0
 437 022a 244B     		ldr	r3, .L25+8	@ D.5944,
 438 022c 4FF40062 		mov	r2, #2048	@ tmp182,
 439 0230 1A60     		str	r2, [r3]	@ tmp182, _30->CR
 340:src/system_stm32l1xx.c ****   
 341:src/system_stm32l1xx.c ****   
 342:src/system_stm32l1xx.c ****     /* Wait Until the Voltage Regulator is ready */
 343:src/system_stm32l1xx.c ****     while((PWR->CSR & PWR_CSR_VOSF) != RESET)
 440              		.loc 1 343 0
 441 0232 00BF     		nop
 442              	.L22:
 443              		.loc 1 343 0 is_stmt 0 discriminator 1
 444 0234 214B     		ldr	r3, .L25+8	@ D.5944,
 445 0236 5B68     		ldr	r3, [r3, #4]	@ D.5942, _31->CSR
 446 0238 03F01003 		and	r3, r3, #16	@ D.5942, D.5942,
 447 023c 002B     		cmp	r3, #0	@ D.5942,
 448 023e F9D1     		bne	.L22	@,
 344:src/system_stm32l1xx.c ****     {
 345:src/system_stm32l1xx.c ****     }
 346:src/system_stm32l1xx.c ****       
 347:src/system_stm32l1xx.c ****     /* HCLK = SYSCLK /1*/
 348:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 449              		.loc 1 348 0 is_stmt 1
ARM GAS  /tmp/cc1b8X6P.s 			page 15


 450 0240 1C4B     		ldr	r3, .L25	@ D.5941,
 451 0242 1C4A     		ldr	r2, .L25	@ D.5941,
 452 0244 9268     		ldr	r2, [r2, #8]	@ D.5942, _35->CFGR
 453 0246 9A60     		str	r2, [r3, #8]	@ D.5942, _34->CFGR
 349:src/system_stm32l1xx.c ****   
 350:src/system_stm32l1xx.c ****     /* PCLK2 = HCLK /1*/
 351:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 454              		.loc 1 351 0
 455 0248 1A4B     		ldr	r3, .L25	@ D.5941,
 456 024a 1A4A     		ldr	r2, .L25	@ D.5941,
 457 024c 9268     		ldr	r2, [r2, #8]	@ D.5942, _38->CFGR
 458 024e 9A60     		str	r2, [r3, #8]	@ D.5942, _37->CFGR
 352:src/system_stm32l1xx.c ****     
 353:src/system_stm32l1xx.c ****     /* PCLK1 = HCLK /1*/
 354:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 459              		.loc 1 354 0
 460 0250 184B     		ldr	r3, .L25	@ D.5941,
 461 0252 184A     		ldr	r2, .L25	@ D.5941,
 462 0254 9268     		ldr	r2, [r2, #8]	@ D.5942, _41->CFGR
 463 0256 9A60     		str	r2, [r3, #8]	@ D.5942, _40->CFGR
 355:src/system_stm32l1xx.c ****     
 356:src/system_stm32l1xx.c ****     /*  PLL configuration */
 357:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 464              		.loc 1 357 0
 465 0258 164B     		ldr	r3, .L25	@ D.5941,
 466 025a 164A     		ldr	r2, .L25	@ D.5941,
 467 025c 9268     		ldr	r2, [r2, #8]	@ D.5942, _44->CFGR
 468 025e 22F47D02 		bic	r2, r2, #16580608	@ D.5942, D.5942,
 469 0262 9A60     		str	r2, [r3, #8]	@ D.5942, _43->CFGR
 358:src/system_stm32l1xx.c ****                                         RCC_CFGR_PLLDIV));
 359:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI | RCC_CFGR_PLLMUL4 | RCC_CFGR_PLLDIV2);
 470              		.loc 1 359 0
 471 0264 134B     		ldr	r3, .L25	@ D.5941,
 472 0266 134A     		ldr	r2, .L25	@ D.5941,
 473 0268 9268     		ldr	r2, [r2, #8]	@ D.5942, _48->CFGR
 474 026a 42F48802 		orr	r2, r2, #4456448	@ D.5942, D.5942,
 475 026e 9A60     		str	r2, [r3, #8]	@ D.5942, _47->CFGR
 360:src/system_stm32l1xx.c **** 
 361:src/system_stm32l1xx.c ****     /* Enable PLL */
 362:src/system_stm32l1xx.c ****     RCC->CR |= RCC_CR_PLLON;
 476              		.loc 1 362 0
 477 0270 104B     		ldr	r3, .L25	@ D.5941,
 478 0272 104A     		ldr	r2, .L25	@ D.5941,
 479 0274 1268     		ldr	r2, [r2]	@ D.5942, _52->CR
 480 0276 42F08072 		orr	r2, r2, #16777216	@ D.5942, D.5942,
 481 027a 1A60     		str	r2, [r3]	@ D.5942, _51->CR
 363:src/system_stm32l1xx.c **** 
 364:src/system_stm32l1xx.c ****     /* Wait till PLL is ready */
 365:src/system_stm32l1xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 482              		.loc 1 365 0
 483 027c 00BF     		nop
 484              	.L23:
 485              		.loc 1 365 0 is_stmt 0 discriminator 1
 486 027e 0D4B     		ldr	r3, .L25	@ D.5941,
 487 0280 1B68     		ldr	r3, [r3]	@ D.5942, _55->CR
 488 0282 03F00073 		and	r3, r3, #33554432	@ D.5942, D.5942,
 489 0286 002B     		cmp	r3, #0	@ D.5942,
ARM GAS  /tmp/cc1b8X6P.s 			page 16


 490 0288 F9D0     		beq	.L23	@,
 366:src/system_stm32l1xx.c ****     {
 367:src/system_stm32l1xx.c ****     }
 368:src/system_stm32l1xx.c ****         
 369:src/system_stm32l1xx.c ****     /* Select PLL as system clock source */
 370:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 491              		.loc 1 370 0 is_stmt 1
 492 028a 0A4B     		ldr	r3, .L25	@ D.5941,
 493 028c 094A     		ldr	r2, .L25	@ D.5941,
 494 028e 9268     		ldr	r2, [r2, #8]	@ D.5942, _59->CFGR
 495 0290 22F00302 		bic	r2, r2, #3	@ D.5942, D.5942,
 496 0294 9A60     		str	r2, [r3, #8]	@ D.5942, _58->CFGR
 371:src/system_stm32l1xx.c ****     
 372:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 497              		.loc 1 372 0
 498 0296 074B     		ldr	r3, .L25	@ D.5941,
 499 0298 064A     		ldr	r2, .L25	@ D.5941,
 500 029a 9268     		ldr	r2, [r2, #8]	@ D.5942, _63->CFGR
 501 029c 42F00302 		orr	r2, r2, #3	@ D.5942, D.5942,
 502 02a0 9A60     		str	r2, [r3, #8]	@ D.5942, _62->CFGR
 373:src/system_stm32l1xx.c **** 
 374:src/system_stm32l1xx.c ****     /* Wait till PLL is used as system clock source */
 375:src/system_stm32l1xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 503              		.loc 1 375 0
 504 02a2 00BF     		nop
 505              	.L24:
 506              		.loc 1 375 0 is_stmt 0 discriminator 1
 507 02a4 034B     		ldr	r3, .L25	@ D.5941,
 508 02a6 9B68     		ldr	r3, [r3, #8]	@ D.5942, _66->CFGR
 509 02a8 03F00C03 		and	r3, r3, #12	@ D.5942, D.5942,
 510 02ac 0C2B     		cmp	r3, #12	@ D.5942,
 511 02ae F9D1     		bne	.L24	@,
 512              	.L16:
 376:src/system_stm32l1xx.c ****     {
 377:src/system_stm32l1xx.c ****     }
 378:src/system_stm32l1xx.c ****   }
 379:src/system_stm32l1xx.c ****   else
 380:src/system_stm32l1xx.c ****   {
 381:src/system_stm32l1xx.c ****     /* If HSI fails to start-up, the application will have wrong clock
 382:src/system_stm32l1xx.c ****        configuration. User can add here some code to deal with this error */
 383:src/system_stm32l1xx.c ****   }
 384:src/system_stm32l1xx.c **** }
 513              		.loc 1 384 0 is_stmt 1
 514 02b0 02B0     		add	sp, sp, #8	@,,
 515              		@ sp needed	@
 516 02b2 7047     		bx	lr	@
 517              	.L26:
 518              		.align	2
 519              	.L25:
 520 02b4 00380240 		.word	1073887232
 521 02b8 003C0240 		.word	1073888256
 522 02bc 00700040 		.word	1073770496
 523              		.cfi_endproc
 524              	.LFE58:
 525              		.size	SetSysClock, .-SetSysClock
 526              	.Letext0:
 527              		.file 2 "/home/zbanks/gcc-arm-none-eabi/arm-none-eabi/include/stdint.h"
ARM GAS  /tmp/cc1b8X6P.s 			page 17


 528              		.file 3 "./inc/core_cm3.h"
 529              		.file 4 "./inc/stm32l1xx.h"
 530              		.section	.debug_info,"",%progbits
 531              	.Ldebug_info0:
 532 0000 92050000 		.4byte	0x592
 533 0004 0200     		.2byte	0x2
 534 0006 00000000 		.4byte	.Ldebug_abbrev0
 535 000a 04       		.byte	0x4
 536 000b 01       		.uleb128 0x1
 537 000c 40010000 		.4byte	.LASF64
 538 0010 01       		.byte	0x1
 539 0011 C4020000 		.4byte	.LASF65
 540 0015 F2000000 		.4byte	.LASF66
 541 0019 00000000 		.4byte	.Ltext0
 542 001d C0020000 		.4byte	.Letext0
 543 0021 00000000 		.4byte	.Ldebug_line0
 544 0025 02       		.uleb128 0x2
 545 0026 01       		.byte	0x1
 546 0027 06       		.byte	0x6
 547 0028 E6010000 		.4byte	.LASF0
 548 002c 03       		.uleb128 0x3
 549 002d 68000000 		.4byte	.LASF3
 550 0031 02       		.byte	0x2
 551 0032 2A       		.byte	0x2a
 552 0033 37000000 		.4byte	0x37
 553 0037 02       		.uleb128 0x2
 554 0038 01       		.byte	0x1
 555 0039 08       		.byte	0x8
 556 003a 23010000 		.4byte	.LASF1
 557 003e 02       		.uleb128 0x2
 558 003f 02       		.byte	0x2
 559 0040 05       		.byte	0x5
 560 0041 78000000 		.4byte	.LASF2
 561 0045 03       		.uleb128 0x3
 562 0046 1F020000 		.4byte	.LASF4
 563 004a 02       		.byte	0x2
 564 004b 36       		.byte	0x36
 565 004c 50000000 		.4byte	0x50
 566 0050 02       		.uleb128 0x2
 567 0051 02       		.byte	0x2
 568 0052 07       		.byte	0x7
 569 0053 3F020000 		.4byte	.LASF5
 570 0057 03       		.uleb128 0x3
 571 0058 6C020000 		.4byte	.LASF6
 572 005c 02       		.byte	0x2
 573 005d 4F       		.byte	0x4f
 574 005e 62000000 		.4byte	0x62
 575 0062 02       		.uleb128 0x2
 576 0063 04       		.byte	0x4
 577 0064 05       		.byte	0x5
 578 0065 C3000000 		.4byte	.LASF7
 579 0069 03       		.uleb128 0x3
 580 006a 09020000 		.4byte	.LASF8
 581 006e 02       		.byte	0x2
 582 006f 50       		.byte	0x50
 583 0070 74000000 		.4byte	0x74
 584 0074 02       		.uleb128 0x2
ARM GAS  /tmp/cc1b8X6P.s 			page 18


 585 0075 04       		.byte	0x4
 586 0076 07       		.byte	0x7
 587 0077 B2020000 		.4byte	.LASF9
 588 007b 02       		.uleb128 0x2
 589 007c 08       		.byte	0x8
 590 007d 05       		.byte	0x5
 591 007e 9F000000 		.4byte	.LASF10
 592 0082 02       		.uleb128 0x2
 593 0083 08       		.byte	0x8
 594 0084 07       		.byte	0x7
 595 0085 F2010000 		.4byte	.LASF11
 596 0089 04       		.uleb128 0x4
 597 008a 04       		.byte	0x4
 598 008b 05       		.byte	0x5
 599 008c 696E7400 		.ascii	"int\000"
 600 0090 02       		.uleb128 0x2
 601 0091 04       		.byte	0x4
 602 0092 07       		.byte	0x7
 603 0093 12020000 		.4byte	.LASF12
 604 0097 02       		.uleb128 0x2
 605 0098 04       		.byte	0x4
 606 0099 07       		.byte	0x7
 607 009a 12000000 		.4byte	.LASF13
 608 009e 05       		.uleb128 0x5
 609 009f 69000000 		.4byte	0x69
 610 00a3 06       		.uleb128 0x6
 611 00a4 8C       		.byte	0x8c
 612 00a5 03       		.byte	0x3
 613 00a6 4801     		.2byte	0x148
 614 00a8 E9010000 		.4byte	0x1e9
 615 00ac 07       		.uleb128 0x7
 616 00ad 53000000 		.4byte	.LASF14
 617 00b1 03       		.byte	0x3
 618 00b2 4A01     		.2byte	0x14a
 619 00b4 E9010000 		.4byte	0x1e9
 620 00b8 02       		.byte	0x2
 621 00b9 23       		.byte	0x23
 622 00ba 00       		.uleb128 0
 623 00bb 07       		.uleb128 0x7
 624 00bc 8A000000 		.4byte	.LASF15
 625 00c0 03       		.byte	0x3
 626 00c1 4B01     		.2byte	0x14b
 627 00c3 9E000000 		.4byte	0x9e
 628 00c7 02       		.byte	0x2
 629 00c8 23       		.byte	0x23
 630 00c9 04       		.uleb128 0x4
 631 00ca 07       		.uleb128 0x7
 632 00cb 67020000 		.4byte	.LASF16
 633 00cf 03       		.byte	0x3
 634 00d0 4C01     		.2byte	0x14c
 635 00d2 9E000000 		.4byte	0x9e
 636 00d6 02       		.byte	0x2
 637 00d7 23       		.byte	0x23
 638 00d8 08       		.uleb128 0x8
 639 00d9 07       		.uleb128 0x7
 640 00da 31010000 		.4byte	.LASF17
 641 00de 03       		.byte	0x3
ARM GAS  /tmp/cc1b8X6P.s 			page 19


 642 00df 4D01     		.2byte	0x14d
 643 00e1 9E000000 		.4byte	0x9e
 644 00e5 02       		.byte	0x2
 645 00e6 23       		.byte	0x23
 646 00e7 0C       		.uleb128 0xc
 647 00e8 08       		.uleb128 0x8
 648 00e9 53435200 		.ascii	"SCR\000"
 649 00ed 03       		.byte	0x3
 650 00ee 4E01     		.2byte	0x14e
 651 00f0 9E000000 		.4byte	0x9e
 652 00f4 02       		.byte	0x2
 653 00f5 23       		.byte	0x23
 654 00f6 10       		.uleb128 0x10
 655 00f7 08       		.uleb128 0x8
 656 00f8 43435200 		.ascii	"CCR\000"
 657 00fc 03       		.byte	0x3
 658 00fd 4F01     		.2byte	0x14f
 659 00ff 9E000000 		.4byte	0x9e
 660 0103 02       		.byte	0x2
 661 0104 23       		.byte	0x23
 662 0105 14       		.uleb128 0x14
 663 0106 08       		.uleb128 0x8
 664 0107 53485000 		.ascii	"SHP\000"
 665 010b 03       		.byte	0x3
 666 010c 5001     		.2byte	0x150
 667 010e FE010000 		.4byte	0x1fe
 668 0112 02       		.byte	0x2
 669 0113 23       		.byte	0x23
 670 0114 18       		.uleb128 0x18
 671 0115 07       		.uleb128 0x7
 672 0116 28020000 		.4byte	.LASF18
 673 011a 03       		.byte	0x3
 674 011b 5101     		.2byte	0x151
 675 011d 9E000000 		.4byte	0x9e
 676 0121 02       		.byte	0x2
 677 0122 23       		.byte	0x23
 678 0123 24       		.uleb128 0x24
 679 0124 07       		.uleb128 0x7
 680 0125 ED000000 		.4byte	.LASF19
 681 0129 03       		.byte	0x3
 682 012a 5201     		.2byte	0x152
 683 012c 9E000000 		.4byte	0x9e
 684 0130 02       		.byte	0x2
 685 0131 23       		.byte	0x23
 686 0132 28       		.uleb128 0x28
 687 0133 07       		.uleb128 0x7
 688 0134 8E020000 		.4byte	.LASF20
 689 0138 03       		.byte	0x3
 690 0139 5301     		.2byte	0x153
 691 013b 9E000000 		.4byte	0x9e
 692 013f 02       		.byte	0x2
 693 0140 23       		.byte	0x23
 694 0141 2C       		.uleb128 0x2c
 695 0142 07       		.uleb128 0x7
 696 0143 79020000 		.4byte	.LASF21
 697 0147 03       		.byte	0x3
 698 0148 5401     		.2byte	0x154
ARM GAS  /tmp/cc1b8X6P.s 			page 20


 699 014a 9E000000 		.4byte	0x9e
 700 014e 02       		.byte	0x2
 701 014f 23       		.byte	0x23
 702 0150 30       		.uleb128 0x30
 703 0151 07       		.uleb128 0x7
 704 0152 2E020000 		.4byte	.LASF22
 705 0156 03       		.byte	0x3
 706 0157 5501     		.2byte	0x155
 707 0159 9E000000 		.4byte	0x9e
 708 015d 02       		.byte	0x2
 709 015e 23       		.byte	0x23
 710 015f 34       		.uleb128 0x34
 711 0160 07       		.uleb128 0x7
 712 0161 B4000000 		.4byte	.LASF23
 713 0165 03       		.byte	0x3
 714 0166 5601     		.2byte	0x156
 715 0168 9E000000 		.4byte	0x9e
 716 016c 02       		.byte	0x2
 717 016d 23       		.byte	0x23
 718 016e 38       		.uleb128 0x38
 719 016f 07       		.uleb128 0x7
 720 0170 FB020000 		.4byte	.LASF24
 721 0174 03       		.byte	0x3
 722 0175 5701     		.2byte	0x157
 723 0177 9E000000 		.4byte	0x9e
 724 017b 02       		.byte	0x2
 725 017c 23       		.byte	0x23
 726 017d 3C       		.uleb128 0x3c
 727 017e 08       		.uleb128 0x8
 728 017f 50465200 		.ascii	"PFR\000"
 729 0183 03       		.byte	0x3
 730 0184 5801     		.2byte	0x158
 731 0186 13020000 		.4byte	0x213
 732 018a 02       		.byte	0x2
 733 018b 23       		.byte	0x23
 734 018c 40       		.uleb128 0x40
 735 018d 08       		.uleb128 0x8
 736 018e 44465200 		.ascii	"DFR\000"
 737 0192 03       		.byte	0x3
 738 0193 5901     		.2byte	0x159
 739 0195 E9010000 		.4byte	0x1e9
 740 0199 02       		.byte	0x2
 741 019a 23       		.byte	0x23
 742 019b 48       		.uleb128 0x48
 743 019c 08       		.uleb128 0x8
 744 019d 41445200 		.ascii	"ADR\000"
 745 01a1 03       		.byte	0x3
 746 01a2 5A01     		.2byte	0x15a
 747 01a4 E9010000 		.4byte	0x1e9
 748 01a8 02       		.byte	0x2
 749 01a9 23       		.byte	0x23
 750 01aa 4C       		.uleb128 0x4c
 751 01ab 07       		.uleb128 0x7
 752 01ac 93020000 		.4byte	.LASF25
 753 01b0 03       		.byte	0x3
 754 01b1 5B01     		.2byte	0x15b
 755 01b3 2D020000 		.4byte	0x22d
ARM GAS  /tmp/cc1b8X6P.s 			page 21


 756 01b7 02       		.byte	0x2
 757 01b8 23       		.byte	0x23
 758 01b9 50       		.uleb128 0x50
 759 01ba 07       		.uleb128 0x7
 760 01bb 74020000 		.4byte	.LASF26
 761 01bf 03       		.byte	0x3
 762 01c0 5C01     		.2byte	0x15c
 763 01c2 47020000 		.4byte	0x247
 764 01c6 02       		.byte	0x2
 765 01c7 23       		.byte	0x23
 766 01c8 60       		.uleb128 0x60
 767 01c9 07       		.uleb128 0x7
 768 01ca 59000000 		.4byte	.LASF27
 769 01ce 03       		.byte	0x3
 770 01cf 5D01     		.2byte	0x15d
 771 01d1 37020000 		.4byte	0x237
 772 01d5 02       		.byte	0x2
 773 01d6 23       		.byte	0x23
 774 01d7 74       		.uleb128 0x74
 775 01d8 07       		.uleb128 0x7
 776 01d9 24030000 		.4byte	.LASF28
 777 01dd 03       		.byte	0x3
 778 01de 5E01     		.2byte	0x15e
 779 01e0 9E000000 		.4byte	0x9e
 780 01e4 03       		.byte	0x3
 781 01e5 23       		.byte	0x23
 782 01e6 8801     		.uleb128 0x88
 783 01e8 00       		.byte	0
 784 01e9 09       		.uleb128 0x9
 785 01ea 9E000000 		.4byte	0x9e
 786 01ee 0A       		.uleb128 0xa
 787 01ef 2C000000 		.4byte	0x2c
 788 01f3 FE010000 		.4byte	0x1fe
 789 01f7 0B       		.uleb128 0xb
 790 01f8 97000000 		.4byte	0x97
 791 01fc 0B       		.byte	0xb
 792 01fd 00       		.byte	0
 793 01fe 05       		.uleb128 0x5
 794 01ff EE010000 		.4byte	0x1ee
 795 0203 0A       		.uleb128 0xa
 796 0204 69000000 		.4byte	0x69
 797 0208 13020000 		.4byte	0x213
 798 020c 0B       		.uleb128 0xb
 799 020d 97000000 		.4byte	0x97
 800 0211 01       		.byte	0x1
 801 0212 00       		.byte	0
 802 0213 09       		.uleb128 0x9
 803 0214 18020000 		.4byte	0x218
 804 0218 05       		.uleb128 0x5
 805 0219 03020000 		.4byte	0x203
 806 021d 0A       		.uleb128 0xa
 807 021e 69000000 		.4byte	0x69
 808 0222 2D020000 		.4byte	0x22d
 809 0226 0B       		.uleb128 0xb
 810 0227 97000000 		.4byte	0x97
 811 022b 03       		.byte	0x3
 812 022c 00       		.byte	0
ARM GAS  /tmp/cc1b8X6P.s 			page 22


 813 022d 09       		.uleb128 0x9
 814 022e 32020000 		.4byte	0x232
 815 0232 05       		.uleb128 0x5
 816 0233 1D020000 		.4byte	0x21d
 817 0237 0A       		.uleb128 0xa
 818 0238 69000000 		.4byte	0x69
 819 023c 47020000 		.4byte	0x247
 820 0240 0B       		.uleb128 0xb
 821 0241 97000000 		.4byte	0x97
 822 0245 04       		.byte	0x4
 823 0246 00       		.byte	0
 824 0247 09       		.uleb128 0x9
 825 0248 4C020000 		.4byte	0x24c
 826 024c 05       		.uleb128 0x5
 827 024d 37020000 		.4byte	0x237
 828 0251 0C       		.uleb128 0xc
 829 0252 37010000 		.4byte	.LASF29
 830 0256 03       		.byte	0x3
 831 0257 5F01     		.2byte	0x15f
 832 0259 A3000000 		.4byte	0xa3
 833 025d 0D       		.uleb128 0xd
 834 025e 01       		.byte	0x1
 835 025f 04       		.byte	0x4
 836 0260 1201     		.2byte	0x112
 837 0262 73020000 		.4byte	0x273
 838 0266 0E       		.uleb128 0xe
 839 0267 E3020000 		.4byte	.LASF30
 840 026b 00       		.sleb128 0
 841 026c 0F       		.uleb128 0xf
 842 026d 53455400 		.ascii	"SET\000"
 843 0271 01       		.sleb128 1
 844 0272 00       		.byte	0
 845 0273 06       		.uleb128 0x6
 846 0274 88       		.byte	0x88
 847 0275 04       		.byte	0x4
 848 0276 E001     		.2byte	0x1e0
 849 0278 32030000 		.4byte	0x332
 850 027c 08       		.uleb128 0x8
 851 027d 41435200 		.ascii	"ACR\000"
 852 0281 04       		.byte	0x4
 853 0282 E201     		.2byte	0x1e2
 854 0284 9E000000 		.4byte	0x9e
 855 0288 02       		.byte	0x2
 856 0289 23       		.byte	0x23
 857 028a 00       		.uleb128 0
 858 028b 07       		.uleb128 0x7
 859 028c 5C020000 		.4byte	.LASF31
 860 0290 04       		.byte	0x4
 861 0291 E301     		.2byte	0x1e3
 862 0293 9E000000 		.4byte	0x9e
 863 0297 02       		.byte	0x2
 864 0298 23       		.byte	0x23
 865 0299 04       		.uleb128 0x4
 866 029a 07       		.uleb128 0x7
 867 029b 3D000000 		.4byte	.LASF32
 868 029f 04       		.byte	0x4
 869 02a0 E401     		.2byte	0x1e4
ARM GAS  /tmp/cc1b8X6P.s 			page 23


 870 02a2 9E000000 		.4byte	0x9e
 871 02a6 02       		.byte	0x2
 872 02a7 23       		.byte	0x23
 873 02a8 08       		.uleb128 0x8
 874 02a9 07       		.uleb128 0x7
 875 02aa D0010000 		.4byte	.LASF33
 876 02ae 04       		.byte	0x4
 877 02af E501     		.2byte	0x1e5
 878 02b1 9E000000 		.4byte	0x9e
 879 02b5 02       		.byte	0x2
 880 02b6 23       		.byte	0x23
 881 02b7 0C       		.uleb128 0xc
 882 02b8 07       		.uleb128 0x7
 883 02b9 DB020000 		.4byte	.LASF34
 884 02bd 04       		.byte	0x4
 885 02be E601     		.2byte	0x1e6
 886 02c0 9E000000 		.4byte	0x9e
 887 02c4 02       		.byte	0x2
 888 02c5 23       		.byte	0x23
 889 02c6 10       		.uleb128 0x10
 890 02c7 07       		.uleb128 0x7
 891 02c8 8F000000 		.4byte	.LASF35
 892 02cc 04       		.byte	0x4
 893 02cd E701     		.2byte	0x1e7
 894 02cf 9E000000 		.4byte	0x9e
 895 02d3 02       		.byte	0x2
 896 02d4 23       		.byte	0x23
 897 02d5 14       		.uleb128 0x14
 898 02d6 08       		.uleb128 0x8
 899 02d7 535200   		.ascii	"SR\000"
 900 02da 04       		.byte	0x4
 901 02db E801     		.2byte	0x1e8
 902 02dd 9E000000 		.4byte	0x9e
 903 02e1 02       		.byte	0x2
 904 02e2 23       		.byte	0x23
 905 02e3 18       		.uleb128 0x18
 906 02e4 08       		.uleb128 0x8
 907 02e5 4F425200 		.ascii	"OBR\000"
 908 02e9 04       		.byte	0x4
 909 02ea E901     		.2byte	0x1e9
 910 02ec 9E000000 		.4byte	0x9e
 911 02f0 02       		.byte	0x2
 912 02f1 23       		.byte	0x23
 913 02f2 1C       		.uleb128 0x1c
 914 02f3 07       		.uleb128 0x7
 915 02f4 E8000000 		.4byte	.LASF36
 916 02f8 04       		.byte	0x4
 917 02f9 EA01     		.2byte	0x1ea
 918 02fb 9E000000 		.4byte	0x9e
 919 02ff 02       		.byte	0x2
 920 0300 23       		.byte	0x23
 921 0301 20       		.uleb128 0x20
 922 0302 07       		.uleb128 0x7
 923 0303 00030000 		.4byte	.LASF37
 924 0307 04       		.byte	0x4
 925 0308 EB01     		.2byte	0x1eb
 926 030a 32030000 		.4byte	0x332
ARM GAS  /tmp/cc1b8X6P.s 			page 24


 927 030e 02       		.byte	0x2
 928 030f 23       		.byte	0x23
 929 0310 24       		.uleb128 0x24
 930 0311 07       		.uleb128 0x7
 931 0312 61020000 		.4byte	.LASF38
 932 0316 04       		.byte	0x4
 933 0317 EC01     		.2byte	0x1ec
 934 0319 9E000000 		.4byte	0x9e
 935 031d 03       		.byte	0x3
 936 031e 23       		.byte	0x23
 937 031f 8001     		.uleb128 0x80
 938 0321 07       		.uleb128 0x7
 939 0322 E9020000 		.4byte	.LASF39
 940 0326 04       		.byte	0x4
 941 0327 ED01     		.2byte	0x1ed
 942 0329 9E000000 		.4byte	0x9e
 943 032d 03       		.byte	0x3
 944 032e 23       		.byte	0x23
 945 032f 8401     		.uleb128 0x84
 946 0331 00       		.byte	0
 947 0332 0A       		.uleb128 0xa
 948 0333 69000000 		.4byte	0x69
 949 0337 42030000 		.4byte	0x342
 950 033b 0B       		.uleb128 0xb
 951 033c 97000000 		.4byte	0x97
 952 0340 16       		.byte	0x16
 953 0341 00       		.byte	0
 954 0342 0C       		.uleb128 0xc
 955 0343 09030000 		.4byte	.LASF40
 956 0347 04       		.byte	0x4
 957 0348 EE01     		.2byte	0x1ee
 958 034a 73020000 		.4byte	0x273
 959 034e 06       		.uleb128 0x6
 960 034f 08       		.byte	0x8
 961 0350 04       		.byte	0x4
 962 0351 7802     		.2byte	0x278
 963 0353 75030000 		.4byte	0x375
 964 0357 08       		.uleb128 0x8
 965 0358 435200   		.ascii	"CR\000"
 966 035b 04       		.byte	0x4
 967 035c 7A02     		.2byte	0x27a
 968 035e 9E000000 		.4byte	0x9e
 969 0362 02       		.byte	0x2
 970 0363 23       		.byte	0x23
 971 0364 00       		.uleb128 0
 972 0365 08       		.uleb128 0x8
 973 0366 43535200 		.ascii	"CSR\000"
 974 036a 04       		.byte	0x4
 975 036b 7B02     		.2byte	0x27b
 976 036d 9E000000 		.4byte	0x9e
 977 0371 02       		.byte	0x2
 978 0372 23       		.byte	0x23
 979 0373 04       		.uleb128 0x4
 980 0374 00       		.byte	0
 981 0375 0C       		.uleb128 0xc
 982 0376 31000000 		.4byte	.LASF41
 983 037a 04       		.byte	0x4
ARM GAS  /tmp/cc1b8X6P.s 			page 25


 984 037b 7C02     		.2byte	0x27c
 985 037d 4E030000 		.4byte	0x34e
 986 0381 06       		.uleb128 0x6
 987 0382 38       		.byte	0x38
 988 0383 04       		.byte	0x4
 989 0384 8202     		.2byte	0x282
 990 0386 5C040000 		.4byte	0x45c
 991 038a 08       		.uleb128 0x8
 992 038b 435200   		.ascii	"CR\000"
 993 038e 04       		.byte	0x4
 994 038f 8402     		.2byte	0x284
 995 0391 9E000000 		.4byte	0x9e
 996 0395 02       		.byte	0x2
 997 0396 23       		.byte	0x23
 998 0397 00       		.uleb128 0
 999 0398 07       		.uleb128 0x7
 1000 0399 4D000000 		.4byte	.LASF42
 1001 039d 04       		.byte	0x4
 1002 039e 8502     		.2byte	0x285
 1003 03a0 9E000000 		.4byte	0x9e
 1004 03a4 02       		.byte	0x2
 1005 03a5 23       		.byte	0x23
 1006 03a6 04       		.uleb128 0x4
 1007 03a7 07       		.uleb128 0x7
 1008 03a8 63000000 		.4byte	.LASF43
 1009 03ac 04       		.byte	0x4
 1010 03ad 8602     		.2byte	0x286
 1011 03af 9E000000 		.4byte	0x9e
 1012 03b3 02       		.byte	0x2
 1013 03b4 23       		.byte	0x23
 1014 03b5 08       		.uleb128 0x8
 1015 03b6 08       		.uleb128 0x8
 1016 03b7 43495200 		.ascii	"CIR\000"
 1017 03bb 04       		.byte	0x4
 1018 03bc 8702     		.2byte	0x287
 1019 03be 9E000000 		.4byte	0x9e
 1020 03c2 02       		.byte	0x2
 1021 03c3 23       		.byte	0x23
 1022 03c4 0C       		.uleb128 0xc
 1023 03c5 07       		.uleb128 0x7
 1024 03c6 97000000 		.4byte	.LASF44
 1025 03ca 04       		.byte	0x4
 1026 03cb 8802     		.2byte	0x288
 1027 03cd 9E000000 		.4byte	0x9e
 1028 03d1 02       		.byte	0x2
 1029 03d2 23       		.byte	0x23
 1030 03d3 10       		.uleb128 0x10
 1031 03d4 07       		.uleb128 0x7
 1032 03d5 DF000000 		.4byte	.LASF45
 1033 03d9 04       		.byte	0x4
 1034 03da 8902     		.2byte	0x289
 1035 03dc 9E000000 		.4byte	0x9e
 1036 03e0 02       		.byte	0x2
 1037 03e1 23       		.byte	0x23
 1038 03e2 14       		.uleb128 0x14
 1039 03e3 07       		.uleb128 0x7
 1040 03e4 00000000 		.4byte	.LASF46
ARM GAS  /tmp/cc1b8X6P.s 			page 26


 1041 03e8 04       		.byte	0x4
 1042 03e9 8A02     		.2byte	0x28a
 1043 03eb 9E000000 		.4byte	0x9e
 1044 03ef 02       		.byte	0x2
 1045 03f0 23       		.byte	0x23
 1046 03f1 18       		.uleb128 0x18
 1047 03f2 07       		.uleb128 0x7
 1048 03f3 D8000000 		.4byte	.LASF47
 1049 03f7 04       		.byte	0x4
 1050 03f8 8B02     		.2byte	0x28b
 1051 03fa 9E000000 		.4byte	0x9e
 1052 03fe 02       		.byte	0x2
 1053 03ff 23       		.byte	0x23
 1054 0400 1C       		.uleb128 0x1c
 1055 0401 07       		.uleb128 0x7
 1056 0402 82000000 		.4byte	.LASF48
 1057 0406 04       		.byte	0x4
 1058 0407 8C02     		.2byte	0x28c
 1059 0409 9E000000 		.4byte	0x9e
 1060 040d 02       		.byte	0x2
 1061 040e 23       		.byte	0x23
 1062 040f 20       		.uleb128 0x20
 1063 0410 07       		.uleb128 0x7
 1064 0411 70000000 		.4byte	.LASF49
 1065 0415 04       		.byte	0x4
 1066 0416 8D02     		.2byte	0x28d
 1067 0418 9E000000 		.4byte	0x9e
 1068 041c 02       		.byte	0x2
 1069 041d 23       		.byte	0x23
 1070 041e 24       		.uleb128 0x24
 1071 041f 07       		.uleb128 0x7
 1072 0420 44000000 		.4byte	.LASF50
 1073 0424 04       		.byte	0x4
 1074 0425 8E02     		.2byte	0x28e
 1075 0427 9E000000 		.4byte	0x9e
 1076 042b 02       		.byte	0x2
 1077 042c 23       		.byte	0x23
 1078 042d 28       		.uleb128 0x28
 1079 042e 07       		.uleb128 0x7
 1080 042f 2A030000 		.4byte	.LASF51
 1081 0433 04       		.byte	0x4
 1082 0434 8F02     		.2byte	0x28f
 1083 0436 9E000000 		.4byte	0x9e
 1084 043a 02       		.byte	0x2
 1085 043b 23       		.byte	0x23
 1086 043c 2C       		.uleb128 0x2c
 1087 043d 07       		.uleb128 0x7
 1088 043e 52020000 		.4byte	.LASF52
 1089 0442 04       		.byte	0x4
 1090 0443 9002     		.2byte	0x290
 1091 0445 9E000000 		.4byte	0x9e
 1092 0449 02       		.byte	0x2
 1093 044a 23       		.byte	0x23
 1094 044b 30       		.uleb128 0x30
 1095 044c 08       		.uleb128 0x8
 1096 044d 43535200 		.ascii	"CSR\000"
 1097 0451 04       		.byte	0x4
ARM GAS  /tmp/cc1b8X6P.s 			page 27


 1098 0452 9102     		.2byte	0x291
 1099 0454 9E000000 		.4byte	0x9e
 1100 0458 02       		.byte	0x2
 1101 0459 23       		.byte	0x23
 1102 045a 34       		.uleb128 0x34
 1103 045b 00       		.byte	0
 1104 045c 0C       		.uleb128 0xc
 1105 045d CC000000 		.4byte	.LASF53
 1106 0461 04       		.byte	0x4
 1107 0462 9202     		.2byte	0x292
 1108 0464 81030000 		.4byte	0x381
 1109 0468 10       		.uleb128 0x10
 1110 0469 01       		.byte	0x1
 1111 046a 34020000 		.4byte	.LASF67
 1112 046e 01       		.byte	0x1
 1113 046f AC       		.byte	0xac
 1114 0470 01       		.byte	0x1
 1115 0471 00000000 		.4byte	.LFB56
 1116 0475 64000000 		.4byte	.LFE56
 1117 0479 00000000 		.4byte	.LLST0
 1118 047d 01       		.byte	0x1
 1119 047e 11       		.uleb128 0x11
 1120 047f 01       		.byte	0x1
 1121 0480 1B000000 		.4byte	.LASF68
 1122 0484 01       		.byte	0x1
 1123 0485 F1       		.byte	0xf1
 1124 0486 01       		.byte	0x1
 1125 0487 64000000 		.4byte	.LFB57
 1126 048b B0010000 		.4byte	.LFE57
 1127 048f 20000000 		.4byte	.LLST1
 1128 0493 01       		.byte	0x1
 1129 0494 DF040000 		.4byte	0x4df
 1130 0498 12       		.uleb128 0x12
 1131 0499 746D7000 		.ascii	"tmp\000"
 1132 049d 01       		.byte	0x1
 1133 049e F3       		.byte	0xf3
 1134 049f 69000000 		.4byte	0x69
 1135 04a3 02       		.byte	0x2
 1136 04a4 91       		.byte	0x91
 1137 04a5 7C       		.sleb128 -4
 1138 04a6 13       		.uleb128 0x13
 1139 04a7 1C010000 		.4byte	.LASF54
 1140 04ab 01       		.byte	0x1
 1141 04ac F3       		.byte	0xf3
 1142 04ad 69000000 		.4byte	0x69
 1143 04b1 02       		.byte	0x2
 1144 04b2 91       		.byte	0x91
 1145 04b3 78       		.sleb128 -8
 1146 04b4 13       		.uleb128 0x13
 1147 04b5 AD000000 		.4byte	.LASF55
 1148 04b9 01       		.byte	0x1
 1149 04ba F3       		.byte	0xf3
 1150 04bb 69000000 		.4byte	0x69
 1151 04bf 02       		.byte	0x2
 1152 04c0 91       		.byte	0x91
 1153 04c1 74       		.sleb128 -12
 1154 04c2 13       		.uleb128 0x13
ARM GAS  /tmp/cc1b8X6P.s 			page 28


 1155 04c3 12010000 		.4byte	.LASF56
 1156 04c7 01       		.byte	0x1
 1157 04c8 F3       		.byte	0xf3
 1158 04c9 69000000 		.4byte	0x69
 1159 04cd 02       		.byte	0x2
 1160 04ce 91       		.byte	0x91
 1161 04cf 70       		.sleb128 -16
 1162 04d0 13       		.uleb128 0x13
 1163 04d1 09000000 		.4byte	.LASF57
 1164 04d5 01       		.byte	0x1
 1165 04d6 F3       		.byte	0xf3
 1166 04d7 69000000 		.4byte	0x69
 1167 04db 02       		.byte	0x2
 1168 04dc 91       		.byte	0x91
 1169 04dd 6C       		.sleb128 -20
 1170 04de 00       		.byte	0
 1171 04df 14       		.uleb128 0x14
 1172 04e0 A6020000 		.4byte	.LASF69
 1173 04e4 01       		.byte	0x1
 1174 04e5 2C01     		.2byte	0x12c
 1175 04e7 01       		.byte	0x1
 1176 04e8 B0010000 		.4byte	.LFB58
 1177 04ec C0020000 		.4byte	.LFE58
 1178 04f0 40000000 		.4byte	.LLST2
 1179 04f4 01       		.byte	0x1
 1180 04f5 18050000 		.4byte	0x518
 1181 04f9 15       		.uleb128 0x15
 1182 04fa D7010000 		.4byte	.LASF58
 1183 04fe 01       		.byte	0x1
 1184 04ff 2E01     		.2byte	0x12e
 1185 0501 9E000000 		.4byte	0x9e
 1186 0505 02       		.byte	0x2
 1187 0506 91       		.byte	0x91
 1188 0507 7C       		.sleb128 -4
 1189 0508 15       		.uleb128 0x15
 1190 0509 B9000000 		.4byte	.LASF59
 1191 050d 01       		.byte	0x1
 1192 050e 2E01     		.2byte	0x12e
 1193 0510 9E000000 		.4byte	0x9e
 1194 0514 02       		.byte	0x2
 1195 0515 91       		.byte	0x91
 1196 0516 78       		.sleb128 -8
 1197 0517 00       		.byte	0
 1198 0518 16       		.uleb128 0x16
 1199 0519 17030000 		.4byte	.LASF60
 1200 051d 03       		.byte	0x3
 1201 051e 1606     		.2byte	0x616
 1202 0520 26050000 		.4byte	0x526
 1203 0524 01       		.byte	0x1
 1204 0525 01       		.byte	0x1
 1205 0526 05       		.uleb128 0x5
 1206 0527 57000000 		.4byte	0x57
 1207 052b 17       		.uleb128 0x17
 1208 052c 7E020000 		.4byte	.LASF61
 1209 0530 01       		.byte	0x1
 1210 0531 8F       		.byte	0x8f
 1211 0532 69000000 		.4byte	0x69
ARM GAS  /tmp/cc1b8X6P.s 			page 29


 1212 0536 01       		.byte	0x1
 1213 0537 05       		.byte	0x5
 1214 0538 03       		.byte	0x3
 1215 0539 00000000 		.4byte	SystemCoreClock
 1216 053d 0A       		.uleb128 0xa
 1217 053e 2C000000 		.4byte	0x2c
 1218 0542 4D050000 		.4byte	0x54d
 1219 0546 0B       		.uleb128 0xb
 1220 0547 97000000 		.4byte	0x97
 1221 054b 08       		.byte	0x8
 1222 054c 00       		.byte	0
 1223 054d 17       		.uleb128 0x17
 1224 054e EF020000 		.4byte	.LASF62
 1225 0552 01       		.byte	0x1
 1226 0553 90       		.byte	0x90
 1227 0554 5F050000 		.4byte	0x55f
 1228 0558 01       		.byte	0x1
 1229 0559 05       		.byte	0x5
 1230 055a 03       		.byte	0x3
 1231 055b 00000000 		.4byte	PLLMulTable
 1232 055f 09       		.uleb128 0x9
 1233 0560 64050000 		.4byte	0x564
 1234 0564 05       		.uleb128 0x5
 1235 0565 3D050000 		.4byte	0x53d
 1236 0569 0A       		.uleb128 0xa
 1237 056a 2C000000 		.4byte	0x2c
 1238 056e 79050000 		.4byte	0x579
 1239 0572 0B       		.uleb128 0xb
 1240 0573 97000000 		.4byte	0x97
 1241 0577 0F       		.byte	0xf
 1242 0578 00       		.byte	0
 1243 0579 17       		.uleb128 0x17
 1244 057a 98020000 		.4byte	.LASF63
 1245 057e 01       		.byte	0x1
 1246 057f 91       		.byte	0x91
 1247 0580 8B050000 		.4byte	0x58b
 1248 0584 01       		.byte	0x1
 1249 0585 05       		.byte	0x5
 1250 0586 03       		.byte	0x3
 1251 0587 00000000 		.4byte	AHBPrescTable
 1252 058b 09       		.uleb128 0x9
 1253 058c 90050000 		.4byte	0x590
 1254 0590 05       		.uleb128 0x5
 1255 0591 69050000 		.4byte	0x569
 1256 0595 00       		.byte	0
 1257              		.section	.debug_abbrev,"",%progbits
 1258              	.Ldebug_abbrev0:
 1259 0000 01       		.uleb128 0x1
 1260 0001 11       		.uleb128 0x11
 1261 0002 01       		.byte	0x1
 1262 0003 25       		.uleb128 0x25
 1263 0004 0E       		.uleb128 0xe
 1264 0005 13       		.uleb128 0x13
 1265 0006 0B       		.uleb128 0xb
 1266 0007 03       		.uleb128 0x3
 1267 0008 0E       		.uleb128 0xe
 1268 0009 1B       		.uleb128 0x1b
ARM GAS  /tmp/cc1b8X6P.s 			page 30


 1269 000a 0E       		.uleb128 0xe
 1270 000b 11       		.uleb128 0x11
 1271 000c 01       		.uleb128 0x1
 1272 000d 12       		.uleb128 0x12
 1273 000e 01       		.uleb128 0x1
 1274 000f 10       		.uleb128 0x10
 1275 0010 06       		.uleb128 0x6
 1276 0011 00       		.byte	0
 1277 0012 00       		.byte	0
 1278 0013 02       		.uleb128 0x2
 1279 0014 24       		.uleb128 0x24
 1280 0015 00       		.byte	0
 1281 0016 0B       		.uleb128 0xb
 1282 0017 0B       		.uleb128 0xb
 1283 0018 3E       		.uleb128 0x3e
 1284 0019 0B       		.uleb128 0xb
 1285 001a 03       		.uleb128 0x3
 1286 001b 0E       		.uleb128 0xe
 1287 001c 00       		.byte	0
 1288 001d 00       		.byte	0
 1289 001e 03       		.uleb128 0x3
 1290 001f 16       		.uleb128 0x16
 1291 0020 00       		.byte	0
 1292 0021 03       		.uleb128 0x3
 1293 0022 0E       		.uleb128 0xe
 1294 0023 3A       		.uleb128 0x3a
 1295 0024 0B       		.uleb128 0xb
 1296 0025 3B       		.uleb128 0x3b
 1297 0026 0B       		.uleb128 0xb
 1298 0027 49       		.uleb128 0x49
 1299 0028 13       		.uleb128 0x13
 1300 0029 00       		.byte	0
 1301 002a 00       		.byte	0
 1302 002b 04       		.uleb128 0x4
 1303 002c 24       		.uleb128 0x24
 1304 002d 00       		.byte	0
 1305 002e 0B       		.uleb128 0xb
 1306 002f 0B       		.uleb128 0xb
 1307 0030 3E       		.uleb128 0x3e
 1308 0031 0B       		.uleb128 0xb
 1309 0032 03       		.uleb128 0x3
 1310 0033 08       		.uleb128 0x8
 1311 0034 00       		.byte	0
 1312 0035 00       		.byte	0
 1313 0036 05       		.uleb128 0x5
 1314 0037 35       		.uleb128 0x35
 1315 0038 00       		.byte	0
 1316 0039 49       		.uleb128 0x49
 1317 003a 13       		.uleb128 0x13
 1318 003b 00       		.byte	0
 1319 003c 00       		.byte	0
 1320 003d 06       		.uleb128 0x6
 1321 003e 13       		.uleb128 0x13
 1322 003f 01       		.byte	0x1
 1323 0040 0B       		.uleb128 0xb
 1324 0041 0B       		.uleb128 0xb
 1325 0042 3A       		.uleb128 0x3a
ARM GAS  /tmp/cc1b8X6P.s 			page 31


 1326 0043 0B       		.uleb128 0xb
 1327 0044 3B       		.uleb128 0x3b
 1328 0045 05       		.uleb128 0x5
 1329 0046 01       		.uleb128 0x1
 1330 0047 13       		.uleb128 0x13
 1331 0048 00       		.byte	0
 1332 0049 00       		.byte	0
 1333 004a 07       		.uleb128 0x7
 1334 004b 0D       		.uleb128 0xd
 1335 004c 00       		.byte	0
 1336 004d 03       		.uleb128 0x3
 1337 004e 0E       		.uleb128 0xe
 1338 004f 3A       		.uleb128 0x3a
 1339 0050 0B       		.uleb128 0xb
 1340 0051 3B       		.uleb128 0x3b
 1341 0052 05       		.uleb128 0x5
 1342 0053 49       		.uleb128 0x49
 1343 0054 13       		.uleb128 0x13
 1344 0055 38       		.uleb128 0x38
 1345 0056 0A       		.uleb128 0xa
 1346 0057 00       		.byte	0
 1347 0058 00       		.byte	0
 1348 0059 08       		.uleb128 0x8
 1349 005a 0D       		.uleb128 0xd
 1350 005b 00       		.byte	0
 1351 005c 03       		.uleb128 0x3
 1352 005d 08       		.uleb128 0x8
 1353 005e 3A       		.uleb128 0x3a
 1354 005f 0B       		.uleb128 0xb
 1355 0060 3B       		.uleb128 0x3b
 1356 0061 05       		.uleb128 0x5
 1357 0062 49       		.uleb128 0x49
 1358 0063 13       		.uleb128 0x13
 1359 0064 38       		.uleb128 0x38
 1360 0065 0A       		.uleb128 0xa
 1361 0066 00       		.byte	0
 1362 0067 00       		.byte	0
 1363 0068 09       		.uleb128 0x9
 1364 0069 26       		.uleb128 0x26
 1365 006a 00       		.byte	0
 1366 006b 49       		.uleb128 0x49
 1367 006c 13       		.uleb128 0x13
 1368 006d 00       		.byte	0
 1369 006e 00       		.byte	0
 1370 006f 0A       		.uleb128 0xa
 1371 0070 01       		.uleb128 0x1
 1372 0071 01       		.byte	0x1
 1373 0072 49       		.uleb128 0x49
 1374 0073 13       		.uleb128 0x13
 1375 0074 01       		.uleb128 0x1
 1376 0075 13       		.uleb128 0x13
 1377 0076 00       		.byte	0
 1378 0077 00       		.byte	0
 1379 0078 0B       		.uleb128 0xb
 1380 0079 21       		.uleb128 0x21
 1381 007a 00       		.byte	0
 1382 007b 49       		.uleb128 0x49
ARM GAS  /tmp/cc1b8X6P.s 			page 32


 1383 007c 13       		.uleb128 0x13
 1384 007d 2F       		.uleb128 0x2f
 1385 007e 0B       		.uleb128 0xb
 1386 007f 00       		.byte	0
 1387 0080 00       		.byte	0
 1388 0081 0C       		.uleb128 0xc
 1389 0082 16       		.uleb128 0x16
 1390 0083 00       		.byte	0
 1391 0084 03       		.uleb128 0x3
 1392 0085 0E       		.uleb128 0xe
 1393 0086 3A       		.uleb128 0x3a
 1394 0087 0B       		.uleb128 0xb
 1395 0088 3B       		.uleb128 0x3b
 1396 0089 05       		.uleb128 0x5
 1397 008a 49       		.uleb128 0x49
 1398 008b 13       		.uleb128 0x13
 1399 008c 00       		.byte	0
 1400 008d 00       		.byte	0
 1401 008e 0D       		.uleb128 0xd
 1402 008f 04       		.uleb128 0x4
 1403 0090 01       		.byte	0x1
 1404 0091 0B       		.uleb128 0xb
 1405 0092 0B       		.uleb128 0xb
 1406 0093 3A       		.uleb128 0x3a
 1407 0094 0B       		.uleb128 0xb
 1408 0095 3B       		.uleb128 0x3b
 1409 0096 05       		.uleb128 0x5
 1410 0097 01       		.uleb128 0x1
 1411 0098 13       		.uleb128 0x13
 1412 0099 00       		.byte	0
 1413 009a 00       		.byte	0
 1414 009b 0E       		.uleb128 0xe
 1415 009c 28       		.uleb128 0x28
 1416 009d 00       		.byte	0
 1417 009e 03       		.uleb128 0x3
 1418 009f 0E       		.uleb128 0xe
 1419 00a0 1C       		.uleb128 0x1c
 1420 00a1 0D       		.uleb128 0xd
 1421 00a2 00       		.byte	0
 1422 00a3 00       		.byte	0
 1423 00a4 0F       		.uleb128 0xf
 1424 00a5 28       		.uleb128 0x28
 1425 00a6 00       		.byte	0
 1426 00a7 03       		.uleb128 0x3
 1427 00a8 08       		.uleb128 0x8
 1428 00a9 1C       		.uleb128 0x1c
 1429 00aa 0D       		.uleb128 0xd
 1430 00ab 00       		.byte	0
 1431 00ac 00       		.byte	0
 1432 00ad 10       		.uleb128 0x10
 1433 00ae 2E       		.uleb128 0x2e
 1434 00af 00       		.byte	0
 1435 00b0 3F       		.uleb128 0x3f
 1436 00b1 0C       		.uleb128 0xc
 1437 00b2 03       		.uleb128 0x3
 1438 00b3 0E       		.uleb128 0xe
 1439 00b4 3A       		.uleb128 0x3a
ARM GAS  /tmp/cc1b8X6P.s 			page 33


 1440 00b5 0B       		.uleb128 0xb
 1441 00b6 3B       		.uleb128 0x3b
 1442 00b7 0B       		.uleb128 0xb
 1443 00b8 27       		.uleb128 0x27
 1444 00b9 0C       		.uleb128 0xc
 1445 00ba 11       		.uleb128 0x11
 1446 00bb 01       		.uleb128 0x1
 1447 00bc 12       		.uleb128 0x12
 1448 00bd 01       		.uleb128 0x1
 1449 00be 40       		.uleb128 0x40
 1450 00bf 06       		.uleb128 0x6
 1451 00c0 9642     		.uleb128 0x2116
 1452 00c2 0C       		.uleb128 0xc
 1453 00c3 00       		.byte	0
 1454 00c4 00       		.byte	0
 1455 00c5 11       		.uleb128 0x11
 1456 00c6 2E       		.uleb128 0x2e
 1457 00c7 01       		.byte	0x1
 1458 00c8 3F       		.uleb128 0x3f
 1459 00c9 0C       		.uleb128 0xc
 1460 00ca 03       		.uleb128 0x3
 1461 00cb 0E       		.uleb128 0xe
 1462 00cc 3A       		.uleb128 0x3a
 1463 00cd 0B       		.uleb128 0xb
 1464 00ce 3B       		.uleb128 0x3b
 1465 00cf 0B       		.uleb128 0xb
 1466 00d0 27       		.uleb128 0x27
 1467 00d1 0C       		.uleb128 0xc
 1468 00d2 11       		.uleb128 0x11
 1469 00d3 01       		.uleb128 0x1
 1470 00d4 12       		.uleb128 0x12
 1471 00d5 01       		.uleb128 0x1
 1472 00d6 40       		.uleb128 0x40
 1473 00d7 06       		.uleb128 0x6
 1474 00d8 9742     		.uleb128 0x2117
 1475 00da 0C       		.uleb128 0xc
 1476 00db 01       		.uleb128 0x1
 1477 00dc 13       		.uleb128 0x13
 1478 00dd 00       		.byte	0
 1479 00de 00       		.byte	0
 1480 00df 12       		.uleb128 0x12
 1481 00e0 34       		.uleb128 0x34
 1482 00e1 00       		.byte	0
 1483 00e2 03       		.uleb128 0x3
 1484 00e3 08       		.uleb128 0x8
 1485 00e4 3A       		.uleb128 0x3a
 1486 00e5 0B       		.uleb128 0xb
 1487 00e6 3B       		.uleb128 0x3b
 1488 00e7 0B       		.uleb128 0xb
 1489 00e8 49       		.uleb128 0x49
 1490 00e9 13       		.uleb128 0x13
 1491 00ea 02       		.uleb128 0x2
 1492 00eb 0A       		.uleb128 0xa
 1493 00ec 00       		.byte	0
 1494 00ed 00       		.byte	0
 1495 00ee 13       		.uleb128 0x13
 1496 00ef 34       		.uleb128 0x34
ARM GAS  /tmp/cc1b8X6P.s 			page 34


 1497 00f0 00       		.byte	0
 1498 00f1 03       		.uleb128 0x3
 1499 00f2 0E       		.uleb128 0xe
 1500 00f3 3A       		.uleb128 0x3a
 1501 00f4 0B       		.uleb128 0xb
 1502 00f5 3B       		.uleb128 0x3b
 1503 00f6 0B       		.uleb128 0xb
 1504 00f7 49       		.uleb128 0x49
 1505 00f8 13       		.uleb128 0x13
 1506 00f9 02       		.uleb128 0x2
 1507 00fa 0A       		.uleb128 0xa
 1508 00fb 00       		.byte	0
 1509 00fc 00       		.byte	0
 1510 00fd 14       		.uleb128 0x14
 1511 00fe 2E       		.uleb128 0x2e
 1512 00ff 01       		.byte	0x1
 1513 0100 03       		.uleb128 0x3
 1514 0101 0E       		.uleb128 0xe
 1515 0102 3A       		.uleb128 0x3a
 1516 0103 0B       		.uleb128 0xb
 1517 0104 3B       		.uleb128 0x3b
 1518 0105 05       		.uleb128 0x5
 1519 0106 27       		.uleb128 0x27
 1520 0107 0C       		.uleb128 0xc
 1521 0108 11       		.uleb128 0x11
 1522 0109 01       		.uleb128 0x1
 1523 010a 12       		.uleb128 0x12
 1524 010b 01       		.uleb128 0x1
 1525 010c 40       		.uleb128 0x40
 1526 010d 06       		.uleb128 0x6
 1527 010e 9742     		.uleb128 0x2117
 1528 0110 0C       		.uleb128 0xc
 1529 0111 01       		.uleb128 0x1
 1530 0112 13       		.uleb128 0x13
 1531 0113 00       		.byte	0
 1532 0114 00       		.byte	0
 1533 0115 15       		.uleb128 0x15
 1534 0116 34       		.uleb128 0x34
 1535 0117 00       		.byte	0
 1536 0118 03       		.uleb128 0x3
 1537 0119 0E       		.uleb128 0xe
 1538 011a 3A       		.uleb128 0x3a
 1539 011b 0B       		.uleb128 0xb
 1540 011c 3B       		.uleb128 0x3b
 1541 011d 05       		.uleb128 0x5
 1542 011e 49       		.uleb128 0x49
 1543 011f 13       		.uleb128 0x13
 1544 0120 02       		.uleb128 0x2
 1545 0121 0A       		.uleb128 0xa
 1546 0122 00       		.byte	0
 1547 0123 00       		.byte	0
 1548 0124 16       		.uleb128 0x16
 1549 0125 34       		.uleb128 0x34
 1550 0126 00       		.byte	0
 1551 0127 03       		.uleb128 0x3
 1552 0128 0E       		.uleb128 0xe
 1553 0129 3A       		.uleb128 0x3a
ARM GAS  /tmp/cc1b8X6P.s 			page 35


 1554 012a 0B       		.uleb128 0xb
 1555 012b 3B       		.uleb128 0x3b
 1556 012c 05       		.uleb128 0x5
 1557 012d 49       		.uleb128 0x49
 1558 012e 13       		.uleb128 0x13
 1559 012f 3F       		.uleb128 0x3f
 1560 0130 0C       		.uleb128 0xc
 1561 0131 3C       		.uleb128 0x3c
 1562 0132 0C       		.uleb128 0xc
 1563 0133 00       		.byte	0
 1564 0134 00       		.byte	0
 1565 0135 17       		.uleb128 0x17
 1566 0136 34       		.uleb128 0x34
 1567 0137 00       		.byte	0
 1568 0138 03       		.uleb128 0x3
 1569 0139 0E       		.uleb128 0xe
 1570 013a 3A       		.uleb128 0x3a
 1571 013b 0B       		.uleb128 0xb
 1572 013c 3B       		.uleb128 0x3b
 1573 013d 0B       		.uleb128 0xb
 1574 013e 49       		.uleb128 0x49
 1575 013f 13       		.uleb128 0x13
 1576 0140 3F       		.uleb128 0x3f
 1577 0141 0C       		.uleb128 0xc
 1578 0142 02       		.uleb128 0x2
 1579 0143 0A       		.uleb128 0xa
 1580 0144 00       		.byte	0
 1581 0145 00       		.byte	0
 1582 0146 00       		.byte	0
 1583              		.section	.debug_loc,"",%progbits
 1584              	.Ldebug_loc0:
 1585              	.LLST0:
 1586 0000 00000000 		.4byte	.LFB56-.Ltext0
 1587 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1588 0008 0200     		.2byte	0x2
 1589 000a 7D       		.byte	0x7d
 1590 000b 00       		.sleb128 0
 1591 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1592 0010 64000000 		.4byte	.LFE56-.Ltext0
 1593 0014 0200     		.2byte	0x2
 1594 0016 7D       		.byte	0x7d
 1595 0017 08       		.sleb128 8
 1596 0018 00000000 		.4byte	0
 1597 001c 00000000 		.4byte	0
 1598              	.LLST1:
 1599 0020 64000000 		.4byte	.LFB57-.Ltext0
 1600 0024 66000000 		.4byte	.LCFI1-.Ltext0
 1601 0028 0200     		.2byte	0x2
 1602 002a 7D       		.byte	0x7d
 1603 002b 00       		.sleb128 0
 1604 002c 66000000 		.4byte	.LCFI1-.Ltext0
 1605 0030 B0010000 		.4byte	.LFE57-.Ltext0
 1606 0034 0200     		.2byte	0x2
 1607 0036 7D       		.byte	0x7d
 1608 0037 18       		.sleb128 24
 1609 0038 00000000 		.4byte	0
 1610 003c 00000000 		.4byte	0
ARM GAS  /tmp/cc1b8X6P.s 			page 36


 1611              	.LLST2:
 1612 0040 B0010000 		.4byte	.LFB58-.Ltext0
 1613 0044 B2010000 		.4byte	.LCFI2-.Ltext0
 1614 0048 0200     		.2byte	0x2
 1615 004a 7D       		.byte	0x7d
 1616 004b 00       		.sleb128 0
 1617 004c B2010000 		.4byte	.LCFI2-.Ltext0
 1618 0050 C0020000 		.4byte	.LFE58-.Ltext0
 1619 0054 0200     		.2byte	0x2
 1620 0056 7D       		.byte	0x7d
 1621 0057 08       		.sleb128 8
 1622 0058 00000000 		.4byte	0
 1623 005c 00000000 		.4byte	0
 1624              		.section	.debug_aranges,"",%progbits
 1625 0000 1C000000 		.4byte	0x1c
 1626 0004 0200     		.2byte	0x2
 1627 0006 00000000 		.4byte	.Ldebug_info0
 1628 000a 04       		.byte	0x4
 1629 000b 00       		.byte	0
 1630 000c 0000     		.2byte	0
 1631 000e 0000     		.2byte	0
 1632 0010 00000000 		.4byte	.Ltext0
 1633 0014 C0020000 		.4byte	.Letext0-.Ltext0
 1634 0018 00000000 		.4byte	0
 1635 001c 00000000 		.4byte	0
 1636              		.section	.debug_line,"",%progbits
 1637              	.Ldebug_line0:
 1638 0000 09010000 		.section	.debug_str,"MS",%progbits,1
 1638      02009100 
 1638      00000201 
 1638      FB0E0D00 
 1638      01010101 
 1639              	.LASF46:
 1640 0000 41504231 		.ascii	"APB1RSTR\000"
 1640      52535452 
 1640      00
 1641              	.LASF57:
 1642 0009 6D736972 		.ascii	"msirange\000"
 1642      616E6765 
 1642      00
 1643              	.LASF13:
 1644 0012 73697A65 		.ascii	"sizetype\000"
 1644      74797065 
 1644      00
 1645              	.LASF68:
 1646 001b 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1646      656D436F 
 1646      7265436C 
 1646      6F636B55 
 1646      70646174 
 1647              	.LASF41:
 1648 0031 5057525F 		.ascii	"PWR_TypeDef\000"
 1648      54797065 
 1648      44656600 
 1649              	.LASF32:
 1650 003d 50444B45 		.ascii	"PDKEYR\000"
 1650      595200
ARM GAS  /tmp/cc1b8X6P.s 			page 37


 1651              	.LASF50:
 1652 0044 4148424C 		.ascii	"AHBLPENR\000"
 1652      50454E52 
 1652      00
 1653              	.LASF42:
 1654 004d 49435343 		.ascii	"ICSCR\000"
 1654      5200
 1655              	.LASF14:
 1656 0053 43505549 		.ascii	"CPUID\000"
 1656      4400
 1657              	.LASF27:
 1658 0059 52455345 		.ascii	"RESERVED0\000"
 1658      52564544 
 1658      3000
 1659              	.LASF43:
 1660 0063 43464752 		.ascii	"CFGR\000"
 1660      00
 1661              	.LASF3:
 1662 0068 75696E74 		.ascii	"uint8_t\000"
 1662      385F7400 
 1663              	.LASF49:
 1664 0070 41504231 		.ascii	"APB1ENR\000"
 1664      454E5200 
 1665              	.LASF2:
 1666 0078 73686F72 		.ascii	"short int\000"
 1666      7420696E 
 1666      7400
 1667              	.LASF48:
 1668 0082 41504232 		.ascii	"APB2ENR\000"
 1668      454E5200 
 1669              	.LASF15:
 1670 008a 49435352 		.ascii	"ICSR\000"
 1670      00
 1671              	.LASF35:
 1672 008f 4F50544B 		.ascii	"OPTKEYR\000"
 1672      45595200 
 1673              	.LASF44:
 1674 0097 41484252 		.ascii	"AHBRSTR\000"
 1674      53545200 
 1675              	.LASF10:
 1676 009f 6C6F6E67 		.ascii	"long long int\000"
 1676      206C6F6E 
 1676      6720696E 
 1676      7400
 1677              	.LASF55:
 1678 00ad 706C6C64 		.ascii	"plldiv\000"
 1678      697600
 1679              	.LASF23:
 1680 00b4 42464152 		.ascii	"BFAR\000"
 1680      00
 1681              	.LASF59:
 1682 00b9 48534953 		.ascii	"HSIStatus\000"
 1682      74617475 
 1682      7300
 1683              	.LASF7:
 1684 00c3 6C6F6E67 		.ascii	"long int\000"
 1684      20696E74 
ARM GAS  /tmp/cc1b8X6P.s 			page 38


 1684      00
 1685              	.LASF53:
 1686 00cc 5243435F 		.ascii	"RCC_TypeDef\000"
 1686      54797065 
 1686      44656600 
 1687              	.LASF47:
 1688 00d8 41484245 		.ascii	"AHBENR\000"
 1688      4E5200
 1689              	.LASF45:
 1690 00df 41504232 		.ascii	"APB2RSTR\000"
 1690      52535452 
 1690      00
 1691              	.LASF36:
 1692 00e8 57525052 		.ascii	"WRPR\000"
 1692      00
 1693              	.LASF19:
 1694 00ed 43465352 		.ascii	"CFSR\000"
 1694      00
 1695              	.LASF66:
 1696 00f2 2F686F6D 		.ascii	"/home/zbanks/hackboard/firmware\000"
 1696      652F7A62 
 1696      616E6B73 
 1696      2F686163 
 1696      6B626F61 
 1697              	.LASF56:
 1698 0112 706C6C73 		.ascii	"pllsource\000"
 1698      6F757263 
 1698      6500
 1699              	.LASF54:
 1700 011c 706C6C6D 		.ascii	"pllmul\000"
 1700      756C00
 1701              	.LASF1:
 1702 0123 756E7369 		.ascii	"unsigned char\000"
 1702      676E6564 
 1702      20636861 
 1702      7200
 1703              	.LASF17:
 1704 0131 41495243 		.ascii	"AIRCR\000"
 1704      5200
 1705              	.LASF29:
 1706 0137 5343425F 		.ascii	"SCB_Type\000"
 1706      54797065 
 1706      00
 1707              	.LASF64:
 1708 0140 474E5520 		.ascii	"GNU C 4.8.3 20131129 (release) [ARM/embedded-4_8-br"
 1708      4320342E 
 1708      382E3320 
 1708      32303133 
 1708      31313239 
 1709 0173 616E6368 		.ascii	"anch revision 205641] -mcpu=cortex-m3 -mthumb -g -g"
 1709      20726576 
 1709      6973696F 
 1709      6E203230 
 1709      35363431 
 1710 01a6 64776172 		.ascii	"dwarf-2 -O0 -std=c99 -fomit-frame-pointer\000"
 1710      662D3220 
 1710      2D4F3020 
ARM GAS  /tmp/cc1b8X6P.s 			page 39


 1710      2D737464 
 1710      3D633939 
 1711              	.LASF33:
 1712 01d0 50454B45 		.ascii	"PEKEYR\000"
 1712      595200
 1713              	.LASF58:
 1714 01d7 53746172 		.ascii	"StartUpCounter\000"
 1714      74557043 
 1714      6F756E74 
 1714      657200
 1715              	.LASF0:
 1716 01e6 7369676E 		.ascii	"signed char\000"
 1716      65642063 
 1716      68617200 
 1717              	.LASF11:
 1718 01f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1718      206C6F6E 
 1718      6720756E 
 1718      7369676E 
 1718      65642069 
 1719              	.LASF8:
 1720 0209 75696E74 		.ascii	"uint32_t\000"
 1720      33325F74 
 1720      00
 1721              	.LASF12:
 1722 0212 756E7369 		.ascii	"unsigned int\000"
 1722      676E6564 
 1722      20696E74 
 1722      00
 1723              	.LASF4:
 1724 021f 75696E74 		.ascii	"uint16_t\000"
 1724      31365F74 
 1724      00
 1725              	.LASF18:
 1726 0228 53484353 		.ascii	"SHCSR\000"
 1726      5200
 1727              	.LASF22:
 1728 022e 4D4D4641 		.ascii	"MMFAR\000"
 1728      5200
 1729              	.LASF67:
 1730 0234 53797374 		.ascii	"SystemInit\000"
 1730      656D496E 
 1730      697400
 1731              	.LASF5:
 1732 023f 73686F72 		.ascii	"short unsigned int\000"
 1732      7420756E 
 1732      7369676E 
 1732      65642069 
 1732      6E7400
 1733              	.LASF52:
 1734 0252 41504231 		.ascii	"APB1LPENR\000"
 1734      4C50454E 
 1734      5200
 1735              	.LASF31:
 1736 025c 50454352 		.ascii	"PECR\000"
 1736      00
 1737              	.LASF38:
ARM GAS  /tmp/cc1b8X6P.s 			page 40


 1738 0261 57525052 		.ascii	"WRPR1\000"
 1738      3100
 1739              	.LASF16:
 1740 0267 56544F52 		.ascii	"VTOR\000"
 1740      00
 1741              	.LASF6:
 1742 026c 696E7433 		.ascii	"int32_t\000"
 1742      325F7400 
 1743              	.LASF26:
 1744 0274 49534152 		.ascii	"ISAR\000"
 1744      00
 1745              	.LASF21:
 1746 0279 44465352 		.ascii	"DFSR\000"
 1746      00
 1747              	.LASF61:
 1748 027e 53797374 		.ascii	"SystemCoreClock\000"
 1748      656D436F 
 1748      7265436C 
 1748      6F636B00 
 1749              	.LASF20:
 1750 028e 48465352 		.ascii	"HFSR\000"
 1750      00
 1751              	.LASF25:
 1752 0293 4D4D4652 		.ascii	"MMFR\000"
 1752      00
 1753              	.LASF63:
 1754 0298 41484250 		.ascii	"AHBPrescTable\000"
 1754      72657363 
 1754      5461626C 
 1754      6500
 1755              	.LASF69:
 1756 02a6 53657453 		.ascii	"SetSysClock\000"
 1756      7973436C 
 1756      6F636B00 
 1757              	.LASF9:
 1758 02b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1758      20756E73 
 1758      69676E65 
 1758      6420696E 
 1758      7400
 1759              	.LASF65:
 1760 02c4 7372632F 		.ascii	"src/system_stm32l1xx.c\000"
 1760      73797374 
 1760      656D5F73 
 1760      746D3332 
 1760      6C317878 
 1761              	.LASF34:
 1762 02db 5052474B 		.ascii	"PRGKEYR\000"
 1762      45595200 
 1763              	.LASF30:
 1764 02e3 52455345 		.ascii	"RESET\000"
 1764      5400
 1765              	.LASF39:
 1766 02e9 57525052 		.ascii	"WRPR2\000"
 1766      3200
 1767              	.LASF62:
 1768 02ef 504C4C4D 		.ascii	"PLLMulTable\000"
ARM GAS  /tmp/cc1b8X6P.s 			page 41


 1768      756C5461 
 1768      626C6500 
 1769              	.LASF24:
 1770 02fb 41465352 		.ascii	"AFSR\000"
 1770      00
 1771              	.LASF37:
 1772 0300 52455345 		.ascii	"RESERVED\000"
 1772      52564544 
 1772      00
 1773              	.LASF40:
 1774 0309 464C4153 		.ascii	"FLASH_TypeDef\000"
 1774      485F5479 
 1774      70654465 
 1774      6600
 1775              	.LASF60:
 1776 0317 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1776      52784275 
 1776      66666572 
 1776      00
 1777              	.LASF28:
 1778 0324 43504143 		.ascii	"CPACR\000"
 1778      5200
 1779              	.LASF51:
 1780 032a 41504232 		.ascii	"APB2LPENR\000"
 1780      4C50454E 
 1780      5200
 1781              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20131129 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/cc1b8X6P.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l1xx.c
     /tmp/cc1b8X6P.s:60     .data:00000000 SystemCoreClock
     /tmp/cc1b8X6P.s:57     .data:00000000 $d
     /tmp/cc1b8X6P.s:66     .data:00000004 PLLMulTable
     /tmp/cc1b8X6P.s:80     .data:00000010 AHBPrescTable
     /tmp/cc1b8X6P.s:98     .text:00000000 $t
     /tmp/cc1b8X6P.s:103    .text:00000000 SystemInit
     /tmp/cc1b8X6P.s:358    .text:000001b0 SetSysClock
     /tmp/cc1b8X6P.s:162    .text:00000058 $d
     /tmp/cc1b8X6P.s:168    .text:00000064 $t
     /tmp/cc1b8X6P.s:173    .text:00000064 SystemCoreClockUpdate
     /tmp/cc1b8X6P.s:207    .text:00000090 $d
     /tmp/cc1b8X6P.s:222    .text:000000c4 $t
     /tmp/cc1b8X6P.s:345    .text:00000198 $d
     /tmp/cc1b8X6P.s:354    .text:000001b0 $t
     /tmp/cc1b8X6P.s:520    .text:000002b4 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
