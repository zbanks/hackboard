ARM GAS  /tmp/ccgHyjwV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"system_stm32l1xx.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.3 20131129 (release) [ARM/embedded-4_8-
  15              	@	compiled by GNU C version 4.3.6, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc
  18              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Device/ST/STM32F0xx/Include
  19              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Include
  20              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/STM32L1xx_StdPeriph_Driver/inc
  21              	@ -I ./inc -imultilib armv7-m
  22              	@ -iprefix /home/zbanks/gcc-arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.8.3/
  23              	@ -isysroot /home/zbanks/gcc-arm-none-eabi/bin/../arm-none-eabi
  24              	@ -MD src/system_stm32l1xx.d -MF .dep/system_stm32l1xx.o.d -MP
  25              	@ -MQ src/system_stm32l1xx.o -D__USES_INITFINI__ -D STM32L1XX
  26              	@ -D USE_STDPERIPH_DRIVER -D malloc_getpagesize=256 -D RUN_FROM_FLASH=1
  27              	@ src/system_stm32l1xx.c -mcpu=cortex-m3 -mthumb
  28              	@ -auxbase-strip src/system_stm32l1xx.o -g -gdwarf-2 -O3 -Wall
  29              	@ -Wstrict-prototypes -std=c99 -fomit-frame-pointer -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  31              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  32              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  33              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  34              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  35              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm
  36              	@ -fgnu-runtime -fguess-branch-probability -fhoist-adjacent-loads -fident
  37              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  38              	@ -finline-atomics -finline-functions -finline-functions-called-once
  39              	@ -finline-small-functions -fipa-cp -fipa-cp-clone -fipa-profile
  40              	@ -fipa-pure-const -fipa-reference -fipa-sra -fira-hoist-pressure
  41              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  42              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  44              	@ -foptimize-register-move -foptimize-sibling-calls -foptimize-strlen
  45              	@ -fpartial-inlining -fpeephole -fpeephole2 -fpredictive-commoning
  46              	@ -fprefetch-loop-arrays -freg-struct-return -fregmove -freorder-blocks
  47              	@ -freorder-functions -frerun-cse-after-loop
  48              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  49              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  50              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  51              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  52              	@ -fschedule-insns2 -fsection-anchors -fshow-column -fshrink-wrap
  53              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  54              	@ -fstrict-aliasing -fstrict-overflow -fstrict-volatile-bitfields
  55              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  56              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  57              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-copyrename -ftree-cselim
ARM GAS  /tmp/ccgHyjwV.s 			page 2


  58              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  59              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  60              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  61              	@ -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc
  62              	@ -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize -ftree-slsr -ftree-sra
  63              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  64              	@ -ftree-vect-loop-version -ftree-vectorize -ftree-vrp -funit-at-a-time
  65              	@ -funswitch-loops -fvar-tracking -fvar-tracking-assignments
  66              	@ -fvect-cost-model -fverbose-asm -fzero-initialized-in-bss
  67              	@ -mfix-cortex-m3-ldrd -mlittle-endian -mpic-data-is-text-relative
  68              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	2
  74              		.global	SystemInit
  75              		.thumb
  76              		.thumb_func
  77              		.type	SystemInit, %function
  78              	SystemInit:
  79              	.LFB56:
  80              		.file 1 "src/system_stm32l1xx.c"
   1:src/system_stm32l1xx.c **** /**
   2:src/system_stm32l1xx.c ****   ******************************************************************************
   3:src/system_stm32l1xx.c ****   * @file    system_stm32l1xx.c
   4:src/system_stm32l1xx.c ****   * @author  MCD Application Team
   5:src/system_stm32l1xx.c ****   * @version V1.0.0
   6:src/system_stm32l1xx.c ****   * @date    29-July-2013
   7:src/system_stm32l1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:src/system_stm32l1xx.c ****   *          This file contains the system clock configuration for STM32L1xx Ultra
   9:src/system_stm32l1xx.c ****   *          Low power devices, and is generated by the clock configuration 
  10:src/system_stm32l1xx.c ****   *          tool STM32L1xx_Clock_Configuration_V1.1.0.xls
  11:src/system_stm32l1xx.c ****   *             
  12:src/system_stm32l1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:src/system_stm32l1xx.c ****   *     user application:
  14:src/system_stm32l1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:src/system_stm32l1xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:src/system_stm32l1xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:src/system_stm32l1xx.c ****   *                      This function is called at startup just after reset and 
  18:src/system_stm32l1xx.c ****   *                      before branch to main program. This call is made inside
  19:src/system_stm32l1xx.c ****   *                      the "startup_stm32l1xx_xx.s" file.
  20:src/system_stm32l1xx.c ****   *                        
  21:src/system_stm32l1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:src/system_stm32l1xx.c ****   *                                  by the user application to setup the SysTick 
  23:src/system_stm32l1xx.c ****   *                                  timer or configure other parameters.
  24:src/system_stm32l1xx.c ****   *                                     
  25:src/system_stm32l1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:src/system_stm32l1xx.c ****   *                                 be called whenever the core clock is changed
  27:src/system_stm32l1xx.c ****   *                                 during program execution.   
  28:src/system_stm32l1xx.c ****   *      
  29:src/system_stm32l1xx.c ****   * 2. After each device reset the MSI (2.1 MHz Range) is used as system clock source.
  30:src/system_stm32l1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32l1xx_xx.s" file, to
  31:src/system_stm32l1xx.c ****   *    configure the system clock before to branch to main program.    
  32:src/system_stm32l1xx.c ****   *    
  33:src/system_stm32l1xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:src/system_stm32l1xx.c ****   *    function will do nothing and MSI still used as system clock source. User can 
ARM GAS  /tmp/ccgHyjwV.s 			page 3


  35:src/system_stm32l1xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.       
  36:src/system_stm32l1xx.c ****   * 
  37:src/system_stm32l1xx.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:src/system_stm32l1xx.c ****   *    in "stm32l1xx.h" file. When HSE is used as system clock source, directly or
  39:src/system_stm32l1xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:src/system_stm32l1xx.c ****   *    value to your own configuration.
  41:src/system_stm32l1xx.c ****   * 
  42:src/system_stm32l1xx.c ****   * 5. This file configures the system clock as follows:  
  43:src/system_stm32l1xx.c ****   *=============================================================================
  44:src/system_stm32l1xx.c ****   *                         System Clock Configuration
  45:src/system_stm32l1xx.c ****   *=============================================================================
  46:src/system_stm32l1xx.c ****   *        System Clock source          | PLL(HSI)
  47:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  48:src/system_stm32l1xx.c ****   *        SYSCLK                       | 32000000 Hz
  49:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  50:src/system_stm32l1xx.c ****   *        HCLK                         | 32000000 Hz
  51:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  52:src/system_stm32l1xx.c ****   *        AHB Prescaler                | 1
  53:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  54:src/system_stm32l1xx.c ****   *        APB1 Prescaler               | 1
  55:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  56:src/system_stm32l1xx.c ****   *        APB2 Prescaler               | 1
  57:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  58:src/system_stm32l1xx.c ****   *        HSE Frequency                | 8000000 Hz
  59:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  60:src/system_stm32l1xx.c ****   *        PLL DIV                      | 2
  61:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  62:src/system_stm32l1xx.c ****   *        PLL MUL                      | 4
  63:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  64:src/system_stm32l1xx.c ****   *        VDD                          | 3.3 V
  65:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  66:src/system_stm32l1xx.c ****   *        Vcore                        | 1.8 V (Range 1)
  67:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  68:src/system_stm32l1xx.c ****   *        Flash Latency                | 1 WS
  69:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  70:src/system_stm32l1xx.c ****   *        Require 48MHz for USB clock  | Disabled
  71:src/system_stm32l1xx.c ****   *----------------------------------------------------------------------------- 
  72:src/system_stm32l1xx.c ****   *=============================================================================
  73:src/system_stm32l1xx.c ****   ******************************************************************************
  74:src/system_stm32l1xx.c ****   * @attention
  75:src/system_stm32l1xx.c ****   *
  76:src/system_stm32l1xx.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  77:src/system_stm32l1xx.c ****   *
  78:src/system_stm32l1xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  79:src/system_stm32l1xx.c ****   * You may not use this file except in compliance with the License.
  80:src/system_stm32l1xx.c ****   * You may obtain a copy of the License at:
  81:src/system_stm32l1xx.c ****   *
  82:src/system_stm32l1xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  83:src/system_stm32l1xx.c ****   *
  84:src/system_stm32l1xx.c ****   * Unless required by applicable law or agreed to in writing, software 
  85:src/system_stm32l1xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  86:src/system_stm32l1xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  87:src/system_stm32l1xx.c ****   * See the License for the specific language governing permissions and
  88:src/system_stm32l1xx.c ****   * limitations under the License.
  89:src/system_stm32l1xx.c ****   *
  90:src/system_stm32l1xx.c ****   ******************************************************************************
  91:src/system_stm32l1xx.c ****   */ 
ARM GAS  /tmp/ccgHyjwV.s 			page 4


  92:src/system_stm32l1xx.c **** 
  93:src/system_stm32l1xx.c **** /** @addtogroup CMSIS
  94:src/system_stm32l1xx.c ****   * @{
  95:src/system_stm32l1xx.c ****   */
  96:src/system_stm32l1xx.c **** 
  97:src/system_stm32l1xx.c **** /** @addtogroup stm32l1xx_system
  98:src/system_stm32l1xx.c ****   * @{
  99:src/system_stm32l1xx.c ****   */  
 100:src/system_stm32l1xx.c ****   
 101:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Includes
 102:src/system_stm32l1xx.c ****   * @{
 103:src/system_stm32l1xx.c ****   */
 104:src/system_stm32l1xx.c **** 
 105:src/system_stm32l1xx.c **** #include "stm32l1xx.h"
 106:src/system_stm32l1xx.c **** 
 107:src/system_stm32l1xx.c **** /**
 108:src/system_stm32l1xx.c ****   * @}
 109:src/system_stm32l1xx.c ****   */
 110:src/system_stm32l1xx.c **** 
 111:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_TypesDefinitions
 112:src/system_stm32l1xx.c ****   * @{
 113:src/system_stm32l1xx.c ****   */
 114:src/system_stm32l1xx.c **** 
 115:src/system_stm32l1xx.c **** /**
 116:src/system_stm32l1xx.c ****   * @}
 117:src/system_stm32l1xx.c ****   */
 118:src/system_stm32l1xx.c **** 
 119:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Defines
 120:src/system_stm32l1xx.c ****   * @{
 121:src/system_stm32l1xx.c ****   */
 122:src/system_stm32l1xx.c **** 
 123:src/system_stm32l1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 124:src/system_stm32l1xx.c ****      Internal SRAM. */ 
 125:src/system_stm32l1xx.c **** /* #define VECT_TAB_SRAM */
 126:src/system_stm32l1xx.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 127:src/system_stm32l1xx.c ****                                   This value must be a multiple of 0x200. */
 128:src/system_stm32l1xx.c **** /**
 129:src/system_stm32l1xx.c ****   * @}
 130:src/system_stm32l1xx.c ****   */
 131:src/system_stm32l1xx.c **** 
 132:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Macros
 133:src/system_stm32l1xx.c ****   * @{
 134:src/system_stm32l1xx.c ****   */
 135:src/system_stm32l1xx.c **** 
 136:src/system_stm32l1xx.c **** /**
 137:src/system_stm32l1xx.c ****   * @}
 138:src/system_stm32l1xx.c ****   */
 139:src/system_stm32l1xx.c **** 
 140:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Variables
 141:src/system_stm32l1xx.c ****   * @{
 142:src/system_stm32l1xx.c ****   */
 143:src/system_stm32l1xx.c **** uint32_t SystemCoreClock    = 32000000;
 144:src/system_stm32l1xx.c **** __I uint8_t PLLMulTable[9] = {3, 4, 6, 8, 12, 16, 24, 32, 48};
 145:src/system_stm32l1xx.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 146:src/system_stm32l1xx.c **** 
 147:src/system_stm32l1xx.c **** /**
 148:src/system_stm32l1xx.c ****   * @}
ARM GAS  /tmp/ccgHyjwV.s 			page 5


 149:src/system_stm32l1xx.c ****   */
 150:src/system_stm32l1xx.c **** 
 151:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_FunctionPrototypes
 152:src/system_stm32l1xx.c ****   * @{
 153:src/system_stm32l1xx.c ****   */
 154:src/system_stm32l1xx.c **** 
 155:src/system_stm32l1xx.c **** static void SetSysClock(void);
 156:src/system_stm32l1xx.c **** 
 157:src/system_stm32l1xx.c **** /**
 158:src/system_stm32l1xx.c ****   * @}
 159:src/system_stm32l1xx.c ****   */
 160:src/system_stm32l1xx.c **** 
 161:src/system_stm32l1xx.c **** /** @addtogroup STM32L1xx_System_Private_Functions
 162:src/system_stm32l1xx.c ****   * @{
 163:src/system_stm32l1xx.c ****   */
 164:src/system_stm32l1xx.c **** 
 165:src/system_stm32l1xx.c **** /**
 166:src/system_stm32l1xx.c ****   * @brief  Setup the microcontroller system.
 167:src/system_stm32l1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 168:src/system_stm32l1xx.c ****   *         SystemCoreClock variable.
 169:src/system_stm32l1xx.c ****   * @param  None
 170:src/system_stm32l1xx.c ****   * @retval None
 171:src/system_stm32l1xx.c ****   */
 172:src/system_stm32l1xx.c **** void SystemInit (void)
 173:src/system_stm32l1xx.c **** {
  81              		.loc 1 173 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
 174:src/system_stm32l1xx.c ****   /*!< Set MSION bit */
 175:src/system_stm32l1xx.c ****   RCC->CR |= (uint32_t)0x00000100;
  86              		.loc 1 175 0
  87 0000 3F4B     		ldr	r3, .L22	@ tmp156,
 173:src/system_stm32l1xx.c **** {
  88              		.loc 1 173 0
  89 0002 30B4     		push	{r4, r5}	@
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 5, -4
  94              		.loc 1 175 0
  95 0004 1A68     		ldr	r2, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 176:src/system_stm32l1xx.c **** 
 177:src/system_stm32l1xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 178:src/system_stm32l1xx.c ****   //RCC->CFGR &= (uint32_t)0x88FFC00C;
 179:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0x88FFC00C;
  96              		.loc 1 179 0
  97 0006 3F48     		ldr	r0, .L22+4	@ D.6657,
 175:src/system_stm32l1xx.c ****   RCC->CR |= (uint32_t)0x00000100;
  98              		.loc 1 175 0
  99 0008 42F48072 		orr	r2, r2, #256	@ D.6657, D.6657,
 100 000c 1A60     		str	r2, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 101              		.loc 1 179 0
 102 000e 9C68     		ldr	r4, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 180:src/system_stm32l1xx.c ****   
 181:src/system_stm32l1xx.c ****   /*!< Reset HSION, HSEON, CSSON and PLLON bits */
ARM GAS  /tmp/ccgHyjwV.s 			page 6


 182:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xEEFEFFFE;
 183:src/system_stm32l1xx.c **** 
 184:src/system_stm32l1xx.c ****   /*!< Reset HSEBYP bit */
 185:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 186:src/system_stm32l1xx.c **** 
 187:src/system_stm32l1xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 188:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFF;
 189:src/system_stm32l1xx.c **** 
 190:src/system_stm32l1xx.c ****   /*!< Disable all interrupts */
 191:src/system_stm32l1xx.c ****   RCC->CIR = 0x00000000;
 103              		.loc 1 191 0
 104 0010 0021     		movs	r1, #0	@ tmp169,
 179:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0x88FFC00C;
 105              		.loc 1 179 0
 106 0012 2040     		ands	r0, r0, r4	@, D.6657, D.6657, D.6657
 107 0014 9860     		str	r0, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 182:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xEEFEFFFE;
 108              		.loc 1 182 0
 109 0016 1868     		ldr	r0, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 173:src/system_stm32l1xx.c **** {
 110              		.loc 1 173 0
 111 0018 82B0     		sub	sp, sp, #8	@,,
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 16
 182:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xEEFEFFFE;
 114              		.loc 1 182 0
 115 001a 20F08850 		bic	r0, r0, #285212672	@ D.6657, D.6657,
 116 001e 20F00110 		bic	r0, r0, #65537	@ D.6657, D.6657,
 117 0022 1860     		str	r0, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 185:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 118              		.loc 1 185 0
 119 0024 1868     		ldr	r0, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 120              	.LBB4:
 121              	.LBB5:
 192:src/system_stm32l1xx.c **** 
 193:src/system_stm32l1xx.c ****   /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
 194:src/system_stm32l1xx.c ****   SetSysClock();
 195:src/system_stm32l1xx.c **** 
 196:src/system_stm32l1xx.c **** #ifdef VECT_TAB_SRAM
 197:src/system_stm32l1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 198:src/system_stm32l1xx.c **** #else
 199:src/system_stm32l1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 200:src/system_stm32l1xx.c **** #endif
 201:src/system_stm32l1xx.c **** }
 202:src/system_stm32l1xx.c **** 
 203:src/system_stm32l1xx.c **** /**
 204:src/system_stm32l1xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 205:src/system_stm32l1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 206:src/system_stm32l1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 207:src/system_stm32l1xx.c ****   *         other parameters.
 208:src/system_stm32l1xx.c ****   *           
 209:src/system_stm32l1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 210:src/system_stm32l1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 211:src/system_stm32l1xx.c ****   *         based on this variable will be incorrect.         
 212:src/system_stm32l1xx.c ****   *     
 213:src/system_stm32l1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 214:src/system_stm32l1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
ARM GAS  /tmp/ccgHyjwV.s 			page 7


 215:src/system_stm32l1xx.c ****   *           constant and the selected clock source:
 216:src/system_stm32l1xx.c ****   *             
 217:src/system_stm32l1xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI 
 218:src/system_stm32l1xx.c ****   *             value as defined by the MSI range.
 219:src/system_stm32l1xx.c ****   *                                   
 220:src/system_stm32l1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 221:src/system_stm32l1xx.c ****   *                                              
 222:src/system_stm32l1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 223:src/system_stm32l1xx.c ****   *                          
 224:src/system_stm32l1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 225:src/system_stm32l1xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 226:src/system_stm32l1xx.c ****   *         
 227:src/system_stm32l1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l1xx.h file (default value
 228:src/system_stm32l1xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 229:src/system_stm32l1xx.c ****   *             in voltage and temperature.   
 230:src/system_stm32l1xx.c ****   *    
 231:src/system_stm32l1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l1xx.h file (default value
 232:src/system_stm32l1xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 233:src/system_stm32l1xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 234:src/system_stm32l1xx.c ****   *              have wrong result.
 235:src/system_stm32l1xx.c ****   *                
 236:src/system_stm32l1xx.c ****   *         - The result of this function could be not correct when using fractional
 237:src/system_stm32l1xx.c ****   *           value for HSE crystal.  
 238:src/system_stm32l1xx.c ****   * @param  None
 239:src/system_stm32l1xx.c ****   * @retval None
 240:src/system_stm32l1xx.c ****   */
 241:src/system_stm32l1xx.c **** void SystemCoreClockUpdate (void)
 242:src/system_stm32l1xx.c **** {
 243:src/system_stm32l1xx.c ****   uint32_t tmp = 0, pllmul = 0, plldiv = 0, pllsource = 0, msirange = 0;
 244:src/system_stm32l1xx.c **** 
 245:src/system_stm32l1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:src/system_stm32l1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 247:src/system_stm32l1xx.c ****   
 248:src/system_stm32l1xx.c ****   switch (tmp)
 249:src/system_stm32l1xx.c ****   {
 250:src/system_stm32l1xx.c ****     case 0x00:  /* MSI used as system clock */
 251:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 252:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 253:src/system_stm32l1xx.c ****       break;
 254:src/system_stm32l1xx.c ****     case 0x04:  /* HSI used as system clock */
 255:src/system_stm32l1xx.c ****       SystemCoreClock = HSI_VALUE;
 256:src/system_stm32l1xx.c ****       break;
 257:src/system_stm32l1xx.c ****     case 0x08:  /* HSE used as system clock */
 258:src/system_stm32l1xx.c ****       SystemCoreClock = HSE_VALUE;
 259:src/system_stm32l1xx.c ****       break;
 260:src/system_stm32l1xx.c ****     case 0x0C:  /* PLL used as system clock */
 261:src/system_stm32l1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 262:src/system_stm32l1xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 263:src/system_stm32l1xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 264:src/system_stm32l1xx.c ****       pllmul = PLLMulTable[(pllmul >> 18)];
 265:src/system_stm32l1xx.c ****       plldiv = (plldiv >> 22) + 1;
 266:src/system_stm32l1xx.c ****       
 267:src/system_stm32l1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 268:src/system_stm32l1xx.c **** 
 269:src/system_stm32l1xx.c ****       if (pllsource == 0x00)
 270:src/system_stm32l1xx.c ****       {
 271:src/system_stm32l1xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
ARM GAS  /tmp/ccgHyjwV.s 			page 8


 272:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 273:src/system_stm32l1xx.c ****       }
 274:src/system_stm32l1xx.c ****       else
 275:src/system_stm32l1xx.c ****       {
 276:src/system_stm32l1xx.c ****         /* HSE selected as PLL clock entry */
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 278:src/system_stm32l1xx.c ****       }
 279:src/system_stm32l1xx.c ****       break;
 280:src/system_stm32l1xx.c ****     default: /* MSI used as system clock */
 281:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 282:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 283:src/system_stm32l1xx.c ****       break;
 284:src/system_stm32l1xx.c ****   }
 285:src/system_stm32l1xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 286:src/system_stm32l1xx.c ****   /* Get HCLK prescaler */
 287:src/system_stm32l1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 288:src/system_stm32l1xx.c ****   /* HCLK clock frequency */
 289:src/system_stm32l1xx.c ****   SystemCoreClock >>= tmp;
 290:src/system_stm32l1xx.c **** }
 291:src/system_stm32l1xx.c **** 
 292:src/system_stm32l1xx.c **** /**
 293:src/system_stm32l1xx.c ****   * @brief  Configures the System clock frequency, AHB/APBx prescalers and Flash 
 294:src/system_stm32l1xx.c ****   *         settings.
 295:src/system_stm32l1xx.c ****   * @note   This function should be called only once the RCC clock configuration  
 296:src/system_stm32l1xx.c ****   *         is reset to the default reset state (done in SystemInit() function).             
 297:src/system_stm32l1xx.c ****   * @param  None
 298:src/system_stm32l1xx.c ****   * @retval None
 299:src/system_stm32l1xx.c ****   */
 300:src/system_stm32l1xx.c **** static void SetSysClock(void)
 301:src/system_stm32l1xx.c **** {
 302:src/system_stm32l1xx.c ****   __IO uint32_t StartUpCounter = 0, HSIStatus = 0;
 303:src/system_stm32l1xx.c ****   
 304:src/system_stm32l1xx.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
 305:src/system_stm32l1xx.c ****   /* Enable HSI */
 306:src/system_stm32l1xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSION);
 307:src/system_stm32l1xx.c ****  
 308:src/system_stm32l1xx.c ****   /* Wait till HSI is ready and if Time out is reached exit */
 309:src/system_stm32l1xx.c ****   do
 310:src/system_stm32l1xx.c ****   {
 311:src/system_stm32l1xx.c ****     HSIStatus = RCC->CR & RCC_CR_HSIRDY;
 122              		.loc 1 311 0
 123 0026 1A46     		mov	r2, r3	@ tmp216, tmp156
 124              	.LBE5:
 125              	.LBE4:
 185:src/system_stm32l1xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 126              		.loc 1 185 0
 127 0028 20F48020 		bic	r0, r0, #262144	@ D.6657, D.6657,
 128 002c 1860     		str	r0, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 188:src/system_stm32l1xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFF;
 129              		.loc 1 188 0
 130 002e 9868     		ldr	r0, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 131 0030 20F47D00 		bic	r0, r0, #16580608	@ D.6657, D.6657,
 132 0034 9860     		str	r0, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 191:src/system_stm32l1xx.c ****   RCC->CIR = 0x00000000;
 133              		.loc 1 191 0
 134 0036 D960     		str	r1, [r3, #12]	@ tmp169, MEM[(struct RCC_TypeDef *)1073887232B].CIR
 135              	.LBB8:
ARM GAS  /tmp/ccgHyjwV.s 			page 9


 136              	.LBB6:
 302:src/system_stm32l1xx.c ****   __IO uint32_t StartUpCounter = 0, HSIStatus = 0;
 137              		.loc 1 302 0
 138 0038 0091     		str	r1, [sp]	@ tmp169, StartUpCounter
 139 003a 0191     		str	r1, [sp, #4]	@ tmp169, HSIStatus
 306:src/system_stm32l1xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSION);
 140              		.loc 1 306 0
 141 003c 1968     		ldr	r1, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 142 003e 41F00101 		orr	r1, r1, #1	@ D.6657, D.6657,
 143 0042 1960     		str	r1, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 144 0044 03E0     		b	.L3	@
 145              	.L21:
 312:src/system_stm32l1xx.c ****   } while((HSIStatus == 0) && (StartUpCounter != HSI_STARTUP_TIMEOUT));
 146              		.loc 1 312 0
 147 0046 009B     		ldr	r3, [sp]	@ StartUpCounter.2, StartUpCounter
 148 0048 B3F5A06F 		cmp	r3, #1280	@ StartUpCounter.2,
 149 004c 06D0     		beq	.L2	@,
 150              	.L3:
 311:src/system_stm32l1xx.c ****     HSIStatus = RCC->CR & RCC_CR_HSIRDY;
 151              		.loc 1 311 0
 152 004e 1368     		ldr	r3, [r2]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 153 0050 03F00203 		and	r3, r3, #2	@ HSIStatus.0, D.6657,
 154 0054 0193     		str	r3, [sp, #4]	@ HSIStatus.0, HSIStatus
 155              		.loc 1 312 0
 156 0056 019B     		ldr	r3, [sp, #4]	@ HSIStatus.1, HSIStatus
 157 0058 002B     		cmp	r3, #0	@ HSIStatus.1
 158 005a F4D0     		beq	.L21	@
 159              	.L2:
 313:src/system_stm32l1xx.c **** 
 314:src/system_stm32l1xx.c ****   if ((RCC->CR & RCC_CR_HSIRDY) != RESET)
 160              		.loc 1 314 0
 161 005c 284B     		ldr	r3, .L22	@ tmp175,
 162 005e 1B68     		ldr	r3, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 163 0060 13F00203 		ands	r3, r3, #2	@ D.6657, D.6657,
 315:src/system_stm32l1xx.c ****   {
 316:src/system_stm32l1xx.c ****     HSIStatus = (uint32_t)0x01;
 164              		.loc 1 316 0
 165 0064 18BF     		it	ne
 166 0066 0123     		movne	r3, #1	@ tmp177,
 317:src/system_stm32l1xx.c ****   }
 318:src/system_stm32l1xx.c ****   else
 319:src/system_stm32l1xx.c ****   {
 320:src/system_stm32l1xx.c ****     HSIStatus = (uint32_t)0x00;
 167              		.loc 1 320 0
 168 0068 0193     		str	r3, [sp, #4]	@ D.6657, HSIStatus
 321:src/system_stm32l1xx.c ****   }
 322:src/system_stm32l1xx.c ****     
 323:src/system_stm32l1xx.c ****   if (HSIStatus == (uint32_t)0x01)
 169              		.loc 1 323 0
 170 006a 019B     		ldr	r3, [sp, #4]	@ HSIStatus.3, HSIStatus
 171 006c 012B     		cmp	r3, #1	@ HSIStatus.3,
 172 006e 06D0     		beq	.L6	@,
 173              	.L11:
 174              	.LBE6:
 175              	.LBE8:
 199:src/system_stm32l1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 176              		.loc 1 199 0
ARM GAS  /tmp/ccgHyjwV.s 			page 10


 177 0070 254B     		ldr	r3, .L22+8	@ tmp179,
 178 0072 4FF00062 		mov	r2, #134217728	@ tmp180,
 179 0076 9A60     		str	r2, [r3, #8]	@ tmp180, MEM[(struct SCB_Type *)3758157056B].VTOR
 201:src/system_stm32l1xx.c **** }
 180              		.loc 1 201 0
 181 0078 02B0     		add	sp, sp, #8	@,,
 182              		@ sp needed	@
 183 007a 30BC     		pop	{r4, r5}	@
 184 007c 7047     		bx	lr	@
 185              	.L6:
 186              	.LBB9:
 187              	.LBB7:
 324:src/system_stm32l1xx.c ****   {
 325:src/system_stm32l1xx.c ****     /* Enable 64-bit access */
 326:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_ACC64;
 188              		.loc 1 326 0
 189 007e 234B     		ldr	r3, .L22+12	@ tmp181,
 327:src/system_stm32l1xx.c ****     
 328:src/system_stm32l1xx.c ****     /* Enable Prefetch Buffer */
 329:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
 330:src/system_stm32l1xx.c **** 
 331:src/system_stm32l1xx.c ****     /* Flash 1 wait state */
 332:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_LATENCY;
 333:src/system_stm32l1xx.c ****     
 334:src/system_stm32l1xx.c **** 
 335:src/system_stm32l1xx.c ****     /* Power enable */
 336:src/system_stm32l1xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 190              		.loc 1 336 0
 191 0080 1F48     		ldr	r0, .L22	@ tmp187,
 326:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_ACC64;
 192              		.loc 1 326 0
 193 0082 1A68     		ldr	r2, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 337:src/system_stm32l1xx.c ****   
 338:src/system_stm32l1xx.c ****     /* Select the Voltage Range 1 (1.8 V) */
 339:src/system_stm32l1xx.c ****     PWR->CR = PWR_CR_VOS_0;
 194              		.loc 1 339 0
 195 0084 2249     		ldr	r1, .L22+16	@ tmp189,
 326:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_ACC64;
 196              		.loc 1 326 0
 197 0086 42F00402 		orr	r2, r2, #4	@ D.6657, D.6657,
 198 008a 1A60     		str	r2, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 329:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
 199              		.loc 1 329 0
 200 008c 1A68     		ldr	r2, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 201              		.loc 1 339 0
 202 008e 4FF40064 		mov	r4, #2048	@ tmp190,
 329:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
 203              		.loc 1 329 0
 204 0092 42F00202 		orr	r2, r2, #2	@ D.6657, D.6657,
 205 0096 1A60     		str	r2, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 332:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_LATENCY;
 206              		.loc 1 332 0
 207 0098 1D68     		ldr	r5, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 340:src/system_stm32l1xx.c ****   
 341:src/system_stm32l1xx.c ****   
 342:src/system_stm32l1xx.c ****     /* Wait Until the Voltage Regulator is ready */
 343:src/system_stm32l1xx.c ****     while((PWR->CSR & PWR_CSR_VOSF) != RESET)
ARM GAS  /tmp/ccgHyjwV.s 			page 11


 208              		.loc 1 343 0
 209 009a 0A46     		mov	r2, r1	@ tmp215, tmp189
 332:src/system_stm32l1xx.c ****     FLASH->ACR |= FLASH_ACR_LATENCY;
 210              		.loc 1 332 0
 211 009c 45F00105 		orr	r5, r5, #1	@ D.6657, D.6657,
 212 00a0 1D60     		str	r5, [r3]	@ D.6657, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 336:src/system_stm32l1xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 213              		.loc 1 336 0
 214 00a2 436A     		ldr	r3, [r0, #36]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 215 00a4 43F08053 		orr	r3, r3, #268435456	@ D.6657, D.6657,
 216 00a8 4362     		str	r3, [r0, #36]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 339:src/system_stm32l1xx.c ****     PWR->CR = PWR_CR_VOS_0;
 217              		.loc 1 339 0
 218 00aa 0C60     		str	r4, [r1]	@ tmp190, MEM[(struct PWR_TypeDef *)1073770496B].CR
 219              	.L8:
 220              		.loc 1 343 0
 221 00ac 5368     		ldr	r3, [r2, #4]	@ D.6657, MEM[(struct PWR_TypeDef *)1073770496B].CSR
 222 00ae D906     		lsls	r1, r3, #27	@, D.6657,
 223 00b0 FCD4     		bmi	.L8	@,
 344:src/system_stm32l1xx.c ****     {
 345:src/system_stm32l1xx.c ****     }
 346:src/system_stm32l1xx.c ****       
 347:src/system_stm32l1xx.c ****     /* HCLK = SYSCLK /1*/
 348:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 224              		.loc 1 348 0
 225 00b2 134B     		ldr	r3, .L22	@ tmp193,
 226 00b4 9A68     		ldr	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 349:src/system_stm32l1xx.c ****   
 350:src/system_stm32l1xx.c ****     /* PCLK2 = HCLK /1*/
 351:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 352:src/system_stm32l1xx.c ****     
 353:src/system_stm32l1xx.c ****     /* PCLK1 = HCLK /1*/
 354:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 355:src/system_stm32l1xx.c ****     
 356:src/system_stm32l1xx.c ****     /*  PLL configuration */
 357:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 358:src/system_stm32l1xx.c ****                                         RCC_CFGR_PLLDIV));
 359:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI | RCC_CFGR_PLLMUL4 | RCC_CFGR_PLLDIV2);
 360:src/system_stm32l1xx.c **** 
 361:src/system_stm32l1xx.c ****     /* Enable PLL */
 362:src/system_stm32l1xx.c ****     RCC->CR |= RCC_CR_PLLON;
 363:src/system_stm32l1xx.c **** 
 364:src/system_stm32l1xx.c ****     /* Wait till PLL is ready */
 365:src/system_stm32l1xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 227              		.loc 1 365 0
 228 00b6 1946     		mov	r1, r3	@ tmp214, tmp193
 348:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 229              		.loc 1 348 0
 230 00b8 9A60     		str	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 351:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 231              		.loc 1 351 0
 232 00ba 9A68     		ldr	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 233 00bc 9A60     		str	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 354:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 234              		.loc 1 354 0
 235 00be 9A68     		ldr	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 236 00c0 9A60     		str	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
ARM GAS  /tmp/ccgHyjwV.s 			page 12


 357:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 237              		.loc 1 357 0
 238 00c2 9A68     		ldr	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 239 00c4 22F47D02 		bic	r2, r2, #16580608	@ D.6657, D.6657,
 240 00c8 9A60     		str	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 359:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI | RCC_CFGR_PLLMUL4 | RCC_CFGR_PLLDIV2);
 241              		.loc 1 359 0
 242 00ca 9A68     		ldr	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 243 00cc 42F48802 		orr	r2, r2, #4456448	@ D.6657, D.6657,
 244 00d0 9A60     		str	r2, [r3, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 362:src/system_stm32l1xx.c ****     RCC->CR |= RCC_CR_PLLON;
 245              		.loc 1 362 0
 246 00d2 1A68     		ldr	r2, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 247 00d4 42F08072 		orr	r2, r2, #16777216	@ D.6657, D.6657,
 248 00d8 1A60     		str	r2, [r3]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 249              	.L10:
 250              		.loc 1 365 0
 251 00da 0B68     		ldr	r3, [r1]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CR
 252 00dc 084A     		ldr	r2, .L22	@ tmp205,
 253 00de 9B01     		lsls	r3, r3, #6	@, D.6657,
 254 00e0 FBD5     		bpl	.L10	@,
 366:src/system_stm32l1xx.c ****     {
 367:src/system_stm32l1xx.c ****     }
 368:src/system_stm32l1xx.c ****         
 369:src/system_stm32l1xx.c ****     /* Select PLL as system clock source */
 370:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 255              		.loc 1 370 0
 256 00e2 9368     		ldr	r3, [r2, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 371:src/system_stm32l1xx.c ****     
 372:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 373:src/system_stm32l1xx.c **** 
 374:src/system_stm32l1xx.c ****     /* Wait till PLL is used as system clock source */
 375:src/system_stm32l1xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 257              		.loc 1 375 0
 258 00e4 1146     		mov	r1, r2	@ tmp213, tmp205
 370:src/system_stm32l1xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 259              		.loc 1 370 0
 260 00e6 23F00303 		bic	r3, r3, #3	@ D.6657, D.6657,
 261 00ea 9360     		str	r3, [r2, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 372:src/system_stm32l1xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 262              		.loc 1 372 0
 263 00ec 9368     		ldr	r3, [r2, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 264 00ee 43F00303 		orr	r3, r3, #3	@ D.6657, D.6657,
 265 00f2 9360     		str	r3, [r2, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 266              	.L12:
 267              		.loc 1 375 0
 268 00f4 8B68     		ldr	r3, [r1, #8]	@ D.6657, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 269 00f6 03F00C03 		and	r3, r3, #12	@ D.6657, D.6657,
 270 00fa 0C2B     		cmp	r3, #12	@ D.6657,
 271 00fc FAD1     		bne	.L12	@,
 272 00fe B7E7     		b	.L11	@
 273              	.L23:
 274              		.align	2
 275              	.L22:
 276 0100 00380240 		.word	1073887232
 277 0104 0CC0FF88 		.word	-1996505076
 278 0108 00ED00E0 		.word	-536810240
ARM GAS  /tmp/ccgHyjwV.s 			page 13


 279 010c 003C0240 		.word	1073888256
 280 0110 00700040 		.word	1073770496
 281              	.LBE7:
 282              	.LBE9:
 283              		.cfi_endproc
 284              	.LFE56:
 285              		.size	SystemInit, .-SystemInit
 286              		.align	2
 287              		.global	SystemCoreClockUpdate
 288              		.thumb
 289              		.thumb_func
 290              		.type	SystemCoreClockUpdate, %function
 291              	SystemCoreClockUpdate:
 292              	.LFB57:
 242:src/system_stm32l1xx.c **** {
 293              		.loc 1 242 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              	.LVL0:
 246:src/system_stm32l1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 299              		.loc 1 246 0
 300 0114 1F4B     		ldr	r3, .L33	@ tmp148,
 242:src/system_stm32l1xx.c **** {
 301              		.loc 1 242 0
 302 0116 10B4     		push	{r4}	@
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 4, -4
 246:src/system_stm32l1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 306              		.loc 1 246 0
 307 0118 9B68     		ldr	r3, [r3, #8]	@ D.6661, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 308              	.LVL1:
 309 011a 03F00C03 		and	r3, r3, #12	@ tmp, D.6661,
 310              	.LVL2:
 248:src/system_stm32l1xx.c ****   switch (tmp)
 311              		.loc 1 248 0
 312 011e 0C2B     		cmp	r3, #12	@ tmp,
 313 0120 08D8     		bhi	.L25	@
 314 0122 DFE803F0 		tbb	[pc, r3]	@ tmp
 315              	.L27:
 316 0126 07       		.byte	(.L25-.L27)/2
 317 0127 07       		.byte	(.L25-.L27)/2
 318 0128 07       		.byte	(.L25-.L27)/2
 319 0129 07       		.byte	(.L25-.L27)/2
 320 012a 1C       		.byte	(.L32-.L27)/2
 321 012b 07       		.byte	(.L25-.L27)/2
 322 012c 07       		.byte	(.L25-.L27)/2
 323 012d 07       		.byte	(.L25-.L27)/2
 324 012e 1F       		.byte	(.L29-.L27)/2
 325 012f 07       		.byte	(.L25-.L27)/2
 326 0130 07       		.byte	(.L25-.L27)/2
 327 0131 07       		.byte	(.L25-.L27)/2
 328 0132 22       		.byte	(.L30-.L27)/2
 329 0133 00       		.align	1
 330              	.L25:
ARM GAS  /tmp/ccgHyjwV.s 			page 14


 281:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 331              		.loc 1 281 0
 332 0134 174B     		ldr	r3, .L33	@ tmp169,
 333              	.LVL3:
 282:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 334              		.loc 1 282 0
 335 0136 4FF40041 		mov	r1, #32768	@ tmp173,
 281:src/system_stm32l1xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 336              		.loc 1 281 0
 337 013a 5A68     		ldr	r2, [r3, #4]	@ D.6661,
 338              	.LVL4:
 339 013c 164B     		ldr	r3, .L33+4	@ tmp183,
 340 013e C2F34232 		ubfx	r2, r2, #13, #3	@ msirange, D.6661,,
 341              	.LVL5:
 282:src/system_stm32l1xx.c ****       SystemCoreClock = (32768 * (1 << (msirange + 1)));
 342              		.loc 1 282 0
 343 0142 0132     		adds	r2, r2, #1	@ D.6661, msirange,
 344 0144 01FA02F2 		lsl	r2, r1, r2	@ D.6664, tmp173, D.6661
 345              	.LVL6:
 346              	.L28:
 287:src/system_stm32l1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 347              		.loc 1 287 0
 348 0148 1249     		ldr	r1, .L33	@ tmp174,
 290:src/system_stm32l1xx.c **** }
 349              		.loc 1 290 0
 350 014a 5DF8044B 		ldr	r4, [sp], #4	@,
 287:src/system_stm32l1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 351              		.loc 1 287 0
 352 014e 8968     		ldr	r1, [r1, #8]	@ D.6661, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 353 0150 C1F30311 		ubfx	r1, r1, #4, #4	@ D.6661, D.6661,,
 354 0154 1944     		add	r1, r1, r3	@ tmp177, tmp183
 355 0156 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2	@ tmp180, AHBPrescTable
 356              	.LVL7:
 289:src/system_stm32l1xx.c ****   SystemCoreClock >>= tmp;
 357              		.loc 1 289 0
 358 0158 CA40     		lsrs	r2, r2, r1	@ SystemCoreClock.9, D.6664, tmp180
 359 015a DA61     		str	r2, [r3, #28]	@ SystemCoreClock.9, SystemCoreClock
 290:src/system_stm32l1xx.c **** }
 360              		.loc 1 290 0
 361 015c 7047     		bx	lr	@
 362              	.LVL8:
 363              	.L32:
 248:src/system_stm32l1xx.c ****   switch (tmp)
 364              		.loc 1 248 0
 365 015e 0F4A     		ldr	r2, .L33+8	@ D.6664,
 366 0160 0D4B     		ldr	r3, .L33+4	@ tmp183,
 367              	.LVL9:
 368 0162 F1E7     		b	.L28	@
 369              	.LVL10:
 370              	.L29:
 259:src/system_stm32l1xx.c ****       break;
 371              		.loc 1 259 0
 372 0164 0E4A     		ldr	r2, .L33+12	@ D.6664,
 373 0166 0C4B     		ldr	r3, .L33+4	@ tmp183,
 374              	.LVL11:
 375 0168 EEE7     		b	.L28	@
 376              	.LVL12:
ARM GAS  /tmp/ccgHyjwV.s 			page 15


 377              	.L30:
 262:src/system_stm32l1xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 378              		.loc 1 262 0
 379 016a 0A49     		ldr	r1, .L33	@ tmp155,
 264:src/system_stm32l1xx.c ****       pllmul = PLLMulTable[(pllmul >> 18)];
 380              		.loc 1 264 0
 381 016c 0A4B     		ldr	r3, .L33+4	@ tmp183,
 382              	.LVL13:
 262:src/system_stm32l1xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 383              		.loc 1 262 0
 384 016e 8A68     		ldr	r2, [r1, #8]	@ D.6661, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 385              	.LVL14:
 263:src/system_stm32l1xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 386              		.loc 1 263 0
 387 0170 8C68     		ldr	r4, [r1, #8]	@ D.6661, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 388              	.LVL15:
 264:src/system_stm32l1xx.c ****       pllmul = PLLMulTable[(pllmul >> 18)];
 389              		.loc 1 264 0
 390 0172 C2F38342 		ubfx	r2, r2, #18, #4	@ D.6661, D.6661,,
 391              	.LVL16:
 392 0176 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2	@ tmp161, PLLMulTable
 267:src/system_stm32l1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 393              		.loc 1 267 0
 394 0178 8868     		ldr	r0, [r1, #8]	@ D.6661, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 264:src/system_stm32l1xx.c ****       pllmul = PLLMulTable[(pllmul >> 18)];
 395              		.loc 1 264 0
 396 017a D2B2     		uxtb	r2, r2	@ D.6663, tmp161
 397              	.LVL17:
 269:src/system_stm32l1xx.c ****       if (pllsource == 0x00)
 398              		.loc 1 269 0
 399 017c C003     		lsls	r0, r0, #15	@, D.6661,
 272:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 400              		.loc 1 272 0
 401 017e 54BF     		ite	pl
 402 0180 0648     		ldrpl	r0, .L33+8	@ tmp166,
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 403              		.loc 1 277 0
 404 0182 0748     		ldrmi	r0, .L33+12	@ tmp168,
 265:src/system_stm32l1xx.c ****       plldiv = (plldiv >> 22) + 1;
 405              		.loc 1 265 0
 406 0184 C4F38151 		ubfx	r1, r4, #22, #2	@ D.6661, D.6661,,
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 407              		.loc 1 277 0
 408 0188 00FB02F2 		mul	r2, r0, r2	@ D.6661, tmp168, D.6663
 409              	.LVL18:
 265:src/system_stm32l1xx.c ****       plldiv = (plldiv >> 22) + 1;
 410              		.loc 1 265 0
 411 018c 0131     		adds	r1, r1, #1	@ plldiv, D.6661,
 412              	.LVL19:
 277:src/system_stm32l1xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 413              		.loc 1 277 0
 414 018e B2FBF1F2 		udiv	r2, r2, r1	@ D.6664, D.6661, plldiv
 415 0192 D9E7     		b	.L28	@
 416              	.L34:
 417              		.align	2
 418              	.L33:
 419 0194 00380240 		.word	1073887232
ARM GAS  /tmp/ccgHyjwV.s 			page 16


 420 0198 00000000 		.word	.LANCHOR0
 421 019c 0024F400 		.word	16000000
 422 01a0 00127A00 		.word	8000000
 423              		.cfi_endproc
 424              	.LFE57:
 425              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 426              		.global	AHBPrescTable
 427              		.global	PLLMulTable
 428              		.global	SystemCoreClock
 429              		.data
 430              		.align	2
 431              		.set	.LANCHOR0,. + 0
 432              		.type	PLLMulTable, %object
 433              		.size	PLLMulTable, 9
 434              	PLLMulTable:
 435 0000 03       		.byte	3
 436 0001 04       		.byte	4
 437 0002 06       		.byte	6
 438 0003 08       		.byte	8
 439 0004 0C       		.byte	12
 440 0005 10       		.byte	16
 441 0006 18       		.byte	24
 442 0007 20       		.byte	32
 443 0008 30       		.byte	48
 444 0009 000000   		.space	3
 445              		.type	AHBPrescTable, %object
 446              		.size	AHBPrescTable, 16
 447              	AHBPrescTable:
 448 000c 00       		.byte	0
 449 000d 00       		.byte	0
 450 000e 00       		.byte	0
 451 000f 00       		.byte	0
 452 0010 00       		.byte	0
 453 0011 00       		.byte	0
 454 0012 00       		.byte	0
 455 0013 00       		.byte	0
 456 0014 01       		.byte	1
 457 0015 02       		.byte	2
 458 0016 03       		.byte	3
 459 0017 04       		.byte	4
 460 0018 06       		.byte	6
 461 0019 07       		.byte	7
 462 001a 08       		.byte	8
 463 001b 09       		.byte	9
 464              		.type	SystemCoreClock, %object
 465              		.size	SystemCoreClock, 4
 466              	SystemCoreClock:
 467 001c 0048E801 		.word	32000000
 468              		.text
 469              	.Letext0:
 470              		.file 2 "/home/zbanks/gcc-arm-none-eabi/arm-none-eabi/include/stdint.h"
 471              		.file 3 "./inc/core_cm3.h"
 472              		.file 4 "./inc/stm32l1xx.h"
 473              		.section	.debug_info,"",%progbits
 474              	.Ldebug_info0:
 475 0000 B0050000 		.4byte	0x5b0
 476 0004 0200     		.2byte	0x2
ARM GAS  /tmp/ccgHyjwV.s 			page 17


 477 0006 00000000 		.4byte	.Ldebug_abbrev0
 478 000a 04       		.byte	0x4
 479 000b 01       		.uleb128 0x1
 480 000c A4020000 		.4byte	.LASF66
 481 0010 01       		.byte	0x1
 482 0011 34020000 		.4byte	.LASF67
 483 0015 F2000000 		.4byte	.LASF68
 484 0019 00000000 		.4byte	.Ltext0
 485 001d A4010000 		.4byte	.Letext0
 486 0021 00000000 		.4byte	.Ldebug_line0
 487 0025 02       		.uleb128 0x2
 488 0026 01       		.byte	0x1
 489 0027 06       		.byte	0x6
 490 0028 56010000 		.4byte	.LASF0
 491 002c 03       		.uleb128 0x3
 492 002d 68000000 		.4byte	.LASF3
 493 0031 02       		.byte	0x2
 494 0032 2A       		.byte	0x2a
 495 0033 37000000 		.4byte	0x37
 496 0037 02       		.uleb128 0x2
 497 0038 01       		.byte	0x1
 498 0039 08       		.byte	0x8
 499 003a 23010000 		.4byte	.LASF1
 500 003e 02       		.uleb128 0x2
 501 003f 02       		.byte	0x2
 502 0040 05       		.byte	0x5
 503 0041 78000000 		.4byte	.LASF2
 504 0045 03       		.uleb128 0x3
 505 0046 8F010000 		.4byte	.LASF4
 506 004a 02       		.byte	0x2
 507 004b 36       		.byte	0x36
 508 004c 50000000 		.4byte	0x50
 509 0050 02       		.uleb128 0x2
 510 0051 02       		.byte	0x2
 511 0052 07       		.byte	0x7
 512 0053 AF010000 		.4byte	.LASF5
 513 0057 03       		.uleb128 0x3
 514 0058 DC010000 		.4byte	.LASF6
 515 005c 02       		.byte	0x2
 516 005d 4F       		.byte	0x4f
 517 005e 62000000 		.4byte	0x62
 518 0062 02       		.uleb128 0x2
 519 0063 04       		.byte	0x4
 520 0064 05       		.byte	0x5
 521 0065 C3000000 		.4byte	.LASF7
 522 0069 03       		.uleb128 0x3
 523 006a 79010000 		.4byte	.LASF8
 524 006e 02       		.byte	0x2
 525 006f 50       		.byte	0x50
 526 0070 74000000 		.4byte	0x74
 527 0074 02       		.uleb128 0x2
 528 0075 04       		.byte	0x4
 529 0076 07       		.byte	0x7
 530 0077 22020000 		.4byte	.LASF9
 531 007b 02       		.uleb128 0x2
 532 007c 08       		.byte	0x8
 533 007d 05       		.byte	0x5
ARM GAS  /tmp/ccgHyjwV.s 			page 18


 534 007e 9F000000 		.4byte	.LASF10
 535 0082 02       		.uleb128 0x2
 536 0083 08       		.byte	0x8
 537 0084 07       		.byte	0x7
 538 0085 62010000 		.4byte	.LASF11
 539 0089 04       		.uleb128 0x4
 540 008a 04       		.byte	0x4
 541 008b 05       		.byte	0x5
 542 008c 696E7400 		.ascii	"int\000"
 543 0090 02       		.uleb128 0x2
 544 0091 04       		.byte	0x4
 545 0092 07       		.byte	0x7
 546 0093 82010000 		.4byte	.LASF12
 547 0097 02       		.uleb128 0x2
 548 0098 04       		.byte	0x4
 549 0099 07       		.byte	0x7
 550 009a 12000000 		.4byte	.LASF13
 551 009e 05       		.uleb128 0x5
 552 009f 69000000 		.4byte	0x69
 553 00a3 06       		.uleb128 0x6
 554 00a4 8C       		.byte	0x8c
 555 00a5 03       		.byte	0x3
 556 00a6 4801     		.2byte	0x148
 557 00a8 E9010000 		.4byte	0x1e9
 558 00ac 07       		.uleb128 0x7
 559 00ad 53000000 		.4byte	.LASF14
 560 00b1 03       		.byte	0x3
 561 00b2 4A01     		.2byte	0x14a
 562 00b4 E9010000 		.4byte	0x1e9
 563 00b8 02       		.byte	0x2
 564 00b9 23       		.byte	0x23
 565 00ba 00       		.uleb128 0
 566 00bb 07       		.uleb128 0x7
 567 00bc 8A000000 		.4byte	.LASF15
 568 00c0 03       		.byte	0x3
 569 00c1 4B01     		.2byte	0x14b
 570 00c3 9E000000 		.4byte	0x9e
 571 00c7 02       		.byte	0x2
 572 00c8 23       		.byte	0x23
 573 00c9 04       		.uleb128 0x4
 574 00ca 07       		.uleb128 0x7
 575 00cb D7010000 		.4byte	.LASF16
 576 00cf 03       		.byte	0x3
 577 00d0 4C01     		.2byte	0x14c
 578 00d2 9E000000 		.4byte	0x9e
 579 00d6 02       		.byte	0x2
 580 00d7 23       		.byte	0x23
 581 00d8 08       		.uleb128 0x8
 582 00d9 07       		.uleb128 0x7
 583 00da 31010000 		.4byte	.LASF17
 584 00de 03       		.byte	0x3
 585 00df 4D01     		.2byte	0x14d
 586 00e1 9E000000 		.4byte	0x9e
 587 00e5 02       		.byte	0x2
 588 00e6 23       		.byte	0x23
 589 00e7 0C       		.uleb128 0xc
 590 00e8 08       		.uleb128 0x8
ARM GAS  /tmp/ccgHyjwV.s 			page 19


 591 00e9 53435200 		.ascii	"SCR\000"
 592 00ed 03       		.byte	0x3
 593 00ee 4E01     		.2byte	0x14e
 594 00f0 9E000000 		.4byte	0x9e
 595 00f4 02       		.byte	0x2
 596 00f5 23       		.byte	0x23
 597 00f6 10       		.uleb128 0x10
 598 00f7 08       		.uleb128 0x8
 599 00f8 43435200 		.ascii	"CCR\000"
 600 00fc 03       		.byte	0x3
 601 00fd 4F01     		.2byte	0x14f
 602 00ff 9E000000 		.4byte	0x9e
 603 0103 02       		.byte	0x2
 604 0104 23       		.byte	0x23
 605 0105 14       		.uleb128 0x14
 606 0106 08       		.uleb128 0x8
 607 0107 53485000 		.ascii	"SHP\000"
 608 010b 03       		.byte	0x3
 609 010c 5001     		.2byte	0x150
 610 010e FE010000 		.4byte	0x1fe
 611 0112 02       		.byte	0x2
 612 0113 23       		.byte	0x23
 613 0114 18       		.uleb128 0x18
 614 0115 07       		.uleb128 0x7
 615 0116 98010000 		.4byte	.LASF18
 616 011a 03       		.byte	0x3
 617 011b 5101     		.2byte	0x151
 618 011d 9E000000 		.4byte	0x9e
 619 0121 02       		.byte	0x2
 620 0122 23       		.byte	0x23
 621 0123 24       		.uleb128 0x24
 622 0124 07       		.uleb128 0x7
 623 0125 ED000000 		.4byte	.LASF19
 624 0129 03       		.byte	0x3
 625 012a 5201     		.2byte	0x152
 626 012c 9E000000 		.4byte	0x9e
 627 0130 02       		.byte	0x2
 628 0131 23       		.byte	0x23
 629 0132 28       		.uleb128 0x28
 630 0133 07       		.uleb128 0x7
 631 0134 FE010000 		.4byte	.LASF20
 632 0138 03       		.byte	0x3
 633 0139 5301     		.2byte	0x153
 634 013b 9E000000 		.4byte	0x9e
 635 013f 02       		.byte	0x2
 636 0140 23       		.byte	0x23
 637 0141 2C       		.uleb128 0x2c
 638 0142 07       		.uleb128 0x7
 639 0143 E9010000 		.4byte	.LASF21
 640 0147 03       		.byte	0x3
 641 0148 5401     		.2byte	0x154
 642 014a 9E000000 		.4byte	0x9e
 643 014e 02       		.byte	0x2
 644 014f 23       		.byte	0x23
 645 0150 30       		.uleb128 0x30
 646 0151 07       		.uleb128 0x7
 647 0152 9E010000 		.4byte	.LASF22
ARM GAS  /tmp/ccgHyjwV.s 			page 20


 648 0156 03       		.byte	0x3
 649 0157 5501     		.2byte	0x155
 650 0159 9E000000 		.4byte	0x9e
 651 015d 02       		.byte	0x2
 652 015e 23       		.byte	0x23
 653 015f 34       		.uleb128 0x34
 654 0160 07       		.uleb128 0x7
 655 0161 B4000000 		.4byte	.LASF23
 656 0165 03       		.byte	0x3
 657 0166 5601     		.2byte	0x156
 658 0168 9E000000 		.4byte	0x9e
 659 016c 02       		.byte	0x2
 660 016d 23       		.byte	0x23
 661 016e 38       		.uleb128 0x38
 662 016f 07       		.uleb128 0x7
 663 0170 6B020000 		.4byte	.LASF24
 664 0174 03       		.byte	0x3
 665 0175 5701     		.2byte	0x157
 666 0177 9E000000 		.4byte	0x9e
 667 017b 02       		.byte	0x2
 668 017c 23       		.byte	0x23
 669 017d 3C       		.uleb128 0x3c
 670 017e 08       		.uleb128 0x8
 671 017f 50465200 		.ascii	"PFR\000"
 672 0183 03       		.byte	0x3
 673 0184 5801     		.2byte	0x158
 674 0186 13020000 		.4byte	0x213
 675 018a 02       		.byte	0x2
 676 018b 23       		.byte	0x23
 677 018c 40       		.uleb128 0x40
 678 018d 08       		.uleb128 0x8
 679 018e 44465200 		.ascii	"DFR\000"
 680 0192 03       		.byte	0x3
 681 0193 5901     		.2byte	0x159
 682 0195 E9010000 		.4byte	0x1e9
 683 0199 02       		.byte	0x2
 684 019a 23       		.byte	0x23
 685 019b 48       		.uleb128 0x48
 686 019c 08       		.uleb128 0x8
 687 019d 41445200 		.ascii	"ADR\000"
 688 01a1 03       		.byte	0x3
 689 01a2 5A01     		.2byte	0x15a
 690 01a4 E9010000 		.4byte	0x1e9
 691 01a8 02       		.byte	0x2
 692 01a9 23       		.byte	0x23
 693 01aa 4C       		.uleb128 0x4c
 694 01ab 07       		.uleb128 0x7
 695 01ac 03020000 		.4byte	.LASF25
 696 01b0 03       		.byte	0x3
 697 01b1 5B01     		.2byte	0x15b
 698 01b3 2D020000 		.4byte	0x22d
 699 01b7 02       		.byte	0x2
 700 01b8 23       		.byte	0x23
 701 01b9 50       		.uleb128 0x50
 702 01ba 07       		.uleb128 0x7
 703 01bb E4010000 		.4byte	.LASF26
 704 01bf 03       		.byte	0x3
ARM GAS  /tmp/ccgHyjwV.s 			page 21


 705 01c0 5C01     		.2byte	0x15c
 706 01c2 47020000 		.4byte	0x247
 707 01c6 02       		.byte	0x2
 708 01c7 23       		.byte	0x23
 709 01c8 60       		.uleb128 0x60
 710 01c9 07       		.uleb128 0x7
 711 01ca 59000000 		.4byte	.LASF27
 712 01ce 03       		.byte	0x3
 713 01cf 5D01     		.2byte	0x15d
 714 01d1 37020000 		.4byte	0x237
 715 01d5 02       		.byte	0x2
 716 01d6 23       		.byte	0x23
 717 01d7 74       		.uleb128 0x74
 718 01d8 07       		.uleb128 0x7
 719 01d9 94020000 		.4byte	.LASF28
 720 01dd 03       		.byte	0x3
 721 01de 5E01     		.2byte	0x15e
 722 01e0 9E000000 		.4byte	0x9e
 723 01e4 03       		.byte	0x3
 724 01e5 23       		.byte	0x23
 725 01e6 8801     		.uleb128 0x88
 726 01e8 00       		.byte	0
 727 01e9 09       		.uleb128 0x9
 728 01ea 9E000000 		.4byte	0x9e
 729 01ee 0A       		.uleb128 0xa
 730 01ef 2C000000 		.4byte	0x2c
 731 01f3 FE010000 		.4byte	0x1fe
 732 01f7 0B       		.uleb128 0xb
 733 01f8 97000000 		.4byte	0x97
 734 01fc 0B       		.byte	0xb
 735 01fd 00       		.byte	0
 736 01fe 05       		.uleb128 0x5
 737 01ff EE010000 		.4byte	0x1ee
 738 0203 0A       		.uleb128 0xa
 739 0204 69000000 		.4byte	0x69
 740 0208 13020000 		.4byte	0x213
 741 020c 0B       		.uleb128 0xb
 742 020d 97000000 		.4byte	0x97
 743 0211 01       		.byte	0x1
 744 0212 00       		.byte	0
 745 0213 09       		.uleb128 0x9
 746 0214 18020000 		.4byte	0x218
 747 0218 05       		.uleb128 0x5
 748 0219 03020000 		.4byte	0x203
 749 021d 0A       		.uleb128 0xa
 750 021e 69000000 		.4byte	0x69
 751 0222 2D020000 		.4byte	0x22d
 752 0226 0B       		.uleb128 0xb
 753 0227 97000000 		.4byte	0x97
 754 022b 03       		.byte	0x3
 755 022c 00       		.byte	0
 756 022d 09       		.uleb128 0x9
 757 022e 32020000 		.4byte	0x232
 758 0232 05       		.uleb128 0x5
 759 0233 1D020000 		.4byte	0x21d
 760 0237 0A       		.uleb128 0xa
 761 0238 69000000 		.4byte	0x69
ARM GAS  /tmp/ccgHyjwV.s 			page 22


 762 023c 47020000 		.4byte	0x247
 763 0240 0B       		.uleb128 0xb
 764 0241 97000000 		.4byte	0x97
 765 0245 04       		.byte	0x4
 766 0246 00       		.byte	0
 767 0247 09       		.uleb128 0x9
 768 0248 4C020000 		.4byte	0x24c
 769 024c 05       		.uleb128 0x5
 770 024d 37020000 		.4byte	0x237
 771 0251 0C       		.uleb128 0xc
 772 0252 37010000 		.4byte	.LASF29
 773 0256 03       		.byte	0x3
 774 0257 5F01     		.2byte	0x15f
 775 0259 A3000000 		.4byte	0xa3
 776 025d 0D       		.uleb128 0xd
 777 025e 01       		.byte	0x1
 778 025f 04       		.byte	0x4
 779 0260 1201     		.2byte	0x112
 780 0262 73020000 		.4byte	0x273
 781 0266 0E       		.uleb128 0xe
 782 0267 53020000 		.4byte	.LASF30
 783 026b 00       		.sleb128 0
 784 026c 0F       		.uleb128 0xf
 785 026d 53455400 		.ascii	"SET\000"
 786 0271 01       		.sleb128 1
 787 0272 00       		.byte	0
 788 0273 06       		.uleb128 0x6
 789 0274 88       		.byte	0x88
 790 0275 04       		.byte	0x4
 791 0276 E001     		.2byte	0x1e0
 792 0278 32030000 		.4byte	0x332
 793 027c 08       		.uleb128 0x8
 794 027d 41435200 		.ascii	"ACR\000"
 795 0281 04       		.byte	0x4
 796 0282 E201     		.2byte	0x1e2
 797 0284 9E000000 		.4byte	0x9e
 798 0288 02       		.byte	0x2
 799 0289 23       		.byte	0x23
 800 028a 00       		.uleb128 0
 801 028b 07       		.uleb128 0x7
 802 028c CC010000 		.4byte	.LASF31
 803 0290 04       		.byte	0x4
 804 0291 E301     		.2byte	0x1e3
 805 0293 9E000000 		.4byte	0x9e
 806 0297 02       		.byte	0x2
 807 0298 23       		.byte	0x23
 808 0299 04       		.uleb128 0x4
 809 029a 07       		.uleb128 0x7
 810 029b 3D000000 		.4byte	.LASF32
 811 029f 04       		.byte	0x4
 812 02a0 E401     		.2byte	0x1e4
 813 02a2 9E000000 		.4byte	0x9e
 814 02a6 02       		.byte	0x2
 815 02a7 23       		.byte	0x23
 816 02a8 08       		.uleb128 0x8
 817 02a9 07       		.uleb128 0x7
 818 02aa 40010000 		.4byte	.LASF33
ARM GAS  /tmp/ccgHyjwV.s 			page 23


 819 02ae 04       		.byte	0x4
 820 02af E501     		.2byte	0x1e5
 821 02b1 9E000000 		.4byte	0x9e
 822 02b5 02       		.byte	0x2
 823 02b6 23       		.byte	0x23
 824 02b7 0C       		.uleb128 0xc
 825 02b8 07       		.uleb128 0x7
 826 02b9 4B020000 		.4byte	.LASF34
 827 02bd 04       		.byte	0x4
 828 02be E601     		.2byte	0x1e6
 829 02c0 9E000000 		.4byte	0x9e
 830 02c4 02       		.byte	0x2
 831 02c5 23       		.byte	0x23
 832 02c6 10       		.uleb128 0x10
 833 02c7 07       		.uleb128 0x7
 834 02c8 8F000000 		.4byte	.LASF35
 835 02cc 04       		.byte	0x4
 836 02cd E701     		.2byte	0x1e7
 837 02cf 9E000000 		.4byte	0x9e
 838 02d3 02       		.byte	0x2
 839 02d4 23       		.byte	0x23
 840 02d5 14       		.uleb128 0x14
 841 02d6 08       		.uleb128 0x8
 842 02d7 535200   		.ascii	"SR\000"
 843 02da 04       		.byte	0x4
 844 02db E801     		.2byte	0x1e8
 845 02dd 9E000000 		.4byte	0x9e
 846 02e1 02       		.byte	0x2
 847 02e2 23       		.byte	0x23
 848 02e3 18       		.uleb128 0x18
 849 02e4 08       		.uleb128 0x8
 850 02e5 4F425200 		.ascii	"OBR\000"
 851 02e9 04       		.byte	0x4
 852 02ea E901     		.2byte	0x1e9
 853 02ec 9E000000 		.4byte	0x9e
 854 02f0 02       		.byte	0x2
 855 02f1 23       		.byte	0x23
 856 02f2 1C       		.uleb128 0x1c
 857 02f3 07       		.uleb128 0x7
 858 02f4 E8000000 		.4byte	.LASF36
 859 02f8 04       		.byte	0x4
 860 02f9 EA01     		.2byte	0x1ea
 861 02fb 9E000000 		.4byte	0x9e
 862 02ff 02       		.byte	0x2
 863 0300 23       		.byte	0x23
 864 0301 20       		.uleb128 0x20
 865 0302 07       		.uleb128 0x7
 866 0303 70020000 		.4byte	.LASF37
 867 0307 04       		.byte	0x4
 868 0308 EB01     		.2byte	0x1eb
 869 030a 32030000 		.4byte	0x332
 870 030e 02       		.byte	0x2
 871 030f 23       		.byte	0x23
 872 0310 24       		.uleb128 0x24
 873 0311 07       		.uleb128 0x7
 874 0312 D1010000 		.4byte	.LASF38
 875 0316 04       		.byte	0x4
ARM GAS  /tmp/ccgHyjwV.s 			page 24


 876 0317 EC01     		.2byte	0x1ec
 877 0319 9E000000 		.4byte	0x9e
 878 031d 03       		.byte	0x3
 879 031e 23       		.byte	0x23
 880 031f 8001     		.uleb128 0x80
 881 0321 07       		.uleb128 0x7
 882 0322 59020000 		.4byte	.LASF39
 883 0326 04       		.byte	0x4
 884 0327 ED01     		.2byte	0x1ed
 885 0329 9E000000 		.4byte	0x9e
 886 032d 03       		.byte	0x3
 887 032e 23       		.byte	0x23
 888 032f 8401     		.uleb128 0x84
 889 0331 00       		.byte	0
 890 0332 0A       		.uleb128 0xa
 891 0333 69000000 		.4byte	0x69
 892 0337 42030000 		.4byte	0x342
 893 033b 0B       		.uleb128 0xb
 894 033c 97000000 		.4byte	0x97
 895 0340 16       		.byte	0x16
 896 0341 00       		.byte	0
 897 0342 0C       		.uleb128 0xc
 898 0343 79020000 		.4byte	.LASF40
 899 0347 04       		.byte	0x4
 900 0348 EE01     		.2byte	0x1ee
 901 034a 73020000 		.4byte	0x273
 902 034e 06       		.uleb128 0x6
 903 034f 08       		.byte	0x8
 904 0350 04       		.byte	0x4
 905 0351 7802     		.2byte	0x278
 906 0353 75030000 		.4byte	0x375
 907 0357 08       		.uleb128 0x8
 908 0358 435200   		.ascii	"CR\000"
 909 035b 04       		.byte	0x4
 910 035c 7A02     		.2byte	0x27a
 911 035e 9E000000 		.4byte	0x9e
 912 0362 02       		.byte	0x2
 913 0363 23       		.byte	0x23
 914 0364 00       		.uleb128 0
 915 0365 08       		.uleb128 0x8
 916 0366 43535200 		.ascii	"CSR\000"
 917 036a 04       		.byte	0x4
 918 036b 7B02     		.2byte	0x27b
 919 036d 9E000000 		.4byte	0x9e
 920 0371 02       		.byte	0x2
 921 0372 23       		.byte	0x23
 922 0373 04       		.uleb128 0x4
 923 0374 00       		.byte	0
 924 0375 0C       		.uleb128 0xc
 925 0376 31000000 		.4byte	.LASF41
 926 037a 04       		.byte	0x4
 927 037b 7C02     		.2byte	0x27c
 928 037d 4E030000 		.4byte	0x34e
 929 0381 06       		.uleb128 0x6
 930 0382 38       		.byte	0x38
 931 0383 04       		.byte	0x4
 932 0384 8202     		.2byte	0x282
ARM GAS  /tmp/ccgHyjwV.s 			page 25


 933 0386 5C040000 		.4byte	0x45c
 934 038a 08       		.uleb128 0x8
 935 038b 435200   		.ascii	"CR\000"
 936 038e 04       		.byte	0x4
 937 038f 8402     		.2byte	0x284
 938 0391 9E000000 		.4byte	0x9e
 939 0395 02       		.byte	0x2
 940 0396 23       		.byte	0x23
 941 0397 00       		.uleb128 0
 942 0398 07       		.uleb128 0x7
 943 0399 4D000000 		.4byte	.LASF42
 944 039d 04       		.byte	0x4
 945 039e 8502     		.2byte	0x285
 946 03a0 9E000000 		.4byte	0x9e
 947 03a4 02       		.byte	0x2
 948 03a5 23       		.byte	0x23
 949 03a6 04       		.uleb128 0x4
 950 03a7 07       		.uleb128 0x7
 951 03a8 63000000 		.4byte	.LASF43
 952 03ac 04       		.byte	0x4
 953 03ad 8602     		.2byte	0x286
 954 03af 9E000000 		.4byte	0x9e
 955 03b3 02       		.byte	0x2
 956 03b4 23       		.byte	0x23
 957 03b5 08       		.uleb128 0x8
 958 03b6 08       		.uleb128 0x8
 959 03b7 43495200 		.ascii	"CIR\000"
 960 03bb 04       		.byte	0x4
 961 03bc 8702     		.2byte	0x287
 962 03be 9E000000 		.4byte	0x9e
 963 03c2 02       		.byte	0x2
 964 03c3 23       		.byte	0x23
 965 03c4 0C       		.uleb128 0xc
 966 03c5 07       		.uleb128 0x7
 967 03c6 97000000 		.4byte	.LASF44
 968 03ca 04       		.byte	0x4
 969 03cb 8802     		.2byte	0x288
 970 03cd 9E000000 		.4byte	0x9e
 971 03d1 02       		.byte	0x2
 972 03d2 23       		.byte	0x23
 973 03d3 10       		.uleb128 0x10
 974 03d4 07       		.uleb128 0x7
 975 03d5 DF000000 		.4byte	.LASF45
 976 03d9 04       		.byte	0x4
 977 03da 8902     		.2byte	0x289
 978 03dc 9E000000 		.4byte	0x9e
 979 03e0 02       		.byte	0x2
 980 03e1 23       		.byte	0x23
 981 03e2 14       		.uleb128 0x14
 982 03e3 07       		.uleb128 0x7
 983 03e4 00000000 		.4byte	.LASF46
 984 03e8 04       		.byte	0x4
 985 03e9 8A02     		.2byte	0x28a
 986 03eb 9E000000 		.4byte	0x9e
 987 03ef 02       		.byte	0x2
 988 03f0 23       		.byte	0x23
 989 03f1 18       		.uleb128 0x18
ARM GAS  /tmp/ccgHyjwV.s 			page 26


 990 03f2 07       		.uleb128 0x7
 991 03f3 D8000000 		.4byte	.LASF47
 992 03f7 04       		.byte	0x4
 993 03f8 8B02     		.2byte	0x28b
 994 03fa 9E000000 		.4byte	0x9e
 995 03fe 02       		.byte	0x2
 996 03ff 23       		.byte	0x23
 997 0400 1C       		.uleb128 0x1c
 998 0401 07       		.uleb128 0x7
 999 0402 82000000 		.4byte	.LASF48
 1000 0406 04       		.byte	0x4
 1001 0407 8C02     		.2byte	0x28c
 1002 0409 9E000000 		.4byte	0x9e
 1003 040d 02       		.byte	0x2
 1004 040e 23       		.byte	0x23
 1005 040f 20       		.uleb128 0x20
 1006 0410 07       		.uleb128 0x7
 1007 0411 70000000 		.4byte	.LASF49
 1008 0415 04       		.byte	0x4
 1009 0416 8D02     		.2byte	0x28d
 1010 0418 9E000000 		.4byte	0x9e
 1011 041c 02       		.byte	0x2
 1012 041d 23       		.byte	0x23
 1013 041e 24       		.uleb128 0x24
 1014 041f 07       		.uleb128 0x7
 1015 0420 44000000 		.4byte	.LASF50
 1016 0424 04       		.byte	0x4
 1017 0425 8E02     		.2byte	0x28e
 1018 0427 9E000000 		.4byte	0x9e
 1019 042b 02       		.byte	0x2
 1020 042c 23       		.byte	0x23
 1021 042d 28       		.uleb128 0x28
 1022 042e 07       		.uleb128 0x7
 1023 042f 9A020000 		.4byte	.LASF51
 1024 0433 04       		.byte	0x4
 1025 0434 8F02     		.2byte	0x28f
 1026 0436 9E000000 		.4byte	0x9e
 1027 043a 02       		.byte	0x2
 1028 043b 23       		.byte	0x23
 1029 043c 2C       		.uleb128 0x2c
 1030 043d 07       		.uleb128 0x7
 1031 043e C2010000 		.4byte	.LASF52
 1032 0442 04       		.byte	0x4
 1033 0443 9002     		.2byte	0x290
 1034 0445 9E000000 		.4byte	0x9e
 1035 0449 02       		.byte	0x2
 1036 044a 23       		.byte	0x23
 1037 044b 30       		.uleb128 0x30
 1038 044c 08       		.uleb128 0x8
 1039 044d 43535200 		.ascii	"CSR\000"
 1040 0451 04       		.byte	0x4
 1041 0452 9102     		.2byte	0x291
 1042 0454 9E000000 		.4byte	0x9e
 1043 0458 02       		.byte	0x2
 1044 0459 23       		.byte	0x23
 1045 045a 34       		.uleb128 0x34
 1046 045b 00       		.byte	0
ARM GAS  /tmp/ccgHyjwV.s 			page 27


 1047 045c 0C       		.uleb128 0xc
 1048 045d CC000000 		.4byte	.LASF53
 1049 0461 04       		.byte	0x4
 1050 0462 9202     		.2byte	0x292
 1051 0464 81030000 		.4byte	0x381
 1052 0468 10       		.uleb128 0x10
 1053 0469 16020000 		.4byte	.LASF69
 1054 046d 01       		.byte	0x1
 1055 046e 2C01     		.2byte	0x12c
 1056 0470 01       		.byte	0x1
 1057 0471 01       		.byte	0x1
 1058 0472 8F040000 		.4byte	0x48f
 1059 0476 11       		.uleb128 0x11
 1060 0477 47010000 		.4byte	.LASF54
 1061 047b 01       		.byte	0x1
 1062 047c 2E01     		.2byte	0x12e
 1063 047e 9E000000 		.4byte	0x9e
 1064 0482 11       		.uleb128 0x11
 1065 0483 B9000000 		.4byte	.LASF55
 1066 0487 01       		.byte	0x1
 1067 0488 2E01     		.2byte	0x12e
 1068 048a 9E000000 		.4byte	0x9e
 1069 048e 00       		.byte	0
 1070 048f 12       		.uleb128 0x12
 1071 0490 01       		.byte	0x1
 1072 0491 A4010000 		.4byte	.LASF56
 1073 0495 01       		.byte	0x1
 1074 0496 AC       		.byte	0xac
 1075 0497 01       		.byte	0x1
 1076 0498 00000000 		.4byte	.LFB56
 1077 049c 14010000 		.4byte	.LFE56
 1078 04a0 00000000 		.4byte	.LLST0
 1079 04a4 01       		.byte	0x1
 1080 04a5 D0040000 		.4byte	0x4d0
 1081 04a9 13       		.uleb128 0x13
 1082 04aa 68040000 		.4byte	0x468
 1083 04ae 26000000 		.4byte	.LBB4
 1084 04b2 00000000 		.4byte	.Ldebug_ranges0+0
 1085 04b6 01       		.byte	0x1
 1086 04b7 C2       		.byte	0xc2
 1087 04b8 14       		.uleb128 0x14
 1088 04b9 00000000 		.4byte	.Ldebug_ranges0+0
 1089 04bd 15       		.uleb128 0x15
 1090 04be 76040000 		.4byte	0x476
 1091 04c2 02       		.byte	0x2
 1092 04c3 91       		.byte	0x91
 1093 04c4 70       		.sleb128 -16
 1094 04c5 15       		.uleb128 0x15
 1095 04c6 82040000 		.4byte	0x482
 1096 04ca 02       		.byte	0x2
 1097 04cb 91       		.byte	0x91
 1098 04cc 74       		.sleb128 -12
 1099 04cd 00       		.byte	0
 1100 04ce 00       		.byte	0
 1101 04cf 00       		.byte	0
 1102 04d0 12       		.uleb128 0x12
 1103 04d1 01       		.byte	0x1
ARM GAS  /tmp/ccgHyjwV.s 			page 28


 1104 04d2 1B000000 		.4byte	.LASF57
 1105 04d6 01       		.byte	0x1
 1106 04d7 F1       		.byte	0xf1
 1107 04d8 01       		.byte	0x1
 1108 04d9 14010000 		.4byte	.LFB57
 1109 04dd A4010000 		.4byte	.LFE57
 1110 04e1 2C000000 		.4byte	.LLST1
 1111 04e5 01       		.byte	0x1
 1112 04e6 36050000 		.4byte	0x536
 1113 04ea 16       		.uleb128 0x16
 1114 04eb 746D7000 		.ascii	"tmp\000"
 1115 04ef 01       		.byte	0x1
 1116 04f0 F3       		.byte	0xf3
 1117 04f1 69000000 		.4byte	0x69
 1118 04f5 4C000000 		.4byte	.LLST2
 1119 04f9 17       		.uleb128 0x17
 1120 04fa 1C010000 		.4byte	.LASF58
 1121 04fe 01       		.byte	0x1
 1122 04ff F3       		.byte	0xf3
 1123 0500 69000000 		.4byte	0x69
 1124 0504 AB000000 		.4byte	.LLST3
 1125 0508 17       		.uleb128 0x17
 1126 0509 AD000000 		.4byte	.LASF59
 1127 050d 01       		.byte	0x1
 1128 050e F3       		.byte	0xf3
 1129 050f 69000000 		.4byte	0x69
 1130 0513 E7000000 		.4byte	.LLST4
 1131 0517 17       		.uleb128 0x17
 1132 0518 12010000 		.4byte	.LASF60
 1133 051c 01       		.byte	0x1
 1134 051d F3       		.byte	0xf3
 1135 051e 69000000 		.4byte	0x69
 1136 0522 23010000 		.4byte	.LLST5
 1137 0526 17       		.uleb128 0x17
 1138 0527 09000000 		.4byte	.LASF61
 1139 052b 01       		.byte	0x1
 1140 052c F3       		.byte	0xf3
 1141 052d 69000000 		.4byte	0x69
 1142 0531 43010000 		.4byte	.LLST6
 1143 0535 00       		.byte	0
 1144 0536 18       		.uleb128 0x18
 1145 0537 87020000 		.4byte	.LASF62
 1146 053b 03       		.byte	0x3
 1147 053c 1606     		.2byte	0x616
 1148 053e 44050000 		.4byte	0x544
 1149 0542 01       		.byte	0x1
 1150 0543 01       		.byte	0x1
 1151 0544 05       		.uleb128 0x5
 1152 0545 57000000 		.4byte	0x57
 1153 0549 19       		.uleb128 0x19
 1154 054a EE010000 		.4byte	.LASF63
 1155 054e 01       		.byte	0x1
 1156 054f 8F       		.byte	0x8f
 1157 0550 69000000 		.4byte	0x69
 1158 0554 01       		.byte	0x1
 1159 0555 05       		.byte	0x5
 1160 0556 03       		.byte	0x3
ARM GAS  /tmp/ccgHyjwV.s 			page 29


 1161 0557 00000000 		.4byte	SystemCoreClock
 1162 055b 0A       		.uleb128 0xa
 1163 055c 2C000000 		.4byte	0x2c
 1164 0560 6B050000 		.4byte	0x56b
 1165 0564 0B       		.uleb128 0xb
 1166 0565 97000000 		.4byte	0x97
 1167 0569 08       		.byte	0x8
 1168 056a 00       		.byte	0
 1169 056b 19       		.uleb128 0x19
 1170 056c 5F020000 		.4byte	.LASF64
 1171 0570 01       		.byte	0x1
 1172 0571 90       		.byte	0x90
 1173 0572 7D050000 		.4byte	0x57d
 1174 0576 01       		.byte	0x1
 1175 0577 05       		.byte	0x5
 1176 0578 03       		.byte	0x3
 1177 0579 00000000 		.4byte	PLLMulTable
 1178 057d 09       		.uleb128 0x9
 1179 057e 82050000 		.4byte	0x582
 1180 0582 05       		.uleb128 0x5
 1181 0583 5B050000 		.4byte	0x55b
 1182 0587 0A       		.uleb128 0xa
 1183 0588 2C000000 		.4byte	0x2c
 1184 058c 97050000 		.4byte	0x597
 1185 0590 0B       		.uleb128 0xb
 1186 0591 97000000 		.4byte	0x97
 1187 0595 0F       		.byte	0xf
 1188 0596 00       		.byte	0
 1189 0597 19       		.uleb128 0x19
 1190 0598 08020000 		.4byte	.LASF65
 1191 059c 01       		.byte	0x1
 1192 059d 91       		.byte	0x91
 1193 059e A9050000 		.4byte	0x5a9
 1194 05a2 01       		.byte	0x1
 1195 05a3 05       		.byte	0x5
 1196 05a4 03       		.byte	0x3
 1197 05a5 00000000 		.4byte	AHBPrescTable
 1198 05a9 09       		.uleb128 0x9
 1199 05aa AE050000 		.4byte	0x5ae
 1200 05ae 05       		.uleb128 0x5
 1201 05af 87050000 		.4byte	0x587
 1202 05b3 00       		.byte	0
 1203              		.section	.debug_abbrev,"",%progbits
 1204              	.Ldebug_abbrev0:
 1205 0000 01       		.uleb128 0x1
 1206 0001 11       		.uleb128 0x11
 1207 0002 01       		.byte	0x1
 1208 0003 25       		.uleb128 0x25
 1209 0004 0E       		.uleb128 0xe
 1210 0005 13       		.uleb128 0x13
 1211 0006 0B       		.uleb128 0xb
 1212 0007 03       		.uleb128 0x3
 1213 0008 0E       		.uleb128 0xe
 1214 0009 1B       		.uleb128 0x1b
 1215 000a 0E       		.uleb128 0xe
 1216 000b 11       		.uleb128 0x11
 1217 000c 01       		.uleb128 0x1
ARM GAS  /tmp/ccgHyjwV.s 			page 30


 1218 000d 12       		.uleb128 0x12
 1219 000e 01       		.uleb128 0x1
 1220 000f 10       		.uleb128 0x10
 1221 0010 06       		.uleb128 0x6
 1222 0011 00       		.byte	0
 1223 0012 00       		.byte	0
 1224 0013 02       		.uleb128 0x2
 1225 0014 24       		.uleb128 0x24
 1226 0015 00       		.byte	0
 1227 0016 0B       		.uleb128 0xb
 1228 0017 0B       		.uleb128 0xb
 1229 0018 3E       		.uleb128 0x3e
 1230 0019 0B       		.uleb128 0xb
 1231 001a 03       		.uleb128 0x3
 1232 001b 0E       		.uleb128 0xe
 1233 001c 00       		.byte	0
 1234 001d 00       		.byte	0
 1235 001e 03       		.uleb128 0x3
 1236 001f 16       		.uleb128 0x16
 1237 0020 00       		.byte	0
 1238 0021 03       		.uleb128 0x3
 1239 0022 0E       		.uleb128 0xe
 1240 0023 3A       		.uleb128 0x3a
 1241 0024 0B       		.uleb128 0xb
 1242 0025 3B       		.uleb128 0x3b
 1243 0026 0B       		.uleb128 0xb
 1244 0027 49       		.uleb128 0x49
 1245 0028 13       		.uleb128 0x13
 1246 0029 00       		.byte	0
 1247 002a 00       		.byte	0
 1248 002b 04       		.uleb128 0x4
 1249 002c 24       		.uleb128 0x24
 1250 002d 00       		.byte	0
 1251 002e 0B       		.uleb128 0xb
 1252 002f 0B       		.uleb128 0xb
 1253 0030 3E       		.uleb128 0x3e
 1254 0031 0B       		.uleb128 0xb
 1255 0032 03       		.uleb128 0x3
 1256 0033 08       		.uleb128 0x8
 1257 0034 00       		.byte	0
 1258 0035 00       		.byte	0
 1259 0036 05       		.uleb128 0x5
 1260 0037 35       		.uleb128 0x35
 1261 0038 00       		.byte	0
 1262 0039 49       		.uleb128 0x49
 1263 003a 13       		.uleb128 0x13
 1264 003b 00       		.byte	0
 1265 003c 00       		.byte	0
 1266 003d 06       		.uleb128 0x6
 1267 003e 13       		.uleb128 0x13
 1268 003f 01       		.byte	0x1
 1269 0040 0B       		.uleb128 0xb
 1270 0041 0B       		.uleb128 0xb
 1271 0042 3A       		.uleb128 0x3a
 1272 0043 0B       		.uleb128 0xb
 1273 0044 3B       		.uleb128 0x3b
 1274 0045 05       		.uleb128 0x5
ARM GAS  /tmp/ccgHyjwV.s 			page 31


 1275 0046 01       		.uleb128 0x1
 1276 0047 13       		.uleb128 0x13
 1277 0048 00       		.byte	0
 1278 0049 00       		.byte	0
 1279 004a 07       		.uleb128 0x7
 1280 004b 0D       		.uleb128 0xd
 1281 004c 00       		.byte	0
 1282 004d 03       		.uleb128 0x3
 1283 004e 0E       		.uleb128 0xe
 1284 004f 3A       		.uleb128 0x3a
 1285 0050 0B       		.uleb128 0xb
 1286 0051 3B       		.uleb128 0x3b
 1287 0052 05       		.uleb128 0x5
 1288 0053 49       		.uleb128 0x49
 1289 0054 13       		.uleb128 0x13
 1290 0055 38       		.uleb128 0x38
 1291 0056 0A       		.uleb128 0xa
 1292 0057 00       		.byte	0
 1293 0058 00       		.byte	0
 1294 0059 08       		.uleb128 0x8
 1295 005a 0D       		.uleb128 0xd
 1296 005b 00       		.byte	0
 1297 005c 03       		.uleb128 0x3
 1298 005d 08       		.uleb128 0x8
 1299 005e 3A       		.uleb128 0x3a
 1300 005f 0B       		.uleb128 0xb
 1301 0060 3B       		.uleb128 0x3b
 1302 0061 05       		.uleb128 0x5
 1303 0062 49       		.uleb128 0x49
 1304 0063 13       		.uleb128 0x13
 1305 0064 38       		.uleb128 0x38
 1306 0065 0A       		.uleb128 0xa
 1307 0066 00       		.byte	0
 1308 0067 00       		.byte	0
 1309 0068 09       		.uleb128 0x9
 1310 0069 26       		.uleb128 0x26
 1311 006a 00       		.byte	0
 1312 006b 49       		.uleb128 0x49
 1313 006c 13       		.uleb128 0x13
 1314 006d 00       		.byte	0
 1315 006e 00       		.byte	0
 1316 006f 0A       		.uleb128 0xa
 1317 0070 01       		.uleb128 0x1
 1318 0071 01       		.byte	0x1
 1319 0072 49       		.uleb128 0x49
 1320 0073 13       		.uleb128 0x13
 1321 0074 01       		.uleb128 0x1
 1322 0075 13       		.uleb128 0x13
 1323 0076 00       		.byte	0
 1324 0077 00       		.byte	0
 1325 0078 0B       		.uleb128 0xb
 1326 0079 21       		.uleb128 0x21
 1327 007a 00       		.byte	0
 1328 007b 49       		.uleb128 0x49
 1329 007c 13       		.uleb128 0x13
 1330 007d 2F       		.uleb128 0x2f
 1331 007e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccgHyjwV.s 			page 32


 1332 007f 00       		.byte	0
 1333 0080 00       		.byte	0
 1334 0081 0C       		.uleb128 0xc
 1335 0082 16       		.uleb128 0x16
 1336 0083 00       		.byte	0
 1337 0084 03       		.uleb128 0x3
 1338 0085 0E       		.uleb128 0xe
 1339 0086 3A       		.uleb128 0x3a
 1340 0087 0B       		.uleb128 0xb
 1341 0088 3B       		.uleb128 0x3b
 1342 0089 05       		.uleb128 0x5
 1343 008a 49       		.uleb128 0x49
 1344 008b 13       		.uleb128 0x13
 1345 008c 00       		.byte	0
 1346 008d 00       		.byte	0
 1347 008e 0D       		.uleb128 0xd
 1348 008f 04       		.uleb128 0x4
 1349 0090 01       		.byte	0x1
 1350 0091 0B       		.uleb128 0xb
 1351 0092 0B       		.uleb128 0xb
 1352 0093 3A       		.uleb128 0x3a
 1353 0094 0B       		.uleb128 0xb
 1354 0095 3B       		.uleb128 0x3b
 1355 0096 05       		.uleb128 0x5
 1356 0097 01       		.uleb128 0x1
 1357 0098 13       		.uleb128 0x13
 1358 0099 00       		.byte	0
 1359 009a 00       		.byte	0
 1360 009b 0E       		.uleb128 0xe
 1361 009c 28       		.uleb128 0x28
 1362 009d 00       		.byte	0
 1363 009e 03       		.uleb128 0x3
 1364 009f 0E       		.uleb128 0xe
 1365 00a0 1C       		.uleb128 0x1c
 1366 00a1 0D       		.uleb128 0xd
 1367 00a2 00       		.byte	0
 1368 00a3 00       		.byte	0
 1369 00a4 0F       		.uleb128 0xf
 1370 00a5 28       		.uleb128 0x28
 1371 00a6 00       		.byte	0
 1372 00a7 03       		.uleb128 0x3
 1373 00a8 08       		.uleb128 0x8
 1374 00a9 1C       		.uleb128 0x1c
 1375 00aa 0D       		.uleb128 0xd
 1376 00ab 00       		.byte	0
 1377 00ac 00       		.byte	0
 1378 00ad 10       		.uleb128 0x10
 1379 00ae 2E       		.uleb128 0x2e
 1380 00af 01       		.byte	0x1
 1381 00b0 03       		.uleb128 0x3
 1382 00b1 0E       		.uleb128 0xe
 1383 00b2 3A       		.uleb128 0x3a
 1384 00b3 0B       		.uleb128 0xb
 1385 00b4 3B       		.uleb128 0x3b
 1386 00b5 05       		.uleb128 0x5
 1387 00b6 27       		.uleb128 0x27
 1388 00b7 0C       		.uleb128 0xc
ARM GAS  /tmp/ccgHyjwV.s 			page 33


 1389 00b8 20       		.uleb128 0x20
 1390 00b9 0B       		.uleb128 0xb
 1391 00ba 01       		.uleb128 0x1
 1392 00bb 13       		.uleb128 0x13
 1393 00bc 00       		.byte	0
 1394 00bd 00       		.byte	0
 1395 00be 11       		.uleb128 0x11
 1396 00bf 34       		.uleb128 0x34
 1397 00c0 00       		.byte	0
 1398 00c1 03       		.uleb128 0x3
 1399 00c2 0E       		.uleb128 0xe
 1400 00c3 3A       		.uleb128 0x3a
 1401 00c4 0B       		.uleb128 0xb
 1402 00c5 3B       		.uleb128 0x3b
 1403 00c6 05       		.uleb128 0x5
 1404 00c7 49       		.uleb128 0x49
 1405 00c8 13       		.uleb128 0x13
 1406 00c9 00       		.byte	0
 1407 00ca 00       		.byte	0
 1408 00cb 12       		.uleb128 0x12
 1409 00cc 2E       		.uleb128 0x2e
 1410 00cd 01       		.byte	0x1
 1411 00ce 3F       		.uleb128 0x3f
 1412 00cf 0C       		.uleb128 0xc
 1413 00d0 03       		.uleb128 0x3
 1414 00d1 0E       		.uleb128 0xe
 1415 00d2 3A       		.uleb128 0x3a
 1416 00d3 0B       		.uleb128 0xb
 1417 00d4 3B       		.uleb128 0x3b
 1418 00d5 0B       		.uleb128 0xb
 1419 00d6 27       		.uleb128 0x27
 1420 00d7 0C       		.uleb128 0xc
 1421 00d8 11       		.uleb128 0x11
 1422 00d9 01       		.uleb128 0x1
 1423 00da 12       		.uleb128 0x12
 1424 00db 01       		.uleb128 0x1
 1425 00dc 40       		.uleb128 0x40
 1426 00dd 06       		.uleb128 0x6
 1427 00de 9742     		.uleb128 0x2117
 1428 00e0 0C       		.uleb128 0xc
 1429 00e1 01       		.uleb128 0x1
 1430 00e2 13       		.uleb128 0x13
 1431 00e3 00       		.byte	0
 1432 00e4 00       		.byte	0
 1433 00e5 13       		.uleb128 0x13
 1434 00e6 1D       		.uleb128 0x1d
 1435 00e7 01       		.byte	0x1
 1436 00e8 31       		.uleb128 0x31
 1437 00e9 13       		.uleb128 0x13
 1438 00ea 52       		.uleb128 0x52
 1439 00eb 01       		.uleb128 0x1
 1440 00ec 55       		.uleb128 0x55
 1441 00ed 06       		.uleb128 0x6
 1442 00ee 58       		.uleb128 0x58
 1443 00ef 0B       		.uleb128 0xb
 1444 00f0 59       		.uleb128 0x59
 1445 00f1 0B       		.uleb128 0xb
ARM GAS  /tmp/ccgHyjwV.s 			page 34


 1446 00f2 00       		.byte	0
 1447 00f3 00       		.byte	0
 1448 00f4 14       		.uleb128 0x14
 1449 00f5 0B       		.uleb128 0xb
 1450 00f6 01       		.byte	0x1
 1451 00f7 55       		.uleb128 0x55
 1452 00f8 06       		.uleb128 0x6
 1453 00f9 00       		.byte	0
 1454 00fa 00       		.byte	0
 1455 00fb 15       		.uleb128 0x15
 1456 00fc 34       		.uleb128 0x34
 1457 00fd 00       		.byte	0
 1458 00fe 31       		.uleb128 0x31
 1459 00ff 13       		.uleb128 0x13
 1460 0100 02       		.uleb128 0x2
 1461 0101 0A       		.uleb128 0xa
 1462 0102 00       		.byte	0
 1463 0103 00       		.byte	0
 1464 0104 16       		.uleb128 0x16
 1465 0105 34       		.uleb128 0x34
 1466 0106 00       		.byte	0
 1467 0107 03       		.uleb128 0x3
 1468 0108 08       		.uleb128 0x8
 1469 0109 3A       		.uleb128 0x3a
 1470 010a 0B       		.uleb128 0xb
 1471 010b 3B       		.uleb128 0x3b
 1472 010c 0B       		.uleb128 0xb
 1473 010d 49       		.uleb128 0x49
 1474 010e 13       		.uleb128 0x13
 1475 010f 02       		.uleb128 0x2
 1476 0110 06       		.uleb128 0x6
 1477 0111 00       		.byte	0
 1478 0112 00       		.byte	0
 1479 0113 17       		.uleb128 0x17
 1480 0114 34       		.uleb128 0x34
 1481 0115 00       		.byte	0
 1482 0116 03       		.uleb128 0x3
 1483 0117 0E       		.uleb128 0xe
 1484 0118 3A       		.uleb128 0x3a
 1485 0119 0B       		.uleb128 0xb
 1486 011a 3B       		.uleb128 0x3b
 1487 011b 0B       		.uleb128 0xb
 1488 011c 49       		.uleb128 0x49
 1489 011d 13       		.uleb128 0x13
 1490 011e 02       		.uleb128 0x2
 1491 011f 06       		.uleb128 0x6
 1492 0120 00       		.byte	0
 1493 0121 00       		.byte	0
 1494 0122 18       		.uleb128 0x18
 1495 0123 34       		.uleb128 0x34
 1496 0124 00       		.byte	0
 1497 0125 03       		.uleb128 0x3
 1498 0126 0E       		.uleb128 0xe
 1499 0127 3A       		.uleb128 0x3a
 1500 0128 0B       		.uleb128 0xb
 1501 0129 3B       		.uleb128 0x3b
 1502 012a 05       		.uleb128 0x5
ARM GAS  /tmp/ccgHyjwV.s 			page 35


 1503 012b 49       		.uleb128 0x49
 1504 012c 13       		.uleb128 0x13
 1505 012d 3F       		.uleb128 0x3f
 1506 012e 0C       		.uleb128 0xc
 1507 012f 3C       		.uleb128 0x3c
 1508 0130 0C       		.uleb128 0xc
 1509 0131 00       		.byte	0
 1510 0132 00       		.byte	0
 1511 0133 19       		.uleb128 0x19
 1512 0134 34       		.uleb128 0x34
 1513 0135 00       		.byte	0
 1514 0136 03       		.uleb128 0x3
 1515 0137 0E       		.uleb128 0xe
 1516 0138 3A       		.uleb128 0x3a
 1517 0139 0B       		.uleb128 0xb
 1518 013a 3B       		.uleb128 0x3b
 1519 013b 0B       		.uleb128 0xb
 1520 013c 49       		.uleb128 0x49
 1521 013d 13       		.uleb128 0x13
 1522 013e 3F       		.uleb128 0x3f
 1523 013f 0C       		.uleb128 0xc
 1524 0140 02       		.uleb128 0x2
 1525 0141 0A       		.uleb128 0xa
 1526 0142 00       		.byte	0
 1527 0143 00       		.byte	0
 1528 0144 00       		.byte	0
 1529              		.section	.debug_loc,"",%progbits
 1530              	.Ldebug_loc0:
 1531              	.LLST0:
 1532 0000 00000000 		.4byte	.LFB56-.Ltext0
 1533 0004 04000000 		.4byte	.LCFI0-.Ltext0
 1534 0008 0200     		.2byte	0x2
 1535 000a 7D       		.byte	0x7d
 1536 000b 00       		.sleb128 0
 1537 000c 04000000 		.4byte	.LCFI0-.Ltext0
 1538 0010 1A000000 		.4byte	.LCFI1-.Ltext0
 1539 0014 0200     		.2byte	0x2
 1540 0016 7D       		.byte	0x7d
 1541 0017 08       		.sleb128 8
 1542 0018 1A000000 		.4byte	.LCFI1-.Ltext0
 1543 001c 14010000 		.4byte	.LFE56-.Ltext0
 1544 0020 0200     		.2byte	0x2
 1545 0022 7D       		.byte	0x7d
 1546 0023 10       		.sleb128 16
 1547 0024 00000000 		.4byte	0
 1548 0028 00000000 		.4byte	0
 1549              	.LLST1:
 1550 002c 14010000 		.4byte	.LFB57-.Ltext0
 1551 0030 18010000 		.4byte	.LCFI2-.Ltext0
 1552 0034 0200     		.2byte	0x2
 1553 0036 7D       		.byte	0x7d
 1554 0037 00       		.sleb128 0
 1555 0038 18010000 		.4byte	.LCFI2-.Ltext0
 1556 003c A4010000 		.4byte	.LFE57-.Ltext0
 1557 0040 0200     		.2byte	0x2
 1558 0042 7D       		.byte	0x7d
 1559 0043 04       		.sleb128 4
ARM GAS  /tmp/ccgHyjwV.s 			page 36


 1560 0044 00000000 		.4byte	0
 1561 0048 00000000 		.4byte	0
 1562              	.LLST2:
 1563 004c 14010000 		.4byte	.LVL0-.Ltext0
 1564 0050 1A010000 		.4byte	.LVL1-.Ltext0
 1565 0054 0200     		.2byte	0x2
 1566 0056 30       		.byte	0x30
 1567 0057 9F       		.byte	0x9f
 1568 0058 1A010000 		.4byte	.LVL1-.Ltext0
 1569 005c 1E010000 		.4byte	.LVL2-.Ltext0
 1570 0060 0500     		.2byte	0x5
 1571 0062 73       		.byte	0x73
 1572 0063 00       		.sleb128 0
 1573 0064 3C       		.byte	0x3c
 1574 0065 1A       		.byte	0x1a
 1575 0066 9F       		.byte	0x9f
 1576 0067 1E010000 		.4byte	.LVL2-.Ltext0
 1577 006b 36010000 		.4byte	.LVL3-.Ltext0
 1578 006f 0100     		.2byte	0x1
 1579 0071 53       		.byte	0x53
 1580 0072 58010000 		.4byte	.LVL7-.Ltext0
 1581 0076 5E010000 		.4byte	.LVL8-.Ltext0
 1582 007a 0600     		.2byte	0x6
 1583 007c 71       		.byte	0x71
 1584 007d 00       		.sleb128 0
 1585 007e 08       		.byte	0x8
 1586 007f FF       		.byte	0xff
 1587 0080 1A       		.byte	0x1a
 1588 0081 9F       		.byte	0x9f
 1589 0082 5E010000 		.4byte	.LVL8-.Ltext0
 1590 0086 62010000 		.4byte	.LVL9-.Ltext0
 1591 008a 0100     		.2byte	0x1
 1592 008c 53       		.byte	0x53
 1593 008d 64010000 		.4byte	.LVL10-.Ltext0
 1594 0091 68010000 		.4byte	.LVL11-.Ltext0
 1595 0095 0100     		.2byte	0x1
 1596 0097 53       		.byte	0x53
 1597 0098 6A010000 		.4byte	.LVL12-.Ltext0
 1598 009c 6E010000 		.4byte	.LVL13-.Ltext0
 1599 00a0 0100     		.2byte	0x1
 1600 00a2 53       		.byte	0x53
 1601 00a3 00000000 		.4byte	0
 1602 00a7 00000000 		.4byte	0
 1603              	.LLST3:
 1604 00ab 14010000 		.4byte	.LVL0-.Ltext0
 1605 00af 48010000 		.4byte	.LVL6-.Ltext0
 1606 00b3 0200     		.2byte	0x2
 1607 00b5 30       		.byte	0x30
 1608 00b6 9F       		.byte	0x9f
 1609 00b7 5E010000 		.4byte	.LVL8-.Ltext0
 1610 00bb 70010000 		.4byte	.LVL14-.Ltext0
 1611 00bf 0200     		.2byte	0x2
 1612 00c1 30       		.byte	0x30
 1613 00c2 9F       		.byte	0x9f
 1614 00c3 70010000 		.4byte	.LVL14-.Ltext0
 1615 00c7 76010000 		.4byte	.LVL16-.Ltext0
 1616 00cb 0700     		.2byte	0x7
ARM GAS  /tmp/ccgHyjwV.s 			page 37


 1617 00cd 72       		.byte	0x72
 1618 00ce 00       		.sleb128 0
 1619 00cf 4E       		.byte	0x4e
 1620 00d0 41       		.byte	0x41
 1621 00d1 24       		.byte	0x24
 1622 00d2 1A       		.byte	0x1a
 1623 00d3 9F       		.byte	0x9f
 1624 00d4 7C010000 		.4byte	.LVL17-.Ltext0
 1625 00d8 8C010000 		.4byte	.LVL18-.Ltext0
 1626 00dc 0100     		.2byte	0x1
 1627 00de 52       		.byte	0x52
 1628 00df 00000000 		.4byte	0
 1629 00e3 00000000 		.4byte	0
 1630              	.LLST4:
 1631 00e7 14010000 		.4byte	.LVL0-.Ltext0
 1632 00eb 48010000 		.4byte	.LVL6-.Ltext0
 1633 00ef 0200     		.2byte	0x2
 1634 00f1 30       		.byte	0x30
 1635 00f2 9F       		.byte	0x9f
 1636 00f3 5E010000 		.4byte	.LVL8-.Ltext0
 1637 00f7 72010000 		.4byte	.LVL15-.Ltext0
 1638 00fb 0200     		.2byte	0x2
 1639 00fd 30       		.byte	0x30
 1640 00fe 9F       		.byte	0x9f
 1641 00ff 72010000 		.4byte	.LVL15-.Ltext0
 1642 0103 8E010000 		.4byte	.LVL19-.Ltext0
 1643 0107 0700     		.2byte	0x7
 1644 0109 74       		.byte	0x74
 1645 010a 00       		.sleb128 0
 1646 010b 48       		.byte	0x48
 1647 010c 43       		.byte	0x43
 1648 010d 24       		.byte	0x24
 1649 010e 1A       		.byte	0x1a
 1650 010f 9F       		.byte	0x9f
 1651 0110 8E010000 		.4byte	.LVL19-.Ltext0
 1652 0114 A4010000 		.4byte	.LFE57-.Ltext0
 1653 0118 0100     		.2byte	0x1
 1654 011a 51       		.byte	0x51
 1655 011b 00000000 		.4byte	0
 1656 011f 00000000 		.4byte	0
 1657              	.LLST5:
 1658 0123 14010000 		.4byte	.LVL0-.Ltext0
 1659 0127 48010000 		.4byte	.LVL6-.Ltext0
 1660 012b 0200     		.2byte	0x2
 1661 012d 30       		.byte	0x30
 1662 012e 9F       		.byte	0x9f
 1663 012f 5E010000 		.4byte	.LVL8-.Ltext0
 1664 0133 8E010000 		.4byte	.LVL19-.Ltext0
 1665 0137 0200     		.2byte	0x2
 1666 0139 30       		.byte	0x30
 1667 013a 9F       		.byte	0x9f
 1668 013b 00000000 		.4byte	0
 1669 013f 00000000 		.4byte	0
 1670              	.LLST6:
 1671 0143 14010000 		.4byte	.LVL0-.Ltext0
 1672 0147 3C010000 		.4byte	.LVL4-.Ltext0
 1673 014b 0200     		.2byte	0x2
ARM GAS  /tmp/ccgHyjwV.s 			page 38


 1674 014d 30       		.byte	0x30
 1675 014e 9F       		.byte	0x9f
 1676 014f 3C010000 		.4byte	.LVL4-.Ltext0
 1677 0153 42010000 		.4byte	.LVL5-.Ltext0
 1678 0157 0900     		.2byte	0x9
 1679 0159 72       		.byte	0x72
 1680 015a 00       		.sleb128 0
 1681 015b 0A       		.byte	0xa
 1682 015c 00E0     		.2byte	0xe000
 1683 015e 1A       		.byte	0x1a
 1684 015f 3D       		.byte	0x3d
 1685 0160 25       		.byte	0x25
 1686 0161 9F       		.byte	0x9f
 1687 0162 5E010000 		.4byte	.LVL8-.Ltext0
 1688 0166 A4010000 		.4byte	.LFE57-.Ltext0
 1689 016a 0200     		.2byte	0x2
 1690 016c 30       		.byte	0x30
 1691 016d 9F       		.byte	0x9f
 1692 016e 00000000 		.4byte	0
 1693 0172 00000000 		.4byte	0
 1694              		.section	.debug_aranges,"",%progbits
 1695 0000 1C000000 		.4byte	0x1c
 1696 0004 0200     		.2byte	0x2
 1697 0006 00000000 		.4byte	.Ldebug_info0
 1698 000a 04       		.byte	0x4
 1699 000b 00       		.byte	0
 1700 000c 0000     		.2byte	0
 1701 000e 0000     		.2byte	0
 1702 0010 00000000 		.4byte	.Ltext0
 1703 0014 A4010000 		.4byte	.Letext0-.Ltext0
 1704 0018 00000000 		.4byte	0
 1705 001c 00000000 		.4byte	0
 1706              		.section	.debug_ranges,"",%progbits
 1707              	.Ldebug_ranges0:
 1708 0000 26000000 		.4byte	.LBB4-.Ltext0
 1709 0004 28000000 		.4byte	.LBE4-.Ltext0
 1710 0008 38000000 		.4byte	.LBB8-.Ltext0
 1711 000c 70000000 		.4byte	.LBE8-.Ltext0
 1712 0010 7E000000 		.4byte	.LBB9-.Ltext0
 1713 0014 14010000 		.4byte	.LBE9-.Ltext0
 1714 0018 00000000 		.4byte	0
 1715 001c 00000000 		.4byte	0
 1716              		.section	.debug_line,"",%progbits
 1717              	.Ldebug_line0:
 1718 0000 38010000 		.section	.debug_str,"MS",%progbits,1
 1718      02009100 
 1718      00000201 
 1718      FB0E0D00 
 1718      01010101 
 1719              	.LASF46:
 1720 0000 41504231 		.ascii	"APB1RSTR\000"
 1720      52535452 
 1720      00
 1721              	.LASF61:
 1722 0009 6D736972 		.ascii	"msirange\000"
 1722      616E6765 
 1722      00
ARM GAS  /tmp/ccgHyjwV.s 			page 39


 1723              	.LASF13:
 1724 0012 73697A65 		.ascii	"sizetype\000"
 1724      74797065 
 1724      00
 1725              	.LASF57:
 1726 001b 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1726      656D436F 
 1726      7265436C 
 1726      6F636B55 
 1726      70646174 
 1727              	.LASF41:
 1728 0031 5057525F 		.ascii	"PWR_TypeDef\000"
 1728      54797065 
 1728      44656600 
 1729              	.LASF32:
 1730 003d 50444B45 		.ascii	"PDKEYR\000"
 1730      595200
 1731              	.LASF50:
 1732 0044 4148424C 		.ascii	"AHBLPENR\000"
 1732      50454E52 
 1732      00
 1733              	.LASF42:
 1734 004d 49435343 		.ascii	"ICSCR\000"
 1734      5200
 1735              	.LASF14:
 1736 0053 43505549 		.ascii	"CPUID\000"
 1736      4400
 1737              	.LASF27:
 1738 0059 52455345 		.ascii	"RESERVED0\000"
 1738      52564544 
 1738      3000
 1739              	.LASF43:
 1740 0063 43464752 		.ascii	"CFGR\000"
 1740      00
 1741              	.LASF3:
 1742 0068 75696E74 		.ascii	"uint8_t\000"
 1742      385F7400 
 1743              	.LASF49:
 1744 0070 41504231 		.ascii	"APB1ENR\000"
 1744      454E5200 
 1745              	.LASF2:
 1746 0078 73686F72 		.ascii	"short int\000"
 1746      7420696E 
 1746      7400
 1747              	.LASF48:
 1748 0082 41504232 		.ascii	"APB2ENR\000"
 1748      454E5200 
 1749              	.LASF15:
 1750 008a 49435352 		.ascii	"ICSR\000"
 1750      00
 1751              	.LASF35:
 1752 008f 4F50544B 		.ascii	"OPTKEYR\000"
 1752      45595200 
 1753              	.LASF44:
 1754 0097 41484252 		.ascii	"AHBRSTR\000"
 1754      53545200 
 1755              	.LASF10:
ARM GAS  /tmp/ccgHyjwV.s 			page 40


 1756 009f 6C6F6E67 		.ascii	"long long int\000"
 1756      206C6F6E 
 1756      6720696E 
 1756      7400
 1757              	.LASF59:
 1758 00ad 706C6C64 		.ascii	"plldiv\000"
 1758      697600
 1759              	.LASF23:
 1760 00b4 42464152 		.ascii	"BFAR\000"
 1760      00
 1761              	.LASF55:
 1762 00b9 48534953 		.ascii	"HSIStatus\000"
 1762      74617475 
 1762      7300
 1763              	.LASF7:
 1764 00c3 6C6F6E67 		.ascii	"long int\000"
 1764      20696E74 
 1764      00
 1765              	.LASF53:
 1766 00cc 5243435F 		.ascii	"RCC_TypeDef\000"
 1766      54797065 
 1766      44656600 
 1767              	.LASF47:
 1768 00d8 41484245 		.ascii	"AHBENR\000"
 1768      4E5200
 1769              	.LASF45:
 1770 00df 41504232 		.ascii	"APB2RSTR\000"
 1770      52535452 
 1770      00
 1771              	.LASF36:
 1772 00e8 57525052 		.ascii	"WRPR\000"
 1772      00
 1773              	.LASF19:
 1774 00ed 43465352 		.ascii	"CFSR\000"
 1774      00
 1775              	.LASF68:
 1776 00f2 2F686F6D 		.ascii	"/home/zbanks/hackboard/firmware\000"
 1776      652F7A62 
 1776      616E6B73 
 1776      2F686163 
 1776      6B626F61 
 1777              	.LASF60:
 1778 0112 706C6C73 		.ascii	"pllsource\000"
 1778      6F757263 
 1778      6500
 1779              	.LASF58:
 1780 011c 706C6C6D 		.ascii	"pllmul\000"
 1780      756C00
 1781              	.LASF1:
 1782 0123 756E7369 		.ascii	"unsigned char\000"
 1782      676E6564 
 1782      20636861 
 1782      7200
 1783              	.LASF17:
 1784 0131 41495243 		.ascii	"AIRCR\000"
 1784      5200
 1785              	.LASF29:
ARM GAS  /tmp/ccgHyjwV.s 			page 41


 1786 0137 5343425F 		.ascii	"SCB_Type\000"
 1786      54797065 
 1786      00
 1787              	.LASF33:
 1788 0140 50454B45 		.ascii	"PEKEYR\000"
 1788      595200
 1789              	.LASF54:
 1790 0147 53746172 		.ascii	"StartUpCounter\000"
 1790      74557043 
 1790      6F756E74 
 1790      657200
 1791              	.LASF0:
 1792 0156 7369676E 		.ascii	"signed char\000"
 1792      65642063 
 1792      68617200 
 1793              	.LASF11:
 1794 0162 6C6F6E67 		.ascii	"long long unsigned int\000"
 1794      206C6F6E 
 1794      6720756E 
 1794      7369676E 
 1794      65642069 
 1795              	.LASF8:
 1796 0179 75696E74 		.ascii	"uint32_t\000"
 1796      33325F74 
 1796      00
 1797              	.LASF12:
 1798 0182 756E7369 		.ascii	"unsigned int\000"
 1798      676E6564 
 1798      20696E74 
 1798      00
 1799              	.LASF4:
 1800 018f 75696E74 		.ascii	"uint16_t\000"
 1800      31365F74 
 1800      00
 1801              	.LASF18:
 1802 0198 53484353 		.ascii	"SHCSR\000"
 1802      5200
 1803              	.LASF22:
 1804 019e 4D4D4641 		.ascii	"MMFAR\000"
 1804      5200
 1805              	.LASF56:
 1806 01a4 53797374 		.ascii	"SystemInit\000"
 1806      656D496E 
 1806      697400
 1807              	.LASF5:
 1808 01af 73686F72 		.ascii	"short unsigned int\000"
 1808      7420756E 
 1808      7369676E 
 1808      65642069 
 1808      6E7400
 1809              	.LASF52:
 1810 01c2 41504231 		.ascii	"APB1LPENR\000"
 1810      4C50454E 
 1810      5200
 1811              	.LASF31:
 1812 01cc 50454352 		.ascii	"PECR\000"
 1812      00
ARM GAS  /tmp/ccgHyjwV.s 			page 42


 1813              	.LASF38:
 1814 01d1 57525052 		.ascii	"WRPR1\000"
 1814      3100
 1815              	.LASF16:
 1816 01d7 56544F52 		.ascii	"VTOR\000"
 1816      00
 1817              	.LASF6:
 1818 01dc 696E7433 		.ascii	"int32_t\000"
 1818      325F7400 
 1819              	.LASF26:
 1820 01e4 49534152 		.ascii	"ISAR\000"
 1820      00
 1821              	.LASF21:
 1822 01e9 44465352 		.ascii	"DFSR\000"
 1822      00
 1823              	.LASF63:
 1824 01ee 53797374 		.ascii	"SystemCoreClock\000"
 1824      656D436F 
 1824      7265436C 
 1824      6F636B00 
 1825              	.LASF20:
 1826 01fe 48465352 		.ascii	"HFSR\000"
 1826      00
 1827              	.LASF25:
 1828 0203 4D4D4652 		.ascii	"MMFR\000"
 1828      00
 1829              	.LASF65:
 1830 0208 41484250 		.ascii	"AHBPrescTable\000"
 1830      72657363 
 1830      5461626C 
 1830      6500
 1831              	.LASF69:
 1832 0216 53657453 		.ascii	"SetSysClock\000"
 1832      7973436C 
 1832      6F636B00 
 1833              	.LASF9:
 1834 0222 6C6F6E67 		.ascii	"long unsigned int\000"
 1834      20756E73 
 1834      69676E65 
 1834      6420696E 
 1834      7400
 1835              	.LASF67:
 1836 0234 7372632F 		.ascii	"src/system_stm32l1xx.c\000"
 1836      73797374 
 1836      656D5F73 
 1836      746D3332 
 1836      6C317878 
 1837              	.LASF34:
 1838 024b 5052474B 		.ascii	"PRGKEYR\000"
 1838      45595200 
 1839              	.LASF30:
 1840 0253 52455345 		.ascii	"RESET\000"
 1840      5400
 1841              	.LASF39:
 1842 0259 57525052 		.ascii	"WRPR2\000"
 1842      3200
 1843              	.LASF64:
ARM GAS  /tmp/ccgHyjwV.s 			page 43


 1844 025f 504C4C4D 		.ascii	"PLLMulTable\000"
 1844      756C5461 
 1844      626C6500 
 1845              	.LASF24:
 1846 026b 41465352 		.ascii	"AFSR\000"
 1846      00
 1847              	.LASF37:
 1848 0270 52455345 		.ascii	"RESERVED\000"
 1848      52564544 
 1848      00
 1849              	.LASF40:
 1850 0279 464C4153 		.ascii	"FLASH_TypeDef\000"
 1850      485F5479 
 1850      70654465 
 1850      6600
 1851              	.LASF62:
 1852 0287 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1852      52784275 
 1852      66666572 
 1852      00
 1853              	.LASF28:
 1854 0294 43504143 		.ascii	"CPACR\000"
 1854      5200
 1855              	.LASF51:
 1856 029a 41504232 		.ascii	"APB2LPENR\000"
 1856      4C50454E 
 1856      5200
 1857              	.LASF66:
 1858 02a4 474E5520 		.ascii	"GNU C 4.8.3 20131129 (release) [ARM/embedded-4_8-br"
 1858      4320342E 
 1858      382E3320 
 1858      32303133 
 1858      31313239 
 1859 02d7 616E6368 		.ascii	"anch revision 205641] -mcpu=cortex-m3 -mthumb -g -g"
 1859      20726576 
 1859      6973696F 
 1859      6E203230 
 1859      35363431 
 1860 030a 64776172 		.ascii	"dwarf-2 -O3 -std=c99 -fomit-frame-pointer\000"
 1860      662D3220 
 1860      2D4F3320 
 1860      2D737464 
 1860      3D633939 
 1861              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20131129 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccgHyjwV.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l1xx.c
     /tmp/ccgHyjwV.s:73     .text:00000000 $t
     /tmp/ccgHyjwV.s:78     .text:00000000 SystemInit
     /tmp/ccgHyjwV.s:276    .text:00000100 $d
     /tmp/ccgHyjwV.s:286    .text:00000114 $t
     /tmp/ccgHyjwV.s:291    .text:00000114 SystemCoreClockUpdate
     /tmp/ccgHyjwV.s:316    .text:00000126 $d
     /tmp/ccgHyjwV.s:419    .text:00000194 $d
     /tmp/ccgHyjwV.s:447    .data:0000000c AHBPrescTable
     /tmp/ccgHyjwV.s:434    .data:00000000 PLLMulTable
     /tmp/ccgHyjwV.s:466    .data:0000001c SystemCoreClock
     /tmp/ccgHyjwV.s:430    .data:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccgHyjwV.s:329    .text:00000133 $d
     /tmp/ccgHyjwV.s:329    .text:00000134 $t

NO UNDEFINED SYMBOLS
