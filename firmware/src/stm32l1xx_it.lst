ARM GAS  /tmp/ccLyDO9R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"stm32l1xx_it.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.3 20131129 (release) [ARM/embedded-4_8-
  15              	@	compiled by GNU C version 4.3.6, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc
  18              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Device/ST/STM32F0xx/Include
  19              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/CMSIS/Include
  20              	@ -I /home/zbanks//STM32L1xx_StdPeriph_Lib_V1.2.0/Libraries/STM32L1xx_StdPeriph_Driver/inc
  21              	@ -I ./inc -imultilib armv7-m
  22              	@ -iprefix /home/zbanks/gcc-arm-none-eabi/bin/../lib/gcc/arm-none-eabi/4.8.3/
  23              	@ -isysroot /home/zbanks/gcc-arm-none-eabi/bin/../arm-none-eabi
  24              	@ -MD src/stm32l1xx_it.d -MF .dep/stm32l1xx_it.o.d -MP
  25              	@ -MQ src/stm32l1xx_it.o -D__USES_INITFINI__ -D STM32L1XX
  26              	@ -D USE_STDPERIPH_DRIVER -D malloc_getpagesize=256 -D RUN_FROM_FLASH=1
  27              	@ src/stm32l1xx_it.c -mcpu=cortex-m3 -mthumb
  28              	@ -auxbase-strip src/stm32l1xx_it.o -g -gdwarf-2 -O3 -Wall
  29              	@ -Wstrict-prototypes -std=c99 -fomit-frame-pointer -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  31              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  32              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  33              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  34              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  35              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm
  36              	@ -fgnu-runtime -fguess-branch-probability -fhoist-adjacent-loads -fident
  37              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  38              	@ -finline-atomics -finline-functions -finline-functions-called-once
  39              	@ -finline-small-functions -fipa-cp -fipa-cp-clone -fipa-profile
  40              	@ -fipa-pure-const -fipa-reference -fipa-sra -fira-hoist-pressure
  41              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  42              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  44              	@ -foptimize-register-move -foptimize-sibling-calls -foptimize-strlen
  45              	@ -fpartial-inlining -fpeephole -fpeephole2 -fpredictive-commoning
  46              	@ -fprefetch-loop-arrays -freg-struct-return -fregmove -freorder-blocks
  47              	@ -freorder-functions -frerun-cse-after-loop
  48              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  49              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  50              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  51              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  52              	@ -fschedule-insns2 -fsection-anchors -fshow-column -fshrink-wrap
  53              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  54              	@ -fstrict-aliasing -fstrict-overflow -fstrict-volatile-bitfields
  55              	@ -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
  56              	@ -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
  57              	@ -ftree-coalesce-vars -ftree-copy-prop -ftree-copyrename -ftree-cselim
ARM GAS  /tmp/ccLyDO9R.s 			page 2


  58              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  59              	@ -ftree-loop-distribute-patterns -ftree-loop-if-convert -ftree-loop-im
  60              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
  61              	@ -ftree-partial-pre -ftree-phiprop -ftree-pre -ftree-pta -ftree-reassoc
  62              	@ -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize -ftree-slsr -ftree-sra
  63              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  64              	@ -ftree-vect-loop-version -ftree-vectorize -ftree-vrp -funit-at-a-time
  65              	@ -funswitch-loops -fvar-tracking -fvar-tracking-assignments
  66              	@ -fvect-cost-model -fverbose-asm -fzero-initialized-in-bss
  67              	@ -mfix-cortex-m3-ldrd -mlittle-endian -mpic-data-is-text-relative
  68              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	2
  74              		.global	NMI_Handler
  75              		.thumb
  76              		.thumb_func
  77              		.type	NMI_Handler, %function
  78              	NMI_Handler:
  79              	.LFB56:
  80              		.file 1 "src/stm32l1xx_it.c"
   1:src/stm32l1xx_it.c **** /**
   2:src/stm32l1xx_it.c ****   ******************************************************************************
   3:src/stm32l1xx_it.c ****   * @file    stm32l1xx_it.c
   4:src/stm32l1xx_it.c ****   * @author  MCD Application Team
   5:src/stm32l1xx_it.c ****   * @version V1.0.0
   6:src/stm32l1xx_it.c ****   * @date    29-July-2013
   7:src/stm32l1xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:src/stm32l1xx_it.c ****   *          This file provides template for all exceptions handler and
   9:src/stm32l1xx_it.c ****   *          peripherals interrupt service routine.
  10:src/stm32l1xx_it.c ****   ******************************************************************************
  11:src/stm32l1xx_it.c ****   * @attention
  12:src/stm32l1xx_it.c ****   *
  13:src/stm32l1xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  14:src/stm32l1xx_it.c ****   *
  15:src/stm32l1xx_it.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  16:src/stm32l1xx_it.c ****   * You may not use this file except in compliance with the License.
  17:src/stm32l1xx_it.c ****   * You may obtain a copy of the License at:
  18:src/stm32l1xx_it.c ****   *
  19:src/stm32l1xx_it.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  20:src/stm32l1xx_it.c ****   *
  21:src/stm32l1xx_it.c ****   * Unless required by applicable law or agreed to in writing, software
  22:src/stm32l1xx_it.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
  23:src/stm32l1xx_it.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  24:src/stm32l1xx_it.c ****   * See the License for the specific language governing permissions and
  25:src/stm32l1xx_it.c ****   * limitations under the License.
  26:src/stm32l1xx_it.c ****   *
  27:src/stm32l1xx_it.c ****   ******************************************************************************
  28:src/stm32l1xx_it.c ****   */
  29:src/stm32l1xx_it.c **** 
  30:src/stm32l1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  31:src/stm32l1xx_it.c **** #include "stm32l1xx_it.h"
  32:src/stm32l1xx_it.c **** #include "main.h"
  33:src/stm32l1xx_it.c **** 
  34:src/stm32l1xx_it.c **** /** @addtogroup STM32L100C-Discovery_Demo
ARM GAS  /tmp/ccLyDO9R.s 			page 3


  35:src/stm32l1xx_it.c ****   * @{
  36:src/stm32l1xx_it.c ****   */
  37:src/stm32l1xx_it.c **** 
  38:src/stm32l1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  39:src/stm32l1xx_it.c **** /* Private define ------------------------------------------------------------*/
  40:src/stm32l1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:src/stm32l1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  42:src/stm32l1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  43:src/stm32l1xx_it.c **** /* Private functions ---------------------------------------------------------*/
  44:src/stm32l1xx_it.c **** 
  45:src/stm32l1xx_it.c **** /******************************************************************************/
  46:src/stm32l1xx_it.c **** /*            Cortex-M3 Processor Exceptions Handlers                         */
  47:src/stm32l1xx_it.c **** /******************************************************************************/
  48:src/stm32l1xx_it.c **** 
  49:src/stm32l1xx_it.c **** /**
  50:src/stm32l1xx_it.c ****   * @brief  This function handles NMI exception.
  51:src/stm32l1xx_it.c ****   * @param  None
  52:src/stm32l1xx_it.c ****   * @retval None
  53:src/stm32l1xx_it.c ****   */
  54:src/stm32l1xx_it.c **** void NMI_Handler(void)
  55:src/stm32l1xx_it.c **** {
  81              		.loc 1 55 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 7047     		bx	lr	@
  87              		.cfi_endproc
  88              	.LFE56:
  89              		.size	NMI_Handler, .-NMI_Handler
  90 0002 00BF     		.align	2
  91              		.global	HardFault_Handler
  92              		.thumb
  93              		.thumb_func
  94              		.type	HardFault_Handler, %function
  95              	HardFault_Handler:
  96              	.LFB57:
  56:src/stm32l1xx_it.c **** }
  57:src/stm32l1xx_it.c **** 
  58:src/stm32l1xx_it.c **** /**
  59:src/stm32l1xx_it.c ****   * @brief  This function handles Hard Fault exception.
  60:src/stm32l1xx_it.c ****   * @param  None
  61:src/stm32l1xx_it.c ****   * @retval None
  62:src/stm32l1xx_it.c ****   */
  63:src/stm32l1xx_it.c **** void HardFault_Handler(void)
  64:src/stm32l1xx_it.c **** {
  97              		.loc 1 64 0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L3:
 104 0004 FEE7     		b	.L3	@
 105              		.cfi_endproc
 106              	.LFE57:
 107              		.size	HardFault_Handler, .-HardFault_Handler
ARM GAS  /tmp/ccLyDO9R.s 			page 4


 108 0006 00BF     		.align	2
 109              		.global	MemManage_Handler
 110              		.thumb
 111              		.thumb_func
 112              		.type	MemManage_Handler, %function
 113              	MemManage_Handler:
 114              	.LFB58:
  65:src/stm32l1xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  66:src/stm32l1xx_it.c ****   while (1)
  67:src/stm32l1xx_it.c ****   {
  68:src/stm32l1xx_it.c ****   }
  69:src/stm32l1xx_it.c **** }
  70:src/stm32l1xx_it.c **** 
  71:src/stm32l1xx_it.c **** /**
  72:src/stm32l1xx_it.c ****   * @brief  This function handles Memory Manage exception.
  73:src/stm32l1xx_it.c ****   * @param  None
  74:src/stm32l1xx_it.c ****   * @retval None
  75:src/stm32l1xx_it.c ****   */
  76:src/stm32l1xx_it.c **** void MemManage_Handler(void)
  77:src/stm32l1xx_it.c **** {
 115              		.loc 1 77 0
 116              		.cfi_startproc
 117              		@ Volatile: function does not return.
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.L5:
 122 0008 FEE7     		b	.L5	@
 123              		.cfi_endproc
 124              	.LFE58:
 125              		.size	MemManage_Handler, .-MemManage_Handler
 126 000a 00BF     		.align	2
 127              		.global	BusFault_Handler
 128              		.thumb
 129              		.thumb_func
 130              		.type	BusFault_Handler, %function
 131              	BusFault_Handler:
 132              	.LFB59:
  78:src/stm32l1xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  79:src/stm32l1xx_it.c ****   while (1)
  80:src/stm32l1xx_it.c ****   {
  81:src/stm32l1xx_it.c ****   }
  82:src/stm32l1xx_it.c **** }
  83:src/stm32l1xx_it.c **** 
  84:src/stm32l1xx_it.c **** /**
  85:src/stm32l1xx_it.c ****   * @brief  This function handles Bus Fault exception.
  86:src/stm32l1xx_it.c ****   * @param  None
  87:src/stm32l1xx_it.c ****   * @retval None
  88:src/stm32l1xx_it.c ****   */
  89:src/stm32l1xx_it.c **** void BusFault_Handler(void)
  90:src/stm32l1xx_it.c **** {
 133              		.loc 1 90 0
 134              		.cfi_startproc
 135              		@ Volatile: function does not return.
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
ARM GAS  /tmp/ccLyDO9R.s 			page 5


 139              	.L7:
 140 000c FEE7     		b	.L7	@
 141              		.cfi_endproc
 142              	.LFE59:
 143              		.size	BusFault_Handler, .-BusFault_Handler
 144 000e 00BF     		.align	2
 145              		.global	UsageFault_Handler
 146              		.thumb
 147              		.thumb_func
 148              		.type	UsageFault_Handler, %function
 149              	UsageFault_Handler:
 150              	.LFB60:
  91:src/stm32l1xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  92:src/stm32l1xx_it.c ****   while (1)
  93:src/stm32l1xx_it.c ****   {
  94:src/stm32l1xx_it.c ****   }
  95:src/stm32l1xx_it.c **** }
  96:src/stm32l1xx_it.c **** 
  97:src/stm32l1xx_it.c **** /**
  98:src/stm32l1xx_it.c ****   * @brief  This function handles Usage Fault exception.
  99:src/stm32l1xx_it.c ****   * @param  None
 100:src/stm32l1xx_it.c ****   * @retval None
 101:src/stm32l1xx_it.c ****   */
 102:src/stm32l1xx_it.c **** void UsageFault_Handler(void)
 103:src/stm32l1xx_it.c **** {
 151              		.loc 1 103 0
 152              		.cfi_startproc
 153              		@ Volatile: function does not return.
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.L9:
 158 0010 FEE7     		b	.L9	@
 159              		.cfi_endproc
 160              	.LFE60:
 161              		.size	UsageFault_Handler, .-UsageFault_Handler
 162 0012 00BF     		.align	2
 163              		.global	SVC_Handler
 164              		.thumb
 165              		.thumb_func
 166              		.type	SVC_Handler, %function
 167              	SVC_Handler:
 168              	.LFB61:
 104:src/stm32l1xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 105:src/stm32l1xx_it.c ****   while (1)
 106:src/stm32l1xx_it.c ****   {
 107:src/stm32l1xx_it.c ****   }
 108:src/stm32l1xx_it.c **** }
 109:src/stm32l1xx_it.c **** 
 110:src/stm32l1xx_it.c **** /**
 111:src/stm32l1xx_it.c ****   * @brief  This function handles SVCall exception.
 112:src/stm32l1xx_it.c ****   * @param  None
 113:src/stm32l1xx_it.c ****   * @retval None
 114:src/stm32l1xx_it.c ****   */
 115:src/stm32l1xx_it.c **** void SVC_Handler(void)
 116:src/stm32l1xx_it.c **** {
 169              		.loc 1 116 0
ARM GAS  /tmp/ccLyDO9R.s 			page 6


 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0014 7047     		bx	lr	@
 175              		.cfi_endproc
 176              	.LFE61:
 177              		.size	SVC_Handler, .-SVC_Handler
 178 0016 00BF     		.align	2
 179              		.global	DebugMon_Handler
 180              		.thumb
 181              		.thumb_func
 182              		.type	DebugMon_Handler, %function
 183              	DebugMon_Handler:
 184              	.LFB62:
 117:src/stm32l1xx_it.c **** }
 118:src/stm32l1xx_it.c **** 
 119:src/stm32l1xx_it.c **** /**
 120:src/stm32l1xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 121:src/stm32l1xx_it.c ****   * @param  None
 122:src/stm32l1xx_it.c ****   * @retval None
 123:src/stm32l1xx_it.c ****   */
 124:src/stm32l1xx_it.c **** void DebugMon_Handler(void)
 125:src/stm32l1xx_it.c **** {
 185              		.loc 1 125 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 0018 7047     		bx	lr	@
 191              		.cfi_endproc
 192              	.LFE62:
 193              		.size	DebugMon_Handler, .-DebugMon_Handler
 194 001a 00BF     		.align	2
 195              		.global	PendSV_Handler
 196              		.thumb
 197              		.thumb_func
 198              		.type	PendSV_Handler, %function
 199              	PendSV_Handler:
 200              	.LFB63:
 126:src/stm32l1xx_it.c **** }
 127:src/stm32l1xx_it.c **** 
 128:src/stm32l1xx_it.c **** /**
 129:src/stm32l1xx_it.c ****   * @brief  This function handles PendSVC exception.
 130:src/stm32l1xx_it.c ****   * @param  None
 131:src/stm32l1xx_it.c ****   * @retval None
 132:src/stm32l1xx_it.c ****   */
 133:src/stm32l1xx_it.c **** void PendSV_Handler(void)
 134:src/stm32l1xx_it.c **** {
 201              		.loc 1 134 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 001c 7047     		bx	lr	@
 207              		.cfi_endproc
 208              	.LFE63:
ARM GAS  /tmp/ccLyDO9R.s 			page 7


 209              		.size	PendSV_Handler, .-PendSV_Handler
 210 001e 00BF     		.align	2
 211              		.global	SysTick_Handler
 212              		.thumb
 213              		.thumb_func
 214              		.type	SysTick_Handler, %function
 215              	SysTick_Handler:
 216              	.LFB64:
 135:src/stm32l1xx_it.c **** }
 136:src/stm32l1xx_it.c **** 
 137:src/stm32l1xx_it.c **** /**
 138:src/stm32l1xx_it.c ****   * @brief  This function handles SysTick Handler.
 139:src/stm32l1xx_it.c ****   * @param  None
 140:src/stm32l1xx_it.c ****   * @retval None
 141:src/stm32l1xx_it.c ****   */
 142:src/stm32l1xx_it.c **** void SysTick_Handler(void)
 143:src/stm32l1xx_it.c **** {
 217              		.loc 1 143 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 144:src/stm32l1xx_it.c ****   TimingDelay_Decrement();
 222              		.loc 1 144 0
 223 0020 FFF7FEBF 		b	TimingDelay_Decrement	@
 224              	.LVL0:
 225              		.cfi_endproc
 226              	.LFE64:
 227              		.size	SysTick_Handler, .-SysTick_Handler
 228              	.Letext0:
 229              		.file 2 "/home/zbanks/gcc-arm-none-eabi/arm-none-eabi/include/stdint.h"
 230              		.file 3 "./inc/core_cm3.h"
 231              		.file 4 "./inc/main.h"
 232              		.section	.debug_info,"",%progbits
 233              	.Ldebug_info0:
 234 0000 63010000 		.4byte	0x163
 235 0004 0200     		.2byte	0x2
 236 0006 00000000 		.4byte	.Ldebug_abbrev0
 237 000a 04       		.byte	0x4
 238 000b 01       		.uleb128 0x1
 239 000c 1D010000 		.4byte	.LASF18
 240 0010 01       		.byte	0x1
 241 0011 46000000 		.4byte	.LASF19
 242 0015 A6000000 		.4byte	.LASF20
 243 0019 00000000 		.4byte	.Ltext0
 244 001d 24000000 		.4byte	.Letext0
 245 0021 00000000 		.4byte	.Ldebug_line0
 246 0025 02       		.uleb128 0x2
 247 0026 01       		.byte	0x1
 248 0027 06       		.byte	0x6
 249 0028 BA010000 		.4byte	.LASF0
 250 002c 02       		.uleb128 0x2
 251 002d 01       		.byte	0x1
 252 002e 08       		.byte	0x8
 253 002f E4000000 		.4byte	.LASF1
 254 0033 02       		.uleb128 0x2
 255 0034 02       		.byte	0x2
ARM GAS  /tmp/ccLyDO9R.s 			page 8


 256 0035 05       		.byte	0x5
 257 0036 F0010000 		.4byte	.LASF2
 258 003a 02       		.uleb128 0x2
 259 003b 02       		.byte	0x2
 260 003c 07       		.byte	0x7
 261 003d 0E000000 		.4byte	.LASF3
 262 0041 03       		.uleb128 0x3
 263 0042 FA010000 		.4byte	.LASF21
 264 0046 02       		.byte	0x2
 265 0047 4F       		.byte	0x4f
 266 0048 4C000000 		.4byte	0x4c
 267 004c 02       		.uleb128 0x2
 268 004d 04       		.byte	0x4
 269 004e 05       		.byte	0x5
 270 004f 14010000 		.4byte	.LASF4
 271 0053 02       		.uleb128 0x2
 272 0054 04       		.byte	0x4
 273 0055 07       		.byte	0x7
 274 0056 6C000000 		.4byte	.LASF5
 275 005a 02       		.uleb128 0x2
 276 005b 08       		.byte	0x8
 277 005c 05       		.byte	0x5
 278 005d 00000000 		.4byte	.LASF6
 279 0061 02       		.uleb128 0x2
 280 0062 08       		.byte	0x8
 281 0063 07       		.byte	0x7
 282 0064 8F000000 		.4byte	.LASF7
 283 0068 04       		.uleb128 0x4
 284 0069 04       		.byte	0x4
 285 006a 05       		.byte	0x5
 286 006b 696E7400 		.ascii	"int\000"
 287 006f 02       		.uleb128 0x2
 288 0070 04       		.byte	0x4
 289 0071 07       		.byte	0x7
 290 0072 C6010000 		.4byte	.LASF8
 291 0076 02       		.uleb128 0x2
 292 0077 04       		.byte	0x4
 293 0078 07       		.byte	0x7
 294 0079 02020000 		.4byte	.LASF9
 295 007d 05       		.uleb128 0x5
 296 007e 01       		.byte	0x1
 297 007f D8000000 		.4byte	.LASF10
 298 0083 01       		.byte	0x1
 299 0084 36       		.byte	0x36
 300 0085 01       		.byte	0x1
 301 0086 00000000 		.4byte	.LFB56
 302 008a 02000000 		.4byte	.LFE56
 303 008e 02       		.byte	0x2
 304 008f 7D       		.byte	0x7d
 305 0090 00       		.sleb128 0
 306 0091 01       		.byte	0x1
 307 0092 05       		.uleb128 0x5
 308 0093 01       		.byte	0x1
 309 0094 C6000000 		.4byte	.LASF11
 310 0098 01       		.byte	0x1
 311 0099 3F       		.byte	0x3f
 312 009a 01       		.byte	0x1
ARM GAS  /tmp/ccLyDO9R.s 			page 9


 313 009b 04000000 		.4byte	.LFB57
 314 009f 06000000 		.4byte	.LFE57
 315 00a3 02       		.byte	0x2
 316 00a4 7D       		.byte	0x7d
 317 00a5 00       		.sleb128 0
 318 00a6 01       		.byte	0x1
 319 00a7 05       		.uleb128 0x5
 320 00a8 01       		.byte	0x1
 321 00a9 F2000000 		.4byte	.LASF12
 322 00ad 01       		.byte	0x1
 323 00ae 4C       		.byte	0x4c
 324 00af 01       		.byte	0x1
 325 00b0 08000000 		.4byte	.LFB58
 326 00b4 0A000000 		.4byte	.LFE58
 327 00b8 02       		.byte	0x2
 328 00b9 7D       		.byte	0x7d
 329 00ba 00       		.sleb128 0
 330 00bb 01       		.byte	0x1
 331 00bc 05       		.uleb128 0x5
 332 00bd 01       		.byte	0x1
 333 00be 7E000000 		.4byte	.LASF13
 334 00c2 01       		.byte	0x1
 335 00c3 59       		.byte	0x59
 336 00c4 01       		.byte	0x1
 337 00c5 0C000000 		.4byte	.LFB59
 338 00c9 0E000000 		.4byte	.LFE59
 339 00cd 02       		.byte	0x2
 340 00ce 7D       		.byte	0x7d
 341 00cf 00       		.sleb128 0
 342 00d0 01       		.byte	0x1
 343 00d1 05       		.uleb128 0x5
 344 00d2 01       		.byte	0x1
 345 00d3 59000000 		.4byte	.LASF14
 346 00d7 01       		.byte	0x1
 347 00d8 66       		.byte	0x66
 348 00d9 01       		.byte	0x1
 349 00da 10000000 		.4byte	.LFB60
 350 00de 12000000 		.4byte	.LFE60
 351 00e2 02       		.byte	0x2
 352 00e3 7D       		.byte	0x7d
 353 00e4 00       		.sleb128 0
 354 00e5 01       		.byte	0x1
 355 00e6 05       		.uleb128 0x5
 356 00e7 01       		.byte	0x1
 357 00e8 D3010000 		.4byte	.LASF15
 358 00ec 01       		.byte	0x1
 359 00ed 73       		.byte	0x73
 360 00ee 01       		.byte	0x1
 361 00ef 14000000 		.4byte	.LFB61
 362 00f3 16000000 		.4byte	.LFE61
 363 00f7 02       		.byte	0x2
 364 00f8 7D       		.byte	0x7d
 365 00f9 00       		.sleb128 0
 366 00fa 01       		.byte	0x1
 367 00fb 05       		.uleb128 0x5
 368 00fc 01       		.byte	0x1
 369 00fd DF010000 		.4byte	.LASF16
ARM GAS  /tmp/ccLyDO9R.s 			page 10


 370 0101 01       		.byte	0x1
 371 0102 7C       		.byte	0x7c
 372 0103 01       		.byte	0x1
 373 0104 18000000 		.4byte	.LFB62
 374 0108 1A000000 		.4byte	.LFE62
 375 010c 02       		.byte	0x2
 376 010d 7D       		.byte	0x7d
 377 010e 00       		.sleb128 0
 378 010f 01       		.byte	0x1
 379 0110 05       		.uleb128 0x5
 380 0111 01       		.byte	0x1
 381 0112 37000000 		.4byte	.LASF17
 382 0116 01       		.byte	0x1
 383 0117 85       		.byte	0x85
 384 0118 01       		.byte	0x1
 385 0119 1C000000 		.4byte	.LFB63
 386 011d 1E000000 		.4byte	.LFE63
 387 0121 02       		.byte	0x2
 388 0122 7D       		.byte	0x7d
 389 0123 00       		.sleb128 0
 390 0124 01       		.byte	0x1
 391 0125 06       		.uleb128 0x6
 392 0126 01       		.byte	0x1
 393 0127 04010000 		.4byte	.LASF22
 394 012b 01       		.byte	0x1
 395 012c 8E       		.byte	0x8e
 396 012d 01       		.byte	0x1
 397 012e 20000000 		.4byte	.LFB64
 398 0132 24000000 		.4byte	.LFE64
 399 0136 02       		.byte	0x2
 400 0137 7D       		.byte	0x7d
 401 0138 00       		.sleb128 0
 402 0139 01       		.byte	0x1
 403 013a 49010000 		.4byte	0x149
 404 013e 07       		.uleb128 0x7
 405 013f 24000000 		.4byte	.LVL0
 406 0143 01       		.byte	0x1
 407 0144 5C010000 		.4byte	0x15c
 408 0148 00       		.byte	0
 409 0149 08       		.uleb128 0x8
 410 014a AD010000 		.4byte	.LASF23
 411 014e 03       		.byte	0x3
 412 014f 1606     		.2byte	0x616
 413 0151 57010000 		.4byte	0x157
 414 0155 01       		.byte	0x1
 415 0156 01       		.byte	0x1
 416 0157 09       		.uleb128 0x9
 417 0158 41000000 		.4byte	0x41
 418 015c 0A       		.uleb128 0xa
 419 015d 01       		.byte	0x1
 420 015e 21000000 		.4byte	.LASF24
 421 0162 04       		.byte	0x4
 422 0163 29       		.byte	0x29
 423 0164 01       		.byte	0x1
 424 0165 01       		.byte	0x1
 425 0166 00       		.byte	0
 426              		.section	.debug_abbrev,"",%progbits
ARM GAS  /tmp/ccLyDO9R.s 			page 11


 427              	.Ldebug_abbrev0:
 428 0000 01       		.uleb128 0x1
 429 0001 11       		.uleb128 0x11
 430 0002 01       		.byte	0x1
 431 0003 25       		.uleb128 0x25
 432 0004 0E       		.uleb128 0xe
 433 0005 13       		.uleb128 0x13
 434 0006 0B       		.uleb128 0xb
 435 0007 03       		.uleb128 0x3
 436 0008 0E       		.uleb128 0xe
 437 0009 1B       		.uleb128 0x1b
 438 000a 0E       		.uleb128 0xe
 439 000b 11       		.uleb128 0x11
 440 000c 01       		.uleb128 0x1
 441 000d 12       		.uleb128 0x12
 442 000e 01       		.uleb128 0x1
 443 000f 10       		.uleb128 0x10
 444 0010 06       		.uleb128 0x6
 445 0011 00       		.byte	0
 446 0012 00       		.byte	0
 447 0013 02       		.uleb128 0x2
 448 0014 24       		.uleb128 0x24
 449 0015 00       		.byte	0
 450 0016 0B       		.uleb128 0xb
 451 0017 0B       		.uleb128 0xb
 452 0018 3E       		.uleb128 0x3e
 453 0019 0B       		.uleb128 0xb
 454 001a 03       		.uleb128 0x3
 455 001b 0E       		.uleb128 0xe
 456 001c 00       		.byte	0
 457 001d 00       		.byte	0
 458 001e 03       		.uleb128 0x3
 459 001f 16       		.uleb128 0x16
 460 0020 00       		.byte	0
 461 0021 03       		.uleb128 0x3
 462 0022 0E       		.uleb128 0xe
 463 0023 3A       		.uleb128 0x3a
 464 0024 0B       		.uleb128 0xb
 465 0025 3B       		.uleb128 0x3b
 466 0026 0B       		.uleb128 0xb
 467 0027 49       		.uleb128 0x49
 468 0028 13       		.uleb128 0x13
 469 0029 00       		.byte	0
 470 002a 00       		.byte	0
 471 002b 04       		.uleb128 0x4
 472 002c 24       		.uleb128 0x24
 473 002d 00       		.byte	0
 474 002e 0B       		.uleb128 0xb
 475 002f 0B       		.uleb128 0xb
 476 0030 3E       		.uleb128 0x3e
 477 0031 0B       		.uleb128 0xb
 478 0032 03       		.uleb128 0x3
 479 0033 08       		.uleb128 0x8
 480 0034 00       		.byte	0
 481 0035 00       		.byte	0
 482 0036 05       		.uleb128 0x5
 483 0037 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccLyDO9R.s 			page 12


 484 0038 00       		.byte	0
 485 0039 3F       		.uleb128 0x3f
 486 003a 0C       		.uleb128 0xc
 487 003b 03       		.uleb128 0x3
 488 003c 0E       		.uleb128 0xe
 489 003d 3A       		.uleb128 0x3a
 490 003e 0B       		.uleb128 0xb
 491 003f 3B       		.uleb128 0x3b
 492 0040 0B       		.uleb128 0xb
 493 0041 27       		.uleb128 0x27
 494 0042 0C       		.uleb128 0xc
 495 0043 11       		.uleb128 0x11
 496 0044 01       		.uleb128 0x1
 497 0045 12       		.uleb128 0x12
 498 0046 01       		.uleb128 0x1
 499 0047 40       		.uleb128 0x40
 500 0048 0A       		.uleb128 0xa
 501 0049 9742     		.uleb128 0x2117
 502 004b 0C       		.uleb128 0xc
 503 004c 00       		.byte	0
 504 004d 00       		.byte	0
 505 004e 06       		.uleb128 0x6
 506 004f 2E       		.uleb128 0x2e
 507 0050 01       		.byte	0x1
 508 0051 3F       		.uleb128 0x3f
 509 0052 0C       		.uleb128 0xc
 510 0053 03       		.uleb128 0x3
 511 0054 0E       		.uleb128 0xe
 512 0055 3A       		.uleb128 0x3a
 513 0056 0B       		.uleb128 0xb
 514 0057 3B       		.uleb128 0x3b
 515 0058 0B       		.uleb128 0xb
 516 0059 27       		.uleb128 0x27
 517 005a 0C       		.uleb128 0xc
 518 005b 11       		.uleb128 0x11
 519 005c 01       		.uleb128 0x1
 520 005d 12       		.uleb128 0x12
 521 005e 01       		.uleb128 0x1
 522 005f 40       		.uleb128 0x40
 523 0060 0A       		.uleb128 0xa
 524 0061 9742     		.uleb128 0x2117
 525 0063 0C       		.uleb128 0xc
 526 0064 01       		.uleb128 0x1
 527 0065 13       		.uleb128 0x13
 528 0066 00       		.byte	0
 529 0067 00       		.byte	0
 530 0068 07       		.uleb128 0x7
 531 0069 898201   		.uleb128 0x4109
 532 006c 00       		.byte	0
 533 006d 11       		.uleb128 0x11
 534 006e 01       		.uleb128 0x1
 535 006f 9542     		.uleb128 0x2115
 536 0071 0C       		.uleb128 0xc
 537 0072 31       		.uleb128 0x31
 538 0073 13       		.uleb128 0x13
 539 0074 00       		.byte	0
 540 0075 00       		.byte	0
ARM GAS  /tmp/ccLyDO9R.s 			page 13


 541 0076 08       		.uleb128 0x8
 542 0077 34       		.uleb128 0x34
 543 0078 00       		.byte	0
 544 0079 03       		.uleb128 0x3
 545 007a 0E       		.uleb128 0xe
 546 007b 3A       		.uleb128 0x3a
 547 007c 0B       		.uleb128 0xb
 548 007d 3B       		.uleb128 0x3b
 549 007e 05       		.uleb128 0x5
 550 007f 49       		.uleb128 0x49
 551 0080 13       		.uleb128 0x13
 552 0081 3F       		.uleb128 0x3f
 553 0082 0C       		.uleb128 0xc
 554 0083 3C       		.uleb128 0x3c
 555 0084 0C       		.uleb128 0xc
 556 0085 00       		.byte	0
 557 0086 00       		.byte	0
 558 0087 09       		.uleb128 0x9
 559 0088 35       		.uleb128 0x35
 560 0089 00       		.byte	0
 561 008a 49       		.uleb128 0x49
 562 008b 13       		.uleb128 0x13
 563 008c 00       		.byte	0
 564 008d 00       		.byte	0
 565 008e 0A       		.uleb128 0xa
 566 008f 2E       		.uleb128 0x2e
 567 0090 00       		.byte	0
 568 0091 3F       		.uleb128 0x3f
 569 0092 0C       		.uleb128 0xc
 570 0093 03       		.uleb128 0x3
 571 0094 0E       		.uleb128 0xe
 572 0095 3A       		.uleb128 0x3a
 573 0096 0B       		.uleb128 0xb
 574 0097 3B       		.uleb128 0x3b
 575 0098 0B       		.uleb128 0xb
 576 0099 27       		.uleb128 0x27
 577 009a 0C       		.uleb128 0xc
 578 009b 3C       		.uleb128 0x3c
 579 009c 0C       		.uleb128 0xc
 580 009d 00       		.byte	0
 581 009e 00       		.byte	0
 582 009f 00       		.byte	0
 583              		.section	.debug_aranges,"",%progbits
 584 0000 1C000000 		.4byte	0x1c
 585 0004 0200     		.2byte	0x2
 586 0006 00000000 		.4byte	.Ldebug_info0
 587 000a 04       		.byte	0x4
 588 000b 00       		.byte	0
 589 000c 0000     		.2byte	0
 590 000e 0000     		.2byte	0
 591 0010 00000000 		.4byte	.Ltext0
 592 0014 24000000 		.4byte	.Letext0-.Ltext0
 593 0018 00000000 		.4byte	0
 594 001c 00000000 		.4byte	0
 595              		.section	.debug_line,"",%progbits
 596              	.Ldebug_line0:
 597 0000 B6000000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  /tmp/ccLyDO9R.s 			page 14


 597      02008800 
 597      00000201 
 597      FB0E0D00 
 597      01010101 
 598              	.LASF6:
 599 0000 6C6F6E67 		.ascii	"long long int\000"
 599      206C6F6E 
 599      6720696E 
 599      7400
 600              	.LASF3:
 601 000e 73686F72 		.ascii	"short unsigned int\000"
 601      7420756E 
 601      7369676E 
 601      65642069 
 601      6E7400
 602              	.LASF24:
 603 0021 54696D69 		.ascii	"TimingDelay_Decrement\000"
 603      6E674465 
 603      6C61795F 
 603      44656372 
 603      656D656E 
 604              	.LASF17:
 605 0037 50656E64 		.ascii	"PendSV_Handler\000"
 605      53565F48 
 605      616E646C 
 605      657200
 606              	.LASF19:
 607 0046 7372632F 		.ascii	"src/stm32l1xx_it.c\000"
 607      73746D33 
 607      326C3178 
 607      785F6974 
 607      2E6300
 608              	.LASF14:
 609 0059 55736167 		.ascii	"UsageFault_Handler\000"
 609      65466175 
 609      6C745F48 
 609      616E646C 
 609      657200
 610              	.LASF5:
 611 006c 6C6F6E67 		.ascii	"long unsigned int\000"
 611      20756E73 
 611      69676E65 
 611      6420696E 
 611      7400
 612              	.LASF13:
 613 007e 42757346 		.ascii	"BusFault_Handler\000"
 613      61756C74 
 613      5F48616E 
 613      646C6572 
 613      00
 614              	.LASF7:
 615 008f 6C6F6E67 		.ascii	"long long unsigned int\000"
 615      206C6F6E 
 615      6720756E 
 615      7369676E 
 615      65642069 
 616              	.LASF20:
ARM GAS  /tmp/ccLyDO9R.s 			page 15


 617 00a6 2F686F6D 		.ascii	"/home/zbanks/hackboard/firmware\000"
 617      652F7A62 
 617      616E6B73 
 617      2F686163 
 617      6B626F61 
 618              	.LASF11:
 619 00c6 48617264 		.ascii	"HardFault_Handler\000"
 619      4661756C 
 619      745F4861 
 619      6E646C65 
 619      7200
 620              	.LASF10:
 621 00d8 4E4D495F 		.ascii	"NMI_Handler\000"
 621      48616E64 
 621      6C657200 
 622              	.LASF1:
 623 00e4 756E7369 		.ascii	"unsigned char\000"
 623      676E6564 
 623      20636861 
 623      7200
 624              	.LASF12:
 625 00f2 4D656D4D 		.ascii	"MemManage_Handler\000"
 625      616E6167 
 625      655F4861 
 625      6E646C65 
 625      7200
 626              	.LASF22:
 627 0104 53797354 		.ascii	"SysTick_Handler\000"
 627      69636B5F 
 627      48616E64 
 627      6C657200 
 628              	.LASF4:
 629 0114 6C6F6E67 		.ascii	"long int\000"
 629      20696E74 
 629      00
 630              	.LASF18:
 631 011d 474E5520 		.ascii	"GNU C 4.8.3 20131129 (release) [ARM/embedded-4_8-br"
 631      4320342E 
 631      382E3320 
 631      32303133 
 631      31313239 
 632 0150 616E6368 		.ascii	"anch revision 205641] -mcpu=cortex-m3 -mthumb -g -g"
 632      20726576 
 632      6973696F 
 632      6E203230 
 632      35363431 
 633 0183 64776172 		.ascii	"dwarf-2 -O3 -std=c99 -fomit-frame-pointer\000"
 633      662D3220 
 633      2D4F3320 
 633      2D737464 
 633      3D633939 
 634              	.LASF23:
 635 01ad 49544D5F 		.ascii	"ITM_RxBuffer\000"
 635      52784275 
 635      66666572 
 635      00
 636              	.LASF0:
ARM GAS  /tmp/ccLyDO9R.s 			page 16


 637 01ba 7369676E 		.ascii	"signed char\000"
 637      65642063 
 637      68617200 
 638              	.LASF8:
 639 01c6 756E7369 		.ascii	"unsigned int\000"
 639      676E6564 
 639      20696E74 
 639      00
 640              	.LASF15:
 641 01d3 5356435F 		.ascii	"SVC_Handler\000"
 641      48616E64 
 641      6C657200 
 642              	.LASF16:
 643 01df 44656275 		.ascii	"DebugMon_Handler\000"
 643      674D6F6E 
 643      5F48616E 
 643      646C6572 
 643      00
 644              	.LASF2:
 645 01f0 73686F72 		.ascii	"short int\000"
 645      7420696E 
 645      7400
 646              	.LASF21:
 647 01fa 696E7433 		.ascii	"int32_t\000"
 647      325F7400 
 648              	.LASF9:
 649 0202 73697A65 		.ascii	"sizetype\000"
 649      74797065 
 649      00
 650              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20131129 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccLyDO9R.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_it.c
     /tmp/ccLyDO9R.s:73     .text:00000000 $t
     /tmp/ccLyDO9R.s:78     .text:00000000 NMI_Handler
     /tmp/ccLyDO9R.s:95     .text:00000004 HardFault_Handler
     /tmp/ccLyDO9R.s:113    .text:00000008 MemManage_Handler
     /tmp/ccLyDO9R.s:131    .text:0000000c BusFault_Handler
     /tmp/ccLyDO9R.s:149    .text:00000010 UsageFault_Handler
     /tmp/ccLyDO9R.s:167    .text:00000014 SVC_Handler
     /tmp/ccLyDO9R.s:183    .text:00000018 DebugMon_Handler
     /tmp/ccLyDO9R.s:199    .text:0000001c PendSV_Handler
     /tmp/ccLyDO9R.s:215    .text:00000020 SysTick_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TimingDelay_Decrement
